{"ast":null,"code":"/* interact.js 1.10.1 | https://raw.github.com/taye/interact.js/master/LICENSE */\n!function (t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : (\"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : this).interact = t();\n}(function () {\n  var t = {};\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  }), t.default = void 0, t.default = function (t) {\n    return !(!t || !t.Window) && t instanceof t.Window;\n  };\n  var e = {};\n  Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  }), e.init = i, e.getWindow = function (e) {\n    return (0, t.default)(e) ? e : (e.ownerDocument || e).defaultView || r.window;\n  }, e.window = e.realWindow = void 0;\n  var n = void 0;\n  e.realWindow = n;\n  var r = void 0;\n\n  function i(t) {\n    e.realWindow = n = t;\n    var i = t.document.createTextNode(\"\");\n    i.ownerDocument !== t.document && \"function\" == typeof t.wrap && t.wrap(i) === i && (t = t.wrap(t)), e.window = r = t;\n  }\n\n  e.window = r, \"undefined\" != typeof window && window && i(window);\n  var o = {};\n  Object.defineProperty(o, \"__esModule\", {\n    value: !0\n  }), o.default = void 0;\n\n  var a = function a(t) {\n    return !!t && \"object\" == typeof t;\n  },\n      s = function s(t) {\n    return \"function\" == typeof t;\n  },\n      l = {\n    window: function window(n) {\n      return n === e.window || (0, t.default)(n);\n    },\n    docFrag: function docFrag(t) {\n      return a(t) && 11 === t.nodeType;\n    },\n    object: a,\n    func: s,\n    number: function number(t) {\n      return \"number\" == typeof t;\n    },\n    bool: function bool(t) {\n      return \"boolean\" == typeof t;\n    },\n    string: function string(t) {\n      return \"string\" == typeof t;\n    },\n    element: function element(t) {\n      if (!t || \"object\" != typeof t) return !1;\n      var n = e.getWindow(t) || e.window;\n      return /object|function/.test(typeof n.Element) ? t instanceof n.Element : 1 === t.nodeType && \"string\" == typeof t.nodeName;\n    },\n    plainObject: function plainObject(t) {\n      return a(t) && !!t.constructor && /function Object\\b/.test(t.constructor.toString());\n    },\n    array: function array(t) {\n      return a(t) && void 0 !== t.length && s(t.splice);\n    }\n  };\n\n  o.default = l;\n  var c = {};\n\n  function u(t) {\n    var e = t.interaction;\n\n    if (\"drag\" === e.prepared.name) {\n      var n = e.prepared.axis;\n      \"x\" === n ? (e.coords.cur.page.y = e.coords.start.page.y, e.coords.cur.client.y = e.coords.start.client.y, e.coords.velocity.client.y = 0, e.coords.velocity.page.y = 0) : \"y\" === n && (e.coords.cur.page.x = e.coords.start.page.x, e.coords.cur.client.x = e.coords.start.client.x, e.coords.velocity.client.x = 0, e.coords.velocity.page.x = 0);\n    }\n  }\n\n  function d(t) {\n    var e = t.iEvent,\n        n = t.interaction;\n\n    if (\"drag\" === n.prepared.name) {\n      var r = n.prepared.axis;\n\n      if (\"x\" === r || \"y\" === r) {\n        var i = \"x\" === r ? \"y\" : \"x\";\n        e.page[i] = n.coords.start.page[i], e.client[i] = n.coords.start.client[i], e.delta[i] = 0;\n      }\n    }\n  }\n\n  Object.defineProperty(c, \"__esModule\", {\n    value: !0\n  }), c.default = void 0;\n  var f = {\n    id: \"actions/drag\",\n    install: function install(t) {\n      var e = t.actions,\n          n = t.Interactable,\n          r = t.defaults;\n      n.prototype.draggable = f.draggable, e.map.drag = f, e.methodDict.drag = \"draggable\", r.actions.drag = f.defaults;\n    },\n    listeners: {\n      \"interactions:before-action-move\": u,\n      \"interactions:action-resume\": u,\n      \"interactions:action-move\": d,\n      \"auto-start:check\": function autoStartCheck(t) {\n        var e = t.interaction,\n            n = t.interactable,\n            r = t.buttons,\n            i = n.options.drag;\n        if (i && i.enabled && (!e.pointerIsDown || !/mouse|pointer/.test(e.pointerType) || 0 != (r & n.options.drag.mouseButtons))) return t.action = {\n          name: \"drag\",\n          axis: \"start\" === i.lockAxis ? i.startAxis : i.lockAxis\n        }, !1;\n      }\n    },\n    draggable: function draggable(t) {\n      return o.default.object(t) ? (this.options.drag.enabled = !1 !== t.enabled, this.setPerAction(\"drag\", t), this.setOnEvents(\"drag\", t), /^(xy|x|y|start)$/.test(t.lockAxis) && (this.options.drag.lockAxis = t.lockAxis), /^(xy|x|y)$/.test(t.startAxis) && (this.options.drag.startAxis = t.startAxis), this) : o.default.bool(t) ? (this.options.drag.enabled = t, this) : this.options.drag;\n    },\n    beforeMove: u,\n    move: d,\n    defaults: {\n      startAxis: \"xy\",\n      lockAxis: \"xy\"\n    },\n    getCursor: function getCursor() {\n      return \"move\";\n    }\n  },\n      p = f;\n  c.default = p;\n  var v = {};\n  Object.defineProperty(v, \"__esModule\", {\n    value: !0\n  }), v.default = void 0;\n  var h = {\n    init: function init(t) {\n      var e = t;\n      h.document = e.document, h.DocumentFragment = e.DocumentFragment || g, h.SVGElement = e.SVGElement || g, h.SVGSVGElement = e.SVGSVGElement || g, h.SVGElementInstance = e.SVGElementInstance || g, h.Element = e.Element || g, h.HTMLElement = e.HTMLElement || h.Element, h.Event = e.Event, h.Touch = e.Touch || g, h.PointerEvent = e.PointerEvent || e.MSPointerEvent;\n    },\n    document: null,\n    DocumentFragment: null,\n    SVGElement: null,\n    SVGSVGElement: null,\n    SVGElementInstance: null,\n    Element: null,\n    HTMLElement: null,\n    Event: null,\n    Touch: null,\n    PointerEvent: null\n  };\n\n  function g() {}\n\n  var m = h;\n  v.default = m;\n  var y = {};\n  Object.defineProperty(y, \"__esModule\", {\n    value: !0\n  }), y.default = void 0;\n  var b = {\n    init: function init(t) {\n      var n = v.default.Element,\n          r = e.window.navigator;\n      b.supportsTouch = \"ontouchstart\" in t || o.default.func(t.DocumentTouch) && v.default.document instanceof t.DocumentTouch, b.supportsPointerEvent = !1 !== r.pointerEnabled && !!v.default.PointerEvent, b.isIOS = /iP(hone|od|ad)/.test(r.platform), b.isIOS7 = /iP(hone|od|ad)/.test(r.platform) && /OS 7[^\\d]/.test(r.appVersion), b.isIe9 = /MSIE 9/.test(r.userAgent), b.isOperaMobile = \"Opera\" === r.appName && b.supportsTouch && /Presto/.test(r.userAgent), b.prefixedMatchesSelector = \"matches\" in n.prototype ? \"matches\" : \"webkitMatchesSelector\" in n.prototype ? \"webkitMatchesSelector\" : \"mozMatchesSelector\" in n.prototype ? \"mozMatchesSelector\" : \"oMatchesSelector\" in n.prototype ? \"oMatchesSelector\" : \"msMatchesSelector\", b.pEventTypes = b.supportsPointerEvent ? v.default.PointerEvent === t.MSPointerEvent ? {\n        up: \"MSPointerUp\",\n        down: \"MSPointerDown\",\n        over: \"mouseover\",\n        out: \"mouseout\",\n        move: \"MSPointerMove\",\n        cancel: \"MSPointerCancel\"\n      } : {\n        up: \"pointerup\",\n        down: \"pointerdown\",\n        over: \"pointerover\",\n        out: \"pointerout\",\n        move: \"pointermove\",\n        cancel: \"pointercancel\"\n      } : null, b.wheelEvent = \"onmousewheel\" in v.default.document ? \"mousewheel\" : \"wheel\";\n    },\n    supportsTouch: null,\n    supportsPointerEvent: null,\n    isIOS7: null,\n    isIOS: null,\n    isIe9: null,\n    isOperaMobile: null,\n    prefixedMatchesSelector: null,\n    pEventTypes: null,\n    wheelEvent: null\n  },\n      x = b;\n  y.default = x;\n  var _ = {};\n\n  function w(t) {\n    var e = t.parentNode;\n\n    if (o.default.docFrag(e)) {\n      for (; (e = e.host) && o.default.docFrag(e);) {\n        ;\n      }\n\n      return e;\n    }\n\n    return e;\n  }\n\n  function P(t, n) {\n    return e.window !== e.realWindow && (n = n.replace(/\\/deep\\//g, \" \")), t[y.default.prefixedMatchesSelector](n);\n  }\n\n  Object.defineProperty(_, \"__esModule\", {\n    value: !0\n  }), _.nodeContains = function (t, e) {\n    if (t.contains) return t.contains(e);\n\n    for (; e;) {\n      if (e === t) return !0;\n      e = e.parentNode;\n    }\n\n    return !1;\n  }, _.closest = function (t, e) {\n    for (; o.default.element(t);) {\n      if (P(t, e)) return t;\n      t = w(t);\n    }\n\n    return null;\n  }, _.parentNode = w, _.matchesSelector = P, _.indexOfDeepestElement = function (t) {\n    for (var n, r = [], i = 0; i < t.length; i++) {\n      var o = t[i],\n          a = t[n];\n      if (o && i !== n) if (a) {\n        var s = E(o),\n            l = E(a);\n        if (s !== o.ownerDocument) if (l !== o.ownerDocument) {\n          if (s !== l) {\n            r = r.length ? r : S(a);\n            var c = void 0;\n\n            if (a instanceof v.default.HTMLElement && o instanceof v.default.SVGElement && !(o instanceof v.default.SVGSVGElement)) {\n              if (o === l) continue;\n              c = o.ownerSVGElement;\n            } else c = o;\n\n            for (var u = S(c, a.ownerDocument), d = 0; u[d] && u[d] === r[d];) {\n              d++;\n            }\n\n            for (var f = [u[d - 1], u[d], r[d]], p = f[0].lastChild; p;) {\n              if (p === f[1]) {\n                n = i, r = u;\n                break;\n              }\n\n              if (p === f[2]) break;\n              p = p.previousSibling;\n            }\n          } else h = o, g = a, void 0, void 0, (parseInt(e.getWindow(h).getComputedStyle(h).zIndex, 10) || 0) >= (parseInt(e.getWindow(g).getComputedStyle(g).zIndex, 10) || 0) && (n = i);\n        } else n = i;\n      } else n = i;\n    }\n\n    var h, g;\n    return n;\n  }, _.matchesUpTo = function (t, e, n) {\n    for (; o.default.element(t);) {\n      if (P(t, e)) return !0;\n      if ((t = w(t)) === n) return P(t, e);\n    }\n\n    return !1;\n  }, _.getActualElement = function (t) {\n    return t.correspondingUseElement || t;\n  }, _.getScrollXY = M, _.getElementClientRect = O, _.getElementRect = function (t) {\n    var n = O(t);\n\n    if (!y.default.isIOS7 && n) {\n      var r = M(e.getWindow(t));\n      n.left += r.x, n.right += r.x, n.top += r.y, n.bottom += r.y;\n    }\n\n    return n;\n  }, _.getPath = function (t) {\n    for (var e = []; t;) {\n      e.push(t), t = w(t);\n    }\n\n    return e;\n  }, _.trySelector = function (t) {\n    return !!o.default.string(t) && (v.default.document.querySelector(t), !0);\n  };\n\n  var E = function E(t) {\n    return t.parentNode || t.host;\n  };\n\n  function S(t, e) {\n    for (var n, r = [], i = t; (n = E(i)) && i !== e && n !== i.ownerDocument;) {\n      r.unshift(i), i = n;\n    }\n\n    return r;\n  }\n\n  function M(t) {\n    return {\n      x: (t = t || e.window).scrollX || t.document.documentElement.scrollLeft,\n      y: t.scrollY || t.document.documentElement.scrollTop\n    };\n  }\n\n  function O(t) {\n    var e = t instanceof v.default.SVGElement ? t.getBoundingClientRect() : t.getClientRects()[0];\n    return e && {\n      left: e.left,\n      right: e.right,\n      top: e.top,\n      bottom: e.bottom,\n      width: e.width || e.right - e.left,\n      height: e.height || e.bottom - e.top\n    };\n  }\n\n  var T = {};\n  Object.defineProperty(T, \"__esModule\", {\n    value: !0\n  }), T.default = function (t, e) {\n    for (var n in e) {\n      t[n] = e[n];\n    }\n\n    return t;\n  };\n  var I = {};\n\n  function D(t, e, n) {\n    return \"parent\" === t ? (0, _.parentNode)(n) : \"self\" === t ? e.getRect(n) : (0, _.closest)(n, t);\n  }\n\n  Object.defineProperty(I, \"__esModule\", {\n    value: !0\n  }), I.getStringOptionResult = D, I.resolveRectLike = function (t, e, n, r) {\n    var i = t;\n    return o.default.string(i) ? i = D(i, e, n) : o.default.func(i) && (i = i.apply(void 0, r)), o.default.element(i) && (i = (0, _.getElementRect)(i)), i;\n  }, I.rectToXY = function (t) {\n    return t && {\n      x: \"x\" in t ? t.x : t.left,\n      y: \"y\" in t ? t.y : t.top\n    };\n  }, I.xywhToTlbr = function (t) {\n    return !t || \"left\" in t && \"top\" in t || ((t = (0, T.default)({}, t)).left = t.x || 0, t.top = t.y || 0, t.right = t.right || t.left + t.width, t.bottom = t.bottom || t.top + t.height), t;\n  }, I.tlbrToXywh = function (t) {\n    return !t || \"x\" in t && \"y\" in t || ((t = (0, T.default)({}, t)).x = t.left || 0, t.y = t.top || 0, t.width = t.width || (t.right || 0) - t.x, t.height = t.height || (t.bottom || 0) - t.y), t;\n  }, I.addEdges = function (t, e, n) {\n    t.left && (e.left += n.x), t.right && (e.right += n.x), t.top && (e.top += n.y), t.bottom && (e.bottom += n.y), e.width = e.right - e.left, e.height = e.bottom - e.top;\n  };\n  var j = {};\n  Object.defineProperty(j, \"__esModule\", {\n    value: !0\n  }), j.default = function (t, e, n) {\n    var r = t.options[n],\n        i = r && r.origin || t.options.origin,\n        o = (0, I.resolveRectLike)(i, t, e, [t && e]);\n    return (0, I.rectToXY)(o) || {\n      x: 0,\n      y: 0\n    };\n  };\n  var z = {};\n\n  function A(t) {\n    return t.trim().split(/ +/);\n  }\n\n  Object.defineProperty(z, \"__esModule\", {\n    value: !0\n  }), z.default = function t(e, n, r) {\n    if (r = r || {}, o.default.string(e) && -1 !== e.search(\" \") && (e = A(e)), o.default.array(e)) return e.reduce(function (e, i) {\n      return (0, T.default)(e, t(i, n, r));\n    }, r);\n    if (o.default.object(e) && (n = e, e = \"\"), o.default.func(n)) r[e] = r[e] || [], r[e].push(n);else if (o.default.array(n)) for (var i = 0; i < n.length; i++) {\n      var a;\n      a = n[i], t(e, a, r);\n    } else if (o.default.object(n)) for (var s in n) {\n      var l = A(s).map(function (t) {\n        return \"\" + e + t;\n      });\n      t(l, n[s], r);\n    }\n    return r;\n  };\n  var C = {};\n  Object.defineProperty(C, \"__esModule\", {\n    value: !0\n  }), C.default = void 0, C.default = function (t, e) {\n    return Math.sqrt(t * t + e * e);\n  };\n  var k = {};\n\n  function R(t, e) {\n    for (var n in e) {\n      var r = R.prefixedPropREs,\n          i = !1;\n\n      for (var o in r) {\n        if (0 === n.indexOf(o) && r[o].test(n)) {\n          i = !0;\n          break;\n        }\n      }\n\n      i || \"function\" == typeof e[n] || (t[n] = e[n]);\n    }\n\n    return t;\n  }\n\n  Object.defineProperty(k, \"__esModule\", {\n    value: !0\n  }), k.default = void 0, R.prefixedPropREs = {\n    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n    moz: /(Pressure)$/\n  };\n  var F = R;\n  k.default = F;\n  var X = {};\n\n  function Y(t) {\n    return t instanceof v.default.Event || t instanceof v.default.Touch;\n  }\n\n  function W(t, e, n) {\n    return t = t || \"page\", (n = n || {}).x = e[t + \"X\"], n.y = e[t + \"Y\"], n;\n  }\n\n  function L(t, e) {\n    return e = e || {\n      x: 0,\n      y: 0\n    }, y.default.isOperaMobile && Y(t) ? (W(\"screen\", t, e), e.x += window.scrollX, e.y += window.scrollY) : W(\"page\", t, e), e;\n  }\n\n  function B(t, e) {\n    return e = e || {}, y.default.isOperaMobile && Y(t) ? W(\"screen\", t, e) : W(\"client\", t, e), e;\n  }\n\n  function N(t) {\n    var e = [];\n    return o.default.array(t) ? (e[0] = t[0], e[1] = t[1]) : \"touchend\" === t.type ? 1 === t.touches.length ? (e[0] = t.touches[0], e[1] = t.changedTouches[0]) : 0 === t.touches.length && (e[0] = t.changedTouches[0], e[1] = t.changedTouches[1]) : (e[0] = t.touches[0], e[1] = t.touches[1]), e;\n  }\n\n  function V(t) {\n    for (var e = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    }, n = 0; n < t.length; n++) {\n      var r = t[n];\n\n      for (var i in e) {\n        e[i] += r[i];\n      }\n    }\n\n    for (var o in e) {\n      e[o] /= t.length;\n    }\n\n    return e;\n  }\n\n  Object.defineProperty(X, \"__esModule\", {\n    value: !0\n  }), X.copyCoords = function (t, e) {\n    t.page = t.page || {}, t.page.x = e.page.x, t.page.y = e.page.y, t.client = t.client || {}, t.client.x = e.client.x, t.client.y = e.client.y, t.timeStamp = e.timeStamp;\n  }, X.setCoordDeltas = function (t, e, n) {\n    t.page.x = n.page.x - e.page.x, t.page.y = n.page.y - e.page.y, t.client.x = n.client.x - e.client.x, t.client.y = n.client.y - e.client.y, t.timeStamp = n.timeStamp - e.timeStamp;\n  }, X.setCoordVelocity = function (t, e) {\n    var n = Math.max(e.timeStamp / 1e3, .001);\n    t.page.x = e.page.x / n, t.page.y = e.page.y / n, t.client.x = e.client.x / n, t.client.y = e.client.y / n, t.timeStamp = n;\n  }, X.setZeroCoords = function (t) {\n    t.page.x = 0, t.page.y = 0, t.client.x = 0, t.client.y = 0;\n  }, X.isNativePointer = Y, X.getXY = W, X.getPageXY = L, X.getClientXY = B, X.getPointerId = function (t) {\n    return o.default.number(t.pointerId) ? t.pointerId : t.identifier;\n  }, X.setCoords = function (t, e, n) {\n    var r = e.length > 1 ? V(e) : e[0];\n    L(r, t.page), B(r, t.client), t.timeStamp = n;\n  }, X.getTouchPair = N, X.pointerAverage = V, X.touchBBox = function (t) {\n    if (!t.length) return null;\n    var e = N(t),\n        n = Math.min(e[0].pageX, e[1].pageX),\n        r = Math.min(e[0].pageY, e[1].pageY),\n        i = Math.max(e[0].pageX, e[1].pageX),\n        o = Math.max(e[0].pageY, e[1].pageY);\n    return {\n      x: n,\n      y: r,\n      left: n,\n      top: r,\n      right: i,\n      bottom: o,\n      width: i - n,\n      height: o - r\n    };\n  }, X.touchDistance = function (t, e) {\n    var n = e + \"X\",\n        r = e + \"Y\",\n        i = N(t),\n        o = i[0][n] - i[1][n],\n        a = i[0][r] - i[1][r];\n    return (0, C.default)(o, a);\n  }, X.touchAngle = function (t, e) {\n    var n = e + \"X\",\n        r = e + \"Y\",\n        i = N(t),\n        o = i[1][n] - i[0][n],\n        a = i[1][r] - i[0][r];\n    return 180 * Math.atan2(a, o) / Math.PI;\n  }, X.getPointerType = function (t) {\n    return o.default.string(t.pointerType) ? t.pointerType : o.default.number(t.pointerType) ? [void 0, void 0, \"touch\", \"pen\", \"mouse\"][t.pointerType] : /touch/.test(t.type) || t instanceof v.default.Touch ? \"touch\" : \"mouse\";\n  }, X.getEventTargets = function (t) {\n    var e = o.default.func(t.composedPath) ? t.composedPath() : t.path;\n    return [_.getActualElement(e ? e[0] : t.target), _.getActualElement(t.currentTarget)];\n  }, X.newCoords = function () {\n    return {\n      page: {\n        x: 0,\n        y: 0\n      },\n      client: {\n        x: 0,\n        y: 0\n      },\n      timeStamp: 0\n    };\n  }, X.coordsToEvent = function (t) {\n    return {\n      coords: t,\n\n      get page() {\n        return this.coords.page;\n      },\n\n      get client() {\n        return this.coords.client;\n      },\n\n      get timeStamp() {\n        return this.coords.timeStamp;\n      },\n\n      get pageX() {\n        return this.coords.page.x;\n      },\n\n      get pageY() {\n        return this.coords.page.y;\n      },\n\n      get clientX() {\n        return this.coords.client.x;\n      },\n\n      get clientY() {\n        return this.coords.client.y;\n      },\n\n      get pointerId() {\n        return this.coords.pointerId;\n      },\n\n      get target() {\n        return this.coords.target;\n      },\n\n      get type() {\n        return this.coords.type;\n      },\n\n      get pointerType() {\n        return this.coords.pointerType;\n      },\n\n      get buttons() {\n        return this.coords.buttons;\n      },\n\n      preventDefault: function preventDefault() {}\n    };\n  }, Object.defineProperty(X, \"pointerExtend\", {\n    enumerable: !0,\n    get: function get() {\n      return k.default;\n    }\n  });\n  var q = {};\n  Object.defineProperty(q, \"__esModule\", {\n    value: !0\n  }), q.BaseEvent = void 0;\n\n  var U = function () {\n    function t(t) {\n      this.type = void 0, this.target = void 0, this.currentTarget = void 0, this.interactable = void 0, this._interaction = void 0, this.timeStamp = void 0, this.immediatePropagationStopped = !1, this.propagationStopped = !1, this._interaction = t;\n    }\n\n    var e = t.prototype;\n    return e.preventDefault = function () {}, e.stopPropagation = function () {\n      this.propagationStopped = !0;\n    }, e.stopImmediatePropagation = function () {\n      this.immediatePropagationStopped = this.propagationStopped = !0;\n    }, t;\n  }();\n\n  q.BaseEvent = U, Object.defineProperty(U.prototype, \"interaction\", {\n    get: function get() {\n      return this._interaction._proxy;\n    },\n    set: function set() {}\n  });\n  var G = {};\n  Object.defineProperty(G, \"__esModule\", {\n    value: !0\n  }), G.find = G.findIndex = G.from = G.merge = G.remove = G.contains = void 0, G.contains = function (t, e) {\n    return -1 !== t.indexOf(e);\n  }, G.remove = function (t, e) {\n    return t.splice(t.indexOf(e), 1);\n  };\n\n  var H = function H(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      t.push(r);\n    }\n\n    return t;\n  };\n\n  G.merge = H, G.from = function (t) {\n    return H([], t);\n  };\n\n  var $ = function $(t, e) {\n    for (var n = 0; n < t.length; n++) {\n      if (e(t[n], n, t)) return n;\n    }\n\n    return -1;\n  };\n\n  G.findIndex = $, G.find = function (t, e) {\n    return t[$(t, e)];\n  };\n  var K = {};\n  Object.defineProperty(K, \"__esModule\", {\n    value: !0\n  }), K.DropEvent = void 0;\n\n  var Z = function (t) {\n    var e, n;\n\n    function r(e, n, r) {\n      var i;\n      (i = t.call(this, n._interaction) || this).target = void 0, i.dropzone = void 0, i.dragEvent = void 0, i.relatedTarget = void 0, i.draggable = void 0, i.timeStamp = void 0, i.propagationStopped = !1, i.immediatePropagationStopped = !1;\n      var o = \"dragleave\" === r ? e.prev : e.cur,\n          a = o.element,\n          s = o.dropzone;\n      return i.type = r, i.target = a, i.currentTarget = a, i.dropzone = s, i.dragEvent = n, i.relatedTarget = n.target, i.draggable = n.interactable, i.timeStamp = n.timeStamp, i;\n    }\n\n    n = t, (e = r).prototype = Object.create(n.prototype), e.prototype.constructor = e, e.__proto__ = n;\n    var i = r.prototype;\n    return i.reject = function () {\n      var t = this,\n          e = this._interaction.dropState;\n      if (\"dropactivate\" === this.type || this.dropzone && e.cur.dropzone === this.dropzone && e.cur.element === this.target) if (e.prev.dropzone = this.dropzone, e.prev.element = this.target, e.rejected = !0, e.events.enter = null, this.stopImmediatePropagation(), \"dropactivate\" === this.type) {\n        var n = e.activeDrops,\n            i = G.findIndex(n, function (e) {\n          var n = e.dropzone,\n              r = e.element;\n          return n === t.dropzone && r === t.target;\n        });\n        e.activeDrops.splice(i, 1);\n        var o = new r(e, this.dragEvent, \"dropdeactivate\");\n        o.dropzone = this.dropzone, o.target = this.target, this.dropzone.fire(o);\n      } else this.dropzone.fire(new r(e, this.dragEvent, \"dragleave\"));\n    }, i.preventDefault = function () {}, i.stopPropagation = function () {\n      this.propagationStopped = !0;\n    }, i.stopImmediatePropagation = function () {\n      this.immediatePropagationStopped = this.propagationStopped = !0;\n    }, r;\n  }(q.BaseEvent);\n\n  K.DropEvent = Z;\n  var J = {};\n\n  function Q(t, e) {\n    for (var n = 0; n < t.slice().length; n++) {\n      var r = t.slice()[n],\n          i = r.dropzone,\n          o = r.element;\n      e.dropzone = i, e.target = o, i.fire(e), e.propagationStopped = e.immediatePropagationStopped = !1;\n    }\n  }\n\n  function tt(t, e) {\n    for (var n = function (t, e) {\n      for (var n = t.interactables, r = [], i = 0; i < n.list.length; i++) {\n        var a = n.list[i];\n\n        if (a.options.drop.enabled) {\n          var s = a.options.drop.accept;\n          if (!(o.default.element(s) && s !== e || o.default.string(s) && !_.matchesSelector(e, s) || o.default.func(s) && !s({\n            dropzone: a,\n            draggableElement: e\n          }))) for (var l = o.default.string(a.target) ? a._context.querySelectorAll(a.target) : o.default.array(a.target) ? a.target : [a.target], c = 0; c < l.length; c++) {\n            var u = l[c];\n            u !== e && r.push({\n              dropzone: a,\n              element: u\n            });\n          }\n        }\n      }\n\n      return r;\n    }(t, e), r = 0; r < n.length; r++) {\n      var i = n[r];\n      i.rect = i.dropzone.getRect(i.element);\n    }\n\n    return n;\n  }\n\n  function et(t, e, n) {\n    for (var r = t.dropState, i = t.interactable, o = t.element, a = [], s = 0; s < r.activeDrops.length; s++) {\n      var l = r.activeDrops[s],\n          c = l.dropzone,\n          u = l.element,\n          d = l.rect;\n      a.push(c.dropCheck(e, n, i, o, u, d) ? u : null);\n    }\n\n    var f = _.indexOfDeepestElement(a);\n\n    return r.activeDrops[f] || null;\n  }\n\n  function nt(t, e, n) {\n    var r = t.dropState,\n        i = {\n      enter: null,\n      leave: null,\n      activate: null,\n      deactivate: null,\n      move: null,\n      drop: null\n    };\n    return \"dragstart\" === n.type && (i.activate = new K.DropEvent(r, n, \"dropactivate\"), i.activate.target = null, i.activate.dropzone = null), \"dragend\" === n.type && (i.deactivate = new K.DropEvent(r, n, \"dropdeactivate\"), i.deactivate.target = null, i.deactivate.dropzone = null), r.rejected || (r.cur.element !== r.prev.element && (r.prev.dropzone && (i.leave = new K.DropEvent(r, n, \"dragleave\"), n.dragLeave = i.leave.target = r.prev.element, n.prevDropzone = i.leave.dropzone = r.prev.dropzone), r.cur.dropzone && (i.enter = new K.DropEvent(r, n, \"dragenter\"), n.dragEnter = r.cur.element, n.dropzone = r.cur.dropzone)), \"dragend\" === n.type && r.cur.dropzone && (i.drop = new K.DropEvent(r, n, \"drop\"), n.dropzone = r.cur.dropzone, n.relatedTarget = r.cur.element), \"dragmove\" === n.type && r.cur.dropzone && (i.move = new K.DropEvent(r, n, \"dropmove\"), i.move.dragmove = n, n.dropzone = r.cur.dropzone)), i;\n  }\n\n  function rt(t, e) {\n    var n = t.dropState,\n        r = n.activeDrops,\n        i = n.cur,\n        o = n.prev;\n    e.leave && o.dropzone.fire(e.leave), e.enter && i.dropzone.fire(e.enter), e.move && i.dropzone.fire(e.move), e.drop && i.dropzone.fire(e.drop), e.deactivate && Q(r, e.deactivate), n.prev.dropzone = i.dropzone, n.prev.element = i.element;\n  }\n\n  function it(t, e) {\n    var n = t.interaction,\n        r = t.iEvent,\n        i = t.event;\n\n    if (\"dragmove\" === r.type || \"dragend\" === r.type) {\n      var o = n.dropState;\n      e.dynamicDrop && (o.activeDrops = tt(e, n.element));\n      var a = r,\n          s = et(n, a, i);\n      o.rejected = o.rejected && !!s && s.dropzone === o.cur.dropzone && s.element === o.cur.element, o.cur.dropzone = s && s.dropzone, o.cur.element = s && s.element, o.events = nt(n, 0, a);\n    }\n  }\n\n  Object.defineProperty(J, \"__esModule\", {\n    value: !0\n  }), J.default = void 0;\n  var ot = {\n    id: \"actions/drop\",\n    install: function install(t) {\n      var e = t.actions,\n          n = t.interactStatic,\n          r = t.Interactable,\n          i = t.defaults;\n      t.usePlugin(c.default), r.prototype.dropzone = function (t) {\n        return function (t, e) {\n          if (o.default.object(e)) {\n            if (t.options.drop.enabled = !1 !== e.enabled, e.listeners) {\n              var n = (0, z.default)(e.listeners),\n                  r = Object.keys(n).reduce(function (t, e) {\n                return t[/^(enter|leave)/.test(e) ? \"drag\" + e : /^(activate|deactivate|move)/.test(e) ? \"drop\" + e : e] = n[e], t;\n              }, {});\n              t.off(t.options.drop.listeners), t.on(r), t.options.drop.listeners = r;\n            }\n\n            return o.default.func(e.ondrop) && t.on(\"drop\", e.ondrop), o.default.func(e.ondropactivate) && t.on(\"dropactivate\", e.ondropactivate), o.default.func(e.ondropdeactivate) && t.on(\"dropdeactivate\", e.ondropdeactivate), o.default.func(e.ondragenter) && t.on(\"dragenter\", e.ondragenter), o.default.func(e.ondragleave) && t.on(\"dragleave\", e.ondragleave), o.default.func(e.ondropmove) && t.on(\"dropmove\", e.ondropmove), /^(pointer|center)$/.test(e.overlap) ? t.options.drop.overlap = e.overlap : o.default.number(e.overlap) && (t.options.drop.overlap = Math.max(Math.min(1, e.overlap), 0)), \"accept\" in e && (t.options.drop.accept = e.accept), \"checker\" in e && (t.options.drop.checker = e.checker), t;\n          }\n\n          return o.default.bool(e) ? (t.options.drop.enabled = e, t) : t.options.drop;\n        }(this, t);\n      }, r.prototype.dropCheck = function (t, e, n, r, i, a) {\n        return function (t, e, n, r, i, a, s) {\n          var l = !1;\n          if (!(s = s || t.getRect(a))) return !!t.options.drop.checker && t.options.drop.checker(e, n, l, t, a, r, i);\n          var c = t.options.drop.overlap;\n\n          if (\"pointer\" === c) {\n            var u = (0, j.default)(r, i, \"drag\"),\n                d = X.getPageXY(e);\n            d.x += u.x, d.y += u.y;\n            var f = d.x > s.left && d.x < s.right,\n                p = d.y > s.top && d.y < s.bottom;\n            l = f && p;\n          }\n\n          var v = r.getRect(i);\n\n          if (v && \"center\" === c) {\n            var h = v.left + v.width / 2,\n                g = v.top + v.height / 2;\n            l = h >= s.left && h <= s.right && g >= s.top && g <= s.bottom;\n          }\n\n          v && o.default.number(c) && (l = Math.max(0, Math.min(s.right, v.right) - Math.max(s.left, v.left)) * Math.max(0, Math.min(s.bottom, v.bottom) - Math.max(s.top, v.top)) / (v.width * v.height) >= c);\n          return t.options.drop.checker && (l = t.options.drop.checker(e, n, l, t, a, r, i)), l;\n        }(this, t, e, n, r, i, a);\n      }, n.dynamicDrop = function (e) {\n        return o.default.bool(e) ? (t.dynamicDrop = e, n) : t.dynamicDrop;\n      }, (0, T.default)(e.phaselessTypes, {\n        dragenter: !0,\n        dragleave: !0,\n        dropactivate: !0,\n        dropdeactivate: !0,\n        dropmove: !0,\n        drop: !0\n      }), e.methodDict.drop = \"dropzone\", t.dynamicDrop = !1, i.actions.drop = ot.defaults;\n    },\n    listeners: {\n      \"interactions:before-action-start\": function interactionsBeforeActionStart(t) {\n        var e = t.interaction;\n        \"drag\" === e.prepared.name && (e.dropState = {\n          cur: {\n            dropzone: null,\n            element: null\n          },\n          prev: {\n            dropzone: null,\n            element: null\n          },\n          rejected: null,\n          events: null,\n          activeDrops: []\n        });\n      },\n      \"interactions:after-action-start\": function interactionsAfterActionStart(t, e) {\n        var n = t.interaction,\n            r = (t.event, t.iEvent);\n\n        if (\"drag\" === n.prepared.name) {\n          var i = n.dropState;\n          i.activeDrops = null, i.events = null, i.activeDrops = tt(e, n.element), i.events = nt(n, 0, r), i.events.activate && (Q(i.activeDrops, i.events.activate), e.fire(\"actions/drop:start\", {\n            interaction: n,\n            dragEvent: r\n          }));\n        }\n      },\n      \"interactions:action-move\": it,\n      \"interactions:after-action-move\": function interactionsAfterActionMove(t, e) {\n        var n = t.interaction,\n            r = t.iEvent;\n        \"drag\" === n.prepared.name && (rt(n, n.dropState.events), e.fire(\"actions/drop:move\", {\n          interaction: n,\n          dragEvent: r\n        }), n.dropState.events = {});\n      },\n      \"interactions:action-end\": function interactionsActionEnd(t, e) {\n        if (\"drag\" === t.interaction.prepared.name) {\n          var n = t.interaction,\n              r = t.iEvent;\n          it(t, e), rt(n, n.dropState.events), e.fire(\"actions/drop:end\", {\n            interaction: n,\n            dragEvent: r\n          });\n        }\n      },\n      \"interactions:stop\": function interactionsStop(t) {\n        var e = t.interaction;\n\n        if (\"drag\" === e.prepared.name) {\n          var n = e.dropState;\n          n && (n.activeDrops = null, n.events = null, n.cur.dropzone = null, n.cur.element = null, n.prev.dropzone = null, n.prev.element = null, n.rejected = !1);\n        }\n      }\n    },\n    getActiveDrops: tt,\n    getDrop: et,\n    getDropEvents: nt,\n    fireDropEvents: rt,\n    defaults: {\n      enabled: !1,\n      accept: null,\n      overlap: \"pointer\"\n    }\n  },\n      at = ot;\n  J.default = at;\n  var st = {};\n\n  function lt(t) {\n    var e = t.interaction,\n        n = t.iEvent,\n        r = t.phase;\n\n    if (\"gesture\" === e.prepared.name) {\n      var i = e.pointers.map(function (t) {\n        return t.pointer;\n      }),\n          a = \"start\" === r,\n          s = \"end\" === r,\n          l = e.interactable.options.deltaSource;\n      if (n.touches = [i[0], i[1]], a) n.distance = X.touchDistance(i, l), n.box = X.touchBBox(i), n.scale = 1, n.ds = 0, n.angle = X.touchAngle(i, l), n.da = 0, e.gesture.startDistance = n.distance, e.gesture.startAngle = n.angle;else if (s) {\n        var c = e.prevEvent;\n        n.distance = c.distance, n.box = c.box, n.scale = c.scale, n.ds = 0, n.angle = c.angle, n.da = 0;\n      } else n.distance = X.touchDistance(i, l), n.box = X.touchBBox(i), n.scale = n.distance / e.gesture.startDistance, n.angle = X.touchAngle(i, l), n.ds = n.scale - e.gesture.scale, n.da = n.angle - e.gesture.angle;\n      e.gesture.distance = n.distance, e.gesture.angle = n.angle, o.default.number(n.scale) && n.scale !== 1 / 0 && !isNaN(n.scale) && (e.gesture.scale = n.scale);\n    }\n  }\n\n  Object.defineProperty(st, \"__esModule\", {\n    value: !0\n  }), st.default = void 0;\n  var ct = {\n    id: \"actions/gesture\",\n    before: [\"actions/drag\", \"actions/resize\"],\n    install: function install(t) {\n      var e = t.actions,\n          n = t.Interactable,\n          r = t.defaults;\n      n.prototype.gesturable = function (t) {\n        return o.default.object(t) ? (this.options.gesture.enabled = !1 !== t.enabled, this.setPerAction(\"gesture\", t), this.setOnEvents(\"gesture\", t), this) : o.default.bool(t) ? (this.options.gesture.enabled = t, this) : this.options.gesture;\n      }, e.map.gesture = ct, e.methodDict.gesture = \"gesturable\", r.actions.gesture = ct.defaults;\n    },\n    listeners: {\n      \"interactions:action-start\": lt,\n      \"interactions:action-move\": lt,\n      \"interactions:action-end\": lt,\n      \"interactions:new\": function interactionsNew(t) {\n        t.interaction.gesture = {\n          angle: 0,\n          distance: 0,\n          scale: 1,\n          startAngle: 0,\n          startDistance: 0\n        };\n      },\n      \"auto-start:check\": function autoStartCheck(t) {\n        if (!(t.interaction.pointers.length < 2)) {\n          var e = t.interactable.options.gesture;\n          if (e && e.enabled) return t.action = {\n            name: \"gesture\"\n          }, !1;\n        }\n      }\n    },\n    defaults: {},\n    getCursor: function getCursor() {\n      return \"\";\n    }\n  },\n      ut = ct;\n  st.default = ut;\n  var dt = {};\n\n  function ft(t, e, n, r, i, a, s) {\n    if (!e) return !1;\n\n    if (!0 === e) {\n      var l = o.default.number(a.width) ? a.width : a.right - a.left,\n          c = o.default.number(a.height) ? a.height : a.bottom - a.top;\n      if (s = Math.min(s, Math.abs((\"left\" === t || \"right\" === t ? l : c) / 2)), l < 0 && (\"left\" === t ? t = \"right\" : \"right\" === t && (t = \"left\")), c < 0 && (\"top\" === t ? t = \"bottom\" : \"bottom\" === t && (t = \"top\")), \"left\" === t) return n.x < (l >= 0 ? a.left : a.right) + s;\n      if (\"top\" === t) return n.y < (c >= 0 ? a.top : a.bottom) + s;\n      if (\"right\" === t) return n.x > (l >= 0 ? a.right : a.left) - s;\n      if (\"bottom\" === t) return n.y > (c >= 0 ? a.bottom : a.top) - s;\n    }\n\n    return !!o.default.element(r) && (o.default.element(e) ? e === r : _.matchesUpTo(r, e, i));\n  }\n\n  function pt(t) {\n    var e = t.iEvent,\n        n = t.interaction;\n\n    if (\"resize\" === n.prepared.name && n.resizeAxes) {\n      var r = e;\n      n.interactable.options.resize.square ? (\"y\" === n.resizeAxes ? r.delta.x = r.delta.y : r.delta.y = r.delta.x, r.axes = \"xy\") : (r.axes = n.resizeAxes, \"x\" === n.resizeAxes ? r.delta.y = 0 : \"y\" === n.resizeAxes && (r.delta.x = 0));\n    }\n  }\n\n  Object.defineProperty(dt, \"__esModule\", {\n    value: !0\n  }), dt.default = void 0;\n  var vt = {\n    id: \"actions/resize\",\n    before: [\"actions/drag\"],\n    install: function install(t) {\n      var e = t.actions,\n          n = t.browser,\n          r = t.Interactable,\n          i = t.defaults;\n      vt.cursors = function (t) {\n        return t.isIe9 ? {\n          x: \"e-resize\",\n          y: \"s-resize\",\n          xy: \"se-resize\",\n          top: \"n-resize\",\n          left: \"w-resize\",\n          bottom: \"s-resize\",\n          right: \"e-resize\",\n          topleft: \"se-resize\",\n          bottomright: \"se-resize\",\n          topright: \"ne-resize\",\n          bottomleft: \"ne-resize\"\n        } : {\n          x: \"ew-resize\",\n          y: \"ns-resize\",\n          xy: \"nwse-resize\",\n          top: \"ns-resize\",\n          left: \"ew-resize\",\n          bottom: \"ns-resize\",\n          right: \"ew-resize\",\n          topleft: \"nwse-resize\",\n          bottomright: \"nwse-resize\",\n          topright: \"nesw-resize\",\n          bottomleft: \"nesw-resize\"\n        };\n      }(n), vt.defaultMargin = n.supportsTouch || n.supportsPointerEvent ? 20 : 10, r.prototype.resizable = function (e) {\n        return function (t, e, n) {\n          return o.default.object(e) ? (t.options.resize.enabled = !1 !== e.enabled, t.setPerAction(\"resize\", e), t.setOnEvents(\"resize\", e), o.default.string(e.axis) && /^x$|^y$|^xy$/.test(e.axis) ? t.options.resize.axis = e.axis : null === e.axis && (t.options.resize.axis = n.defaults.actions.resize.axis), o.default.bool(e.preserveAspectRatio) ? t.options.resize.preserveAspectRatio = e.preserveAspectRatio : o.default.bool(e.square) && (t.options.resize.square = e.square), t) : o.default.bool(e) ? (t.options.resize.enabled = e, t) : t.options.resize;\n        }(this, e, t);\n      }, e.map.resize = vt, e.methodDict.resize = \"resizable\", i.actions.resize = vt.defaults;\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        t.interaction.resizeAxes = \"xy\";\n      },\n      \"interactions:action-start\": function interactionsActionStart(t) {\n        !function (t) {\n          var e = t.iEvent,\n              n = t.interaction;\n\n          if (\"resize\" === n.prepared.name && n.prepared.edges) {\n            var r = e,\n                i = n.rect;\n            n._rects = {\n              start: (0, T.default)({}, i),\n              corrected: (0, T.default)({}, i),\n              previous: (0, T.default)({}, i),\n              delta: {\n                left: 0,\n                right: 0,\n                width: 0,\n                top: 0,\n                bottom: 0,\n                height: 0\n              }\n            }, r.edges = n.prepared.edges, r.rect = n._rects.corrected, r.deltaRect = n._rects.delta;\n          }\n        }(t), pt(t);\n      },\n      \"interactions:action-move\": function interactionsActionMove(t) {\n        !function (t) {\n          var e = t.iEvent,\n              n = t.interaction;\n\n          if (\"resize\" === n.prepared.name && n.prepared.edges) {\n            var r = e,\n                i = n.interactable.options.resize.invert,\n                o = \"reposition\" === i || \"negate\" === i,\n                a = n.rect,\n                s = n._rects,\n                l = s.start,\n                c = s.corrected,\n                u = s.delta,\n                d = s.previous;\n\n            if ((0, T.default)(d, c), o) {\n              if ((0, T.default)(c, a), \"reposition\" === i) {\n                if (c.top > c.bottom) {\n                  var f = c.top;\n                  c.top = c.bottom, c.bottom = f;\n                }\n\n                if (c.left > c.right) {\n                  var p = c.left;\n                  c.left = c.right, c.right = p;\n                }\n              }\n            } else c.top = Math.min(a.top, l.bottom), c.bottom = Math.max(a.bottom, l.top), c.left = Math.min(a.left, l.right), c.right = Math.max(a.right, l.left);\n\n            for (var v in c.width = c.right - c.left, c.height = c.bottom - c.top, c) {\n              u[v] = c[v] - d[v];\n            }\n\n            r.edges = n.prepared.edges, r.rect = c, r.deltaRect = u;\n          }\n        }(t), pt(t);\n      },\n      \"interactions:action-end\": function interactionsActionEnd(t) {\n        var e = t.iEvent,\n            n = t.interaction;\n\n        if (\"resize\" === n.prepared.name && n.prepared.edges) {\n          var r = e;\n          r.edges = n.prepared.edges, r.rect = n._rects.corrected, r.deltaRect = n._rects.delta;\n        }\n      },\n      \"auto-start:check\": function autoStartCheck(t) {\n        var e = t.interaction,\n            n = t.interactable,\n            r = t.element,\n            i = t.rect,\n            a = t.buttons;\n\n        if (i) {\n          var s = (0, T.default)({}, e.coords.cur.page),\n              l = n.options.resize;\n\n          if (l && l.enabled && (!e.pointerIsDown || !/mouse|pointer/.test(e.pointerType) || 0 != (a & l.mouseButtons))) {\n            if (o.default.object(l.edges)) {\n              var c = {\n                left: !1,\n                right: !1,\n                top: !1,\n                bottom: !1\n              };\n\n              for (var u in c) {\n                c[u] = ft(u, l.edges[u], s, e._latestPointer.eventTarget, r, i, l.margin || vt.defaultMargin);\n              }\n\n              c.left = c.left && !c.right, c.top = c.top && !c.bottom, (c.left || c.right || c.top || c.bottom) && (t.action = {\n                name: \"resize\",\n                edges: c\n              });\n            } else {\n              var d = \"y\" !== l.axis && s.x > i.right - vt.defaultMargin,\n                  f = \"x\" !== l.axis && s.y > i.bottom - vt.defaultMargin;\n              (d || f) && (t.action = {\n                name: \"resize\",\n                axes: (d ? \"x\" : \"\") + (f ? \"y\" : \"\")\n              });\n            }\n\n            return !t.action && void 0;\n          }\n        }\n      }\n    },\n    defaults: {\n      square: !1,\n      preserveAspectRatio: !1,\n      axis: \"xy\",\n      margin: NaN,\n      edges: null,\n      invert: \"none\"\n    },\n    cursors: null,\n    getCursor: function getCursor(t) {\n      var e = t.edges,\n          n = t.axis,\n          r = t.name,\n          i = vt.cursors,\n          o = null;\n      if (n) o = i[r + n];else if (e) {\n        for (var a = \"\", s = [\"top\", \"bottom\", \"left\", \"right\"], l = 0; l < s.length; l++) {\n          var c = s[l];\n          e[c] && (a += c);\n        }\n\n        o = i[a];\n      }\n      return o;\n    },\n    defaultMargin: null\n  },\n      ht = vt;\n  dt.default = ht;\n  var gt = {};\n  Object.defineProperty(gt, \"__esModule\", {\n    value: !0\n  }), gt.default = void 0;\n  var mt = {\n    id: \"actions\",\n    install: function install(t) {\n      t.usePlugin(st.default), t.usePlugin(dt.default), t.usePlugin(c.default), t.usePlugin(J.default);\n    }\n  };\n  gt.default = mt;\n  var yt = {};\n  Object.defineProperty(yt, \"__esModule\", {\n    value: !0\n  }), yt.default = void 0, yt.default = {};\n  var bt = {};\n  Object.defineProperty(bt, \"__esModule\", {\n    value: !0\n  }), bt.default = void 0;\n\n  var xt,\n      _t,\n      wt = 0,\n      Pt = {\n    request: function request(t) {\n      return xt(t);\n    },\n    cancel: function cancel(t) {\n      return _t(t);\n    },\n    init: function init(t) {\n      if (xt = t.requestAnimationFrame, _t = t.cancelAnimationFrame, !xt) for (var e = [\"ms\", \"moz\", \"webkit\", \"o\"], n = 0; n < e.length; n++) {\n        var r = e[n];\n        xt = t[r + \"RequestAnimationFrame\"], _t = t[r + \"CancelAnimationFrame\"] || t[r + \"CancelRequestAnimationFrame\"];\n      }\n      xt = xt && xt.bind(t), _t = _t && _t.bind(t), xt || (xt = function xt(e) {\n        var n = Date.now(),\n            r = Math.max(0, 16 - (n - wt)),\n            i = t.setTimeout(function () {\n          e(n + r);\n        }, r);\n        return wt = n + r, i;\n      }, _t = function _t(t) {\n        return clearTimeout(t);\n      });\n    }\n  };\n\n  bt.default = Pt;\n  var Et = {};\n  Object.defineProperty(Et, \"__esModule\", {\n    value: !0\n  }), Et.getContainer = Mt, Et.getScroll = Ot, Et.getScrollSize = function (t) {\n    return o.default.window(t) && (t = window.document.body), {\n      x: t.scrollWidth,\n      y: t.scrollHeight\n    };\n  }, Et.getScrollSizeDelta = function (t, e) {\n    var n = t.interaction,\n        r = t.element,\n        i = n && n.interactable.options[n.prepared.name].autoScroll;\n    if (!i || !i.enabled) return e(), {\n      x: 0,\n      y: 0\n    };\n    var o = Mt(i.container, n.interactable, r),\n        a = Ot(o);\n    e();\n    var s = Ot(o);\n    return {\n      x: s.x - a.x,\n      y: s.y - a.y\n    };\n  }, Et.default = void 0;\n  var St = {\n    defaults: {\n      enabled: !1,\n      margin: 60,\n      container: null,\n      speed: 300\n    },\n    now: Date.now,\n    interaction: null,\n    i: 0,\n    x: 0,\n    y: 0,\n    isScrolling: !1,\n    prevTime: 0,\n    margin: 0,\n    speed: 0,\n    start: function start(t) {\n      St.isScrolling = !0, bt.default.cancel(St.i), t.autoScroll = St, St.interaction = t, St.prevTime = St.now(), St.i = bt.default.request(St.scroll);\n    },\n    stop: function stop() {\n      St.isScrolling = !1, St.interaction && (St.interaction.autoScroll = null), bt.default.cancel(St.i);\n    },\n    scroll: function scroll() {\n      var t = St.interaction,\n          e = t.interactable,\n          n = t.element,\n          r = t.prepared.name,\n          i = e.options[r].autoScroll,\n          a = Mt(i.container, e, n),\n          s = St.now(),\n          l = (s - St.prevTime) / 1e3,\n          c = i.speed * l;\n\n      if (c >= 1) {\n        var u = {\n          x: St.x * c,\n          y: St.y * c\n        };\n\n        if (u.x || u.y) {\n          var d = Ot(a);\n          o.default.window(a) ? a.scrollBy(u.x, u.y) : a && (a.scrollLeft += u.x, a.scrollTop += u.y);\n          var f = Ot(a),\n              p = {\n            x: f.x - d.x,\n            y: f.y - d.y\n          };\n          (p.x || p.y) && e.fire({\n            type: \"autoscroll\",\n            target: n,\n            interactable: e,\n            delta: p,\n            interaction: t,\n            container: a\n          });\n        }\n\n        St.prevTime = s;\n      }\n\n      St.isScrolling && (bt.default.cancel(St.i), St.i = bt.default.request(St.scroll));\n    },\n    check: function check(t, e) {\n      var n;\n      return null == (n = t.options[e].autoScroll) ? void 0 : n.enabled;\n    },\n    onInteractionMove: function onInteractionMove(t) {\n      var e = t.interaction,\n          n = t.pointer;\n      if (e.interacting() && St.check(e.interactable, e.prepared.name)) if (e.simulation) St.x = St.y = 0;else {\n        var r,\n            i,\n            a,\n            s,\n            l = e.interactable,\n            c = e.element,\n            u = e.prepared.name,\n            d = l.options[u].autoScroll,\n            f = Mt(d.container, l, c);\n        if (o.default.window(f)) s = n.clientX < St.margin, r = n.clientY < St.margin, i = n.clientX > f.innerWidth - St.margin, a = n.clientY > f.innerHeight - St.margin;else {\n          var p = _.getElementClientRect(f);\n\n          s = n.clientX < p.left + St.margin, r = n.clientY < p.top + St.margin, i = n.clientX > p.right - St.margin, a = n.clientY > p.bottom - St.margin;\n        }\n        St.x = i ? 1 : s ? -1 : 0, St.y = a ? 1 : r ? -1 : 0, St.isScrolling || (St.margin = d.margin, St.speed = d.speed, St.start(e));\n      }\n    }\n  };\n\n  function Mt(t, n, r) {\n    return (o.default.string(t) ? (0, I.getStringOptionResult)(t, n, r) : t) || (0, e.getWindow)(r);\n  }\n\n  function Ot(t) {\n    return o.default.window(t) && (t = window.document.body), {\n      x: t.scrollLeft,\n      y: t.scrollTop\n    };\n  }\n\n  var Tt = {\n    id: \"auto-scroll\",\n    install: function install(t) {\n      var e = t.defaults,\n          n = t.actions;\n      t.autoScroll = St, St.now = function () {\n        return t.now();\n      }, n.phaselessTypes.autoscroll = !0, e.perAction.autoScroll = St.defaults;\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        t.interaction.autoScroll = null;\n      },\n      \"interactions:destroy\": function interactionsDestroy(t) {\n        t.interaction.autoScroll = null, St.stop(), St.interaction && (St.interaction = null);\n      },\n      \"interactions:stop\": St.stop,\n      \"interactions:action-move\": function interactionsActionMove(t) {\n        return St.onInteractionMove(t);\n      }\n    }\n  };\n  Et.default = Tt;\n  var It = {};\n  Object.defineProperty(It, \"__esModule\", {\n    value: !0\n  }), It.warnOnce = function (t, n) {\n    var r = !1;\n    return function () {\n      return r || (e.window.console.warn(n), r = !0), t.apply(this, arguments);\n    };\n  }, It.copyAction = function (t, e) {\n    return t.name = e.name, t.axis = e.axis, t.edges = e.edges, t;\n  };\n  var Dt = {};\n\n  function jt(t) {\n    return o.default.bool(t) ? (this.options.styleCursor = t, this) : null === t ? (delete this.options.styleCursor, this) : this.options.styleCursor;\n  }\n\n  function zt(t) {\n    return o.default.func(t) ? (this.options.actionChecker = t, this) : null === t ? (delete this.options.actionChecker, this) : this.options.actionChecker;\n  }\n\n  Object.defineProperty(Dt, \"__esModule\", {\n    value: !0\n  }), Dt.default = void 0;\n  var At = {\n    id: \"auto-start/interactableMethods\",\n    install: function install(t) {\n      var e = t.Interactable;\n      e.prototype.getAction = function (e, n, r, i) {\n        var o = function (t, e, n, r, i) {\n          var o = t.getRect(r),\n              a = {\n            action: null,\n            interactable: t,\n            interaction: n,\n            element: r,\n            rect: o,\n            buttons: e.buttons || {\n              0: 1,\n              1: 4,\n              3: 8,\n              4: 16\n            }[e.button]\n          };\n          return i.fire(\"auto-start:check\", a), a.action;\n        }(this, n, r, i, t);\n\n        return this.options.actionChecker ? this.options.actionChecker(e, n, o, this, i, r) : o;\n      }, e.prototype.ignoreFrom = (0, It.warnOnce)(function (t) {\n        return this._backCompatOption(\"ignoreFrom\", t);\n      }, \"Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).\"), e.prototype.allowFrom = (0, It.warnOnce)(function (t) {\n        return this._backCompatOption(\"allowFrom\", t);\n      }, \"Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).\"), e.prototype.actionChecker = zt, e.prototype.styleCursor = jt;\n    }\n  };\n  Dt.default = At;\n  var Ct = {};\n\n  function kt(t, e, n, r, i) {\n    return e.testIgnoreAllow(e.options[t.name], n, r) && e.options[t.name].enabled && Yt(e, n, t, i) ? t : null;\n  }\n\n  function Rt(t, e, n, r, i, o, a) {\n    for (var s = 0, l = r.length; s < l; s++) {\n      var c = r[s],\n          u = i[s],\n          d = c.getAction(e, n, t, u);\n\n      if (d) {\n        var f = kt(d, c, u, o, a);\n        if (f) return {\n          action: f,\n          interactable: c,\n          element: u\n        };\n      }\n    }\n\n    return {\n      action: null,\n      interactable: null,\n      element: null\n    };\n  }\n\n  function Ft(t, e, n, r, i) {\n    var a = [],\n        s = [],\n        l = r;\n\n    function c(t) {\n      a.push(t), s.push(l);\n    }\n\n    for (; o.default.element(l);) {\n      a = [], s = [], i.interactables.forEachMatch(l, c);\n      var u = Rt(t, e, n, a, s, r, i);\n      if (u.action && !u.interactable.options[u.action.name].manualStart) return u;\n      l = _.parentNode(l);\n    }\n\n    return {\n      action: null,\n      interactable: null,\n      element: null\n    };\n  }\n\n  function Xt(t, e, n) {\n    var r = e.action,\n        i = e.interactable,\n        o = e.element;\n    r = r || {\n      name: null\n    }, t.interactable = i, t.element = o, (0, It.copyAction)(t.prepared, r), t.rect = i && r.name ? i.getRect(o) : null, Bt(t, n), n.fire(\"autoStart:prepared\", {\n      interaction: t\n    });\n  }\n\n  function Yt(t, e, n, r) {\n    var i = t.options,\n        o = i[n.name].max,\n        a = i[n.name].maxPerElement,\n        s = r.autoStart.maxInteractions,\n        l = 0,\n        c = 0,\n        u = 0;\n    if (!(o && a && s)) return !1;\n\n    for (var d = 0; d < r.interactions.list.length; d++) {\n      var f = r.interactions.list[d],\n          p = f.prepared.name;\n\n      if (f.interacting()) {\n        if (++l >= s) return !1;\n\n        if (f.interactable === t) {\n          if ((c += p === n.name ? 1 : 0) >= o) return !1;\n          if (f.element === e && (u++, p === n.name && u >= a)) return !1;\n        }\n      }\n    }\n\n    return s > 0;\n  }\n\n  function Wt(t, e) {\n    return o.default.number(t) ? (e.autoStart.maxInteractions = t, this) : e.autoStart.maxInteractions;\n  }\n\n  function Lt(t, e, n) {\n    var r = n.autoStart.cursorElement;\n    r && r !== t && (r.style.cursor = \"\"), t.ownerDocument.documentElement.style.cursor = e, t.style.cursor = e, n.autoStart.cursorElement = e ? t : null;\n  }\n\n  function Bt(t, e) {\n    var n = t.interactable,\n        r = t.element,\n        i = t.prepared;\n\n    if (\"mouse\" === t.pointerType && n && n.options.styleCursor) {\n      var a = \"\";\n\n      if (i.name) {\n        var s = n.options[i.name].cursorChecker;\n        a = o.default.func(s) ? s(i, n, r, t._interacting) : e.actions.map[i.name].getCursor(i);\n      }\n\n      Lt(t.element, a || \"\", e);\n    } else e.autoStart.cursorElement && Lt(e.autoStart.cursorElement, \"\", e);\n  }\n\n  Object.defineProperty(Ct, \"__esModule\", {\n    value: !0\n  }), Ct.default = void 0;\n  var Nt = {\n    id: \"auto-start/base\",\n    before: [\"actions\"],\n    install: function install(t) {\n      var e = t.interactStatic,\n          n = t.defaults;\n      t.usePlugin(Dt.default), n.base.actionChecker = null, n.base.styleCursor = !0, (0, T.default)(n.perAction, {\n        manualStart: !1,\n        max: 1 / 0,\n        maxPerElement: 1,\n        allowFrom: null,\n        ignoreFrom: null,\n        mouseButtons: 1\n      }), e.maxInteractions = function (e) {\n        return Wt(e, t);\n      }, t.autoStart = {\n        maxInteractions: 1 / 0,\n        withinInteractionLimit: Yt,\n        cursorElement: null\n      };\n    },\n    listeners: {\n      \"interactions:down\": function interactionsDown(t, e) {\n        var n = t.interaction,\n            r = t.pointer,\n            i = t.event,\n            o = t.eventTarget;\n        n.interacting() || Xt(n, Ft(n, r, i, o, e), e);\n      },\n      \"interactions:move\": function interactionsMove(t, e) {\n        !function (t, e) {\n          var n = t.interaction,\n              r = t.pointer,\n              i = t.event,\n              o = t.eventTarget;\n          \"mouse\" !== n.pointerType || n.pointerIsDown || n.interacting() || Xt(n, Ft(n, r, i, o, e), e);\n        }(t, e), function (t, e) {\n          var n = t.interaction;\n\n          if (n.pointerIsDown && !n.interacting() && n.pointerWasMoved && n.prepared.name) {\n            e.fire(\"autoStart:before-start\", t);\n            var r = n.interactable,\n                i = n.prepared.name;\n            i && r && (r.options[i].manualStart || !Yt(r, n.element, n.prepared, e) ? n.stop() : (n.start(n.prepared, r, n.element), Bt(n, e)));\n          }\n        }(t, e);\n      },\n      \"interactions:stop\": function interactionsStop(t, e) {\n        var n = t.interaction,\n            r = n.interactable;\n        r && r.options.styleCursor && Lt(n.element, \"\", e);\n      }\n    },\n    maxInteractions: Wt,\n    withinInteractionLimit: Yt,\n    validateAction: kt\n  };\n  Ct.default = Nt;\n  var Vt = {};\n  Object.defineProperty(Vt, \"__esModule\", {\n    value: !0\n  }), Vt.default = void 0;\n  var qt = {\n    id: \"auto-start/dragAxis\",\n    listeners: {\n      \"autoStart:before-start\": function autoStartBeforeStart(t, e) {\n        var n = t.interaction,\n            r = t.eventTarget,\n            i = t.dx,\n            a = t.dy;\n\n        if (\"drag\" === n.prepared.name) {\n          var s = Math.abs(i),\n              l = Math.abs(a),\n              c = n.interactable.options.drag,\n              u = c.startAxis,\n              d = s > l ? \"x\" : s < l ? \"y\" : \"xy\";\n\n          if (n.prepared.axis = \"start\" === c.lockAxis ? d[0] : c.lockAxis, \"xy\" !== d && \"xy\" !== u && u !== d) {\n            n.prepared.name = null;\n\n            for (var f = r, p = function p(t) {\n              if (t !== n.interactable) {\n                var i = n.interactable.options.drag;\n\n                if (!i.manualStart && t.testIgnoreAllow(i, f, r)) {\n                  var o = t.getAction(n.downPointer, n.downEvent, n, f);\n                  if (o && \"drag\" === o.name && function (t, e) {\n                    if (!e) return !1;\n                    var n = e.options.drag.startAxis;\n                    return \"xy\" === t || \"xy\" === n || n === t;\n                  }(d, t) && Ct.default.validateAction(o, t, f, r, e)) return t;\n                }\n              }\n            }; o.default.element(f);) {\n              var v = e.interactables.forEachMatch(f, p);\n\n              if (v) {\n                n.prepared.name = \"drag\", n.interactable = v, n.element = f;\n                break;\n              }\n\n              f = (0, _.parentNode)(f);\n            }\n          }\n        }\n      }\n    }\n  };\n  Vt.default = qt;\n  var Ut = {};\n\n  function Gt(t) {\n    var e = t.prepared && t.prepared.name;\n    if (!e) return null;\n    var n = t.interactable.options;\n    return n[e].hold || n[e].delay;\n  }\n\n  Object.defineProperty(Ut, \"__esModule\", {\n    value: !0\n  }), Ut.default = void 0;\n  var Ht = {\n    id: \"auto-start/hold\",\n    install: function install(t) {\n      var e = t.defaults;\n      t.usePlugin(Ct.default), e.perAction.hold = 0, e.perAction.delay = 0;\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        t.interaction.autoStartHoldTimer = null;\n      },\n      \"autoStart:prepared\": function autoStartPrepared(t) {\n        var e = t.interaction,\n            n = Gt(e);\n        n > 0 && (e.autoStartHoldTimer = setTimeout(function () {\n          e.start(e.prepared, e.interactable, e.element);\n        }, n));\n      },\n      \"interactions:move\": function interactionsMove(t) {\n        var e = t.interaction,\n            n = t.duplicate;\n        e.autoStartHoldTimer && e.pointerWasMoved && !n && (clearTimeout(e.autoStartHoldTimer), e.autoStartHoldTimer = null);\n      },\n      \"autoStart:before-start\": function autoStartBeforeStart(t) {\n        var e = t.interaction;\n        Gt(e) > 0 && (e.prepared.name = null);\n      }\n    },\n    getHoldDuration: Gt\n  };\n  Ut.default = Ht;\n  var $t = {};\n  Object.defineProperty($t, \"__esModule\", {\n    value: !0\n  }), $t.default = void 0;\n  var Kt = {\n    id: \"auto-start\",\n    install: function install(t) {\n      t.usePlugin(Ct.default), t.usePlugin(Ut.default), t.usePlugin(Vt.default);\n    }\n  };\n  $t.default = Kt;\n  var Zt = {};\n  Object.defineProperty(Zt, \"__esModule\", {\n    value: !0\n  }), Zt.default = void 0, Zt.default = {};\n  var Jt = {};\n\n  function Qt(t) {\n    return /^(always|never|auto)$/.test(t) ? (this.options.preventDefault = t, this) : o.default.bool(t) ? (this.options.preventDefault = t ? \"always\" : \"never\", this) : this.options.preventDefault;\n  }\n\n  function te(t) {\n    var e = t.interaction,\n        n = t.event;\n    e.interactable && e.interactable.checkAndPreventDefault(n);\n  }\n\n  function ee(t) {\n    var n = t.Interactable;\n    n.prototype.preventDefault = Qt, n.prototype.checkAndPreventDefault = function (n) {\n      return function (t, n, r) {\n        var i = t.options.preventDefault;\n        if (\"never\" !== i) if (\"always\" !== i) {\n          if (n.events.supportsPassive && /^touch(start|move)$/.test(r.type)) {\n            var a = (0, e.getWindow)(r.target).document,\n                s = n.getDocOptions(a);\n            if (!s || !s.events || !1 !== s.events.passive) return;\n          }\n\n          /^(mouse|pointer|touch)*(down|start)/i.test(r.type) || o.default.element(r.target) && (0, _.matchesSelector)(r.target, \"input,select,textarea,[contenteditable=true],[contenteditable=true] *\") || r.preventDefault();\n        } else r.preventDefault();\n      }(this, t, n);\n    }, t.interactions.docEvents.push({\n      type: \"dragstart\",\n      listener: function listener(e) {\n        for (var n = 0; n < t.interactions.list.length; n++) {\n          var r = t.interactions.list[n];\n          if (r.element && (r.element === e.target || (0, _.nodeContains)(r.element, e.target))) return void r.interactable.checkAndPreventDefault(e);\n        }\n      }\n    });\n  }\n\n  Object.defineProperty(Jt, \"__esModule\", {\n    value: !0\n  }), Jt.install = ee, Jt.default = void 0;\n  var ne = {\n    id: \"core/interactablePreventDefault\",\n    install: ee,\n    listeners: [\"down\", \"move\", \"up\", \"cancel\"].reduce(function (t, e) {\n      return t[\"interactions:\" + e] = te, t;\n    }, {})\n  };\n  Jt.default = ne;\n  var re,\n      ie = {};\n  Object.defineProperty(ie, \"__esModule\", {\n    value: !0\n  }), ie.default = void 0, function (t) {\n    t.touchAction = \"touchAction\", t.boxSizing = \"boxSizing\", t.noListeners = \"noListeners\";\n  }(re || (re = {}));\n  var oe = {\n    touchAction: \"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\",\n    boxSizing: \"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\"\n  },\n      ae = [{\n    name: re.touchAction,\n    perform: function perform(t) {\n      return !function (t, e, n) {\n        for (var r = t; o.default.element(r);) {\n          if (se(r, \"touchAction\", n)) return !0;\n          r = (0, _.parentNode)(r);\n        }\n\n        return !1;\n      }(t.element, 0, /pan-|pinch|none/);\n    },\n    getInfo: function getInfo(t) {\n      return [t.element, oe.touchAction];\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n'\n  }, {\n    name: re.boxSizing,\n    perform: function perform(t) {\n      var e = t.element;\n      return \"resize\" === t.prepared.name && e instanceof v.default.HTMLElement && !se(e, \"boxSizing\", /border-box/);\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo: function getInfo(t) {\n      return [t.element, oe.boxSizing];\n    }\n  }, {\n    name: re.noListeners,\n    perform: function perform(t) {\n      var e = t.prepared.name;\n      return !(t.interactable.events.types[e + \"move\"] || []).length;\n    },\n    getInfo: function getInfo(t) {\n      return [t.prepared.name, t.interactable];\n    },\n    text: \"There are no listeners set for this action\"\n  }];\n\n  function se(t, n, r) {\n    var i = t.style[n] || e.window.getComputedStyle(t)[n];\n    return r.test((i || \"\").toString());\n  }\n\n  var le = {\n    id: \"dev-tools\",\n    install: function install(t, e) {\n      var n = (void 0 === e ? {} : e).logger,\n          r = t.Interactable,\n          i = t.defaults;\n      t.logger = n || console, i.base.devTools = {\n        ignore: {}\n      }, r.prototype.devTools = function (t) {\n        return t ? ((0, T.default)(this.options.devTools, t), this) : this.options.devTools;\n      };\n    },\n    listeners: {\n      \"interactions:action-start\": function interactionsActionStart(t, e) {\n        for (var n = t.interaction, r = 0; r < ae.length; r++) {\n          var i,\n              o = ae[r],\n              a = n.interactable && n.interactable.options;\n          a && a.devTools && a.devTools.ignore[o.name] || !o.perform(n) || (i = e.logger).warn.apply(i, [\"[interact.js] \" + o.text].concat(o.getInfo(n)));\n        }\n      }\n    },\n    checks: ae,\n    CheckName: re,\n    links: oe,\n    prefix: \"[interact.js] \"\n  };\n  ie.default = le;\n  var ce = {};\n  Object.defineProperty(ce, \"__esModule\", {\n    value: !0\n  }), ce.default = void 0, ce.default = {};\n  var ue = {};\n  Object.defineProperty(ue, \"__esModule\", {\n    value: !0\n  }), ue.default = function t(e) {\n    var n = {};\n\n    for (var r in e) {\n      var i = e[r];\n      o.default.plainObject(i) ? n[r] = t(i) : o.default.array(i) ? n[r] = G.from(i) : n[r] = i;\n    }\n\n    return n;\n  };\n  var de = {};\n  Object.defineProperty(de, \"__esModule\", {\n    value: !0\n  }), de.getRectOffset = ve, de.default = void 0;\n\n  var fe = function () {\n    function t(t) {\n      this.states = [], this.startOffset = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, this.startDelta = null, this.result = null, this.endResult = null, this.edges = void 0, this.interaction = void 0, this.interaction = t, this.result = pe();\n    }\n\n    var e = t.prototype;\n    return e.start = function (t, e) {\n      var n = t.phase,\n          r = this.interaction,\n          i = function (t) {\n        var e = t.interactable.options[t.prepared.name],\n            n = e.modifiers;\n        return n && n.length ? n : [\"snap\", \"snapSize\", \"snapEdges\", \"restrict\", \"restrictEdges\", \"restrictSize\"].map(function (t) {\n          var n = e[t];\n          return n && n.enabled && {\n            options: n,\n            methods: n._methods\n          };\n        }).filter(function (t) {\n          return !!t;\n        });\n      }(r);\n\n      this.prepareStates(i), this.edges = (0, T.default)({}, r.edges), this.startOffset = ve(r.rect, e), this.startDelta = {\n        x: 0,\n        y: 0\n      };\n      var o = {\n        phase: n,\n        pageCoords: e,\n        preEnd: !1\n      };\n      return this.result = pe(), this.startAll(o), this.result = this.setAll(o);\n    }, e.fillArg = function (t) {\n      var e = this.interaction;\n      t.interaction = e, t.interactable = e.interactable, t.element = e.element, t.rect = t.rect || e.rect, t.edges = this.edges, t.startOffset = this.startOffset;\n    }, e.startAll = function (t) {\n      this.fillArg(t);\n\n      for (var e = 0; e < this.states.length; e++) {\n        var n = this.states[e];\n        n.methods.start && (t.state = n, n.methods.start(t));\n      }\n    }, e.setAll = function (t) {\n      this.fillArg(t);\n      var e = t.phase,\n          n = t.preEnd,\n          r = t.skipModifiers,\n          i = t.rect;\n      t.coords = (0, T.default)({}, t.pageCoords), t.rect = (0, T.default)({}, i);\n\n      for (var o = r ? this.states.slice(r) : this.states, a = pe(t.coords, t.rect), s = 0; s < o.length; s++) {\n        var l = o[s],\n            c = l.options,\n            u = (0, T.default)({}, t.coords),\n            d = null;\n        l.methods.set && this.shouldDo(c, n, e) && (t.state = l, d = l.methods.set(t), I.addEdges(this.interaction.edges, t.rect, {\n          x: t.coords.x - u.x,\n          y: t.coords.y - u.y\n        })), a.eventProps.push(d);\n      }\n\n      a.delta.x = t.coords.x - t.pageCoords.x, a.delta.y = t.coords.y - t.pageCoords.y, a.rectDelta.left = t.rect.left - i.left, a.rectDelta.right = t.rect.right - i.right, a.rectDelta.top = t.rect.top - i.top, a.rectDelta.bottom = t.rect.bottom - i.bottom;\n      var f = this.result.coords,\n          p = this.result.rect;\n\n      if (f && p) {\n        var v = a.rect.left !== p.left || a.rect.right !== p.right || a.rect.top !== p.top || a.rect.bottom !== p.bottom;\n        a.changed = v || f.x !== a.coords.x || f.y !== a.coords.y;\n      }\n\n      return a;\n    }, e.applyToInteraction = function (t) {\n      var e = this.interaction,\n          n = t.phase,\n          r = e.coords.cur,\n          i = e.coords.start,\n          o = this.result,\n          a = this.startDelta,\n          s = o.delta;\n      \"start\" === n && (0, T.default)(this.startDelta, o.delta);\n\n      for (var l = [[i, a], [r, s]], c = 0; c < l.length; c++) {\n        var u = l[c],\n            d = u[0],\n            f = u[1];\n        d.page.x += f.x, d.page.y += f.y, d.client.x += f.x, d.client.y += f.y;\n      }\n\n      var p = this.result.rectDelta,\n          v = t.rect || e.rect;\n      v.left += p.left, v.right += p.right, v.top += p.top, v.bottom += p.bottom, v.width = v.right - v.left, v.height = v.bottom - v.top;\n    }, e.setAndApply = function (t) {\n      var e = this.interaction,\n          n = t.phase,\n          r = t.preEnd,\n          i = t.skipModifiers,\n          o = this.setAll({\n        preEnd: r,\n        phase: n,\n        pageCoords: t.modifiedCoords || e.coords.cur.page\n      });\n      if (this.result = o, !o.changed && (!i || i < this.states.length) && e.interacting()) return !1;\n\n      if (t.modifiedCoords) {\n        var a = e.coords.cur.page,\n            s = {\n          x: t.modifiedCoords.x - a.x,\n          y: t.modifiedCoords.y - a.y\n        };\n        o.coords.x += s.x, o.coords.y += s.y, o.delta.x += s.x, o.delta.y += s.y;\n      }\n\n      this.applyToInteraction(t);\n    }, e.beforeEnd = function (t) {\n      var e = t.interaction,\n          n = t.event,\n          r = this.states;\n\n      if (r && r.length) {\n        for (var i = !1, o = 0; o < r.length; o++) {\n          var a = r[o];\n          t.state = a;\n          var s = a.options,\n              l = a.methods,\n              c = l.beforeEnd && l.beforeEnd(t);\n          if (c) return this.endResult = c, !1;\n          i = i || !i && this.shouldDo(s, !0, t.phase, !0);\n        }\n\n        i && e.move({\n          event: n,\n          preEnd: !0\n        });\n      }\n    }, e.stop = function (t) {\n      var e = t.interaction;\n\n      if (this.states && this.states.length) {\n        var n = (0, T.default)({\n          states: this.states,\n          interactable: e.interactable,\n          element: e.element,\n          rect: null\n        }, t);\n        this.fillArg(n);\n\n        for (var r = 0; r < this.states.length; r++) {\n          var i = this.states[r];\n          n.state = i, i.methods.stop && i.methods.stop(n);\n        }\n\n        this.states = null, this.endResult = null;\n      }\n    }, e.prepareStates = function (t) {\n      this.states = [];\n\n      for (var e = 0; e < t.length; e++) {\n        var n = t[e],\n            r = n.options,\n            i = n.methods,\n            o = n.name;\n        this.states.push({\n          options: r,\n          methods: i,\n          index: e,\n          name: o\n        });\n      }\n\n      return this.states;\n    }, e.restoreInteractionCoords = function (t) {\n      var e = t.interaction,\n          n = e.coords,\n          r = e.rect,\n          i = e.modification;\n\n      if (i.result) {\n        for (var o = i.startDelta, a = i.result, s = a.delta, l = a.rectDelta, c = [[n.start, o], [n.cur, s]], u = 0; u < c.length; u++) {\n          var d = c[u],\n              f = d[0],\n              p = d[1];\n          f.page.x -= p.x, f.page.y -= p.y, f.client.x -= p.x, f.client.y -= p.y;\n        }\n\n        r.left -= l.left, r.right -= l.right, r.top -= l.top, r.bottom -= l.bottom;\n      }\n    }, e.shouldDo = function (t, e, n, r) {\n      return !(!t || !1 === t.enabled || r && !t.endOnly || t.endOnly && !e || \"start\" === n && !t.setStart);\n    }, e.copyFrom = function (t) {\n      this.startOffset = t.startOffset, this.startDelta = t.startDelta, this.edges = t.edges, this.states = t.states.map(function (t) {\n        return (0, ue.default)(t);\n      }), this.result = pe((0, T.default)({}, t.result.coords), (0, T.default)({}, t.result.rect));\n    }, e.destroy = function () {\n      for (var t in this) {\n        this[t] = null;\n      }\n    }, t;\n  }();\n\n  function pe(t, e) {\n    return {\n      rect: e,\n      coords: t,\n      delta: {\n        x: 0,\n        y: 0\n      },\n      rectDelta: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      },\n      eventProps: [],\n      changed: !0\n    };\n  }\n\n  function ve(t, e) {\n    return t ? {\n      left: e.x - t.left,\n      top: e.y - t.top,\n      right: t.right - e.x,\n      bottom: t.bottom - e.y\n    } : {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n  }\n\n  de.default = fe;\n  var he = {};\n\n  function ge(t) {\n    var e = t.iEvent,\n        n = t.interaction.modification.result;\n    n && (e.modifiers = n.eventProps);\n  }\n\n  Object.defineProperty(he, \"__esModule\", {\n    value: !0\n  }), he.makeModifier = function (t, e) {\n    var n = t.defaults,\n        r = {\n      start: t.start,\n      set: t.set,\n      beforeEnd: t.beforeEnd,\n      stop: t.stop\n    },\n        i = function i(t) {\n      var i = t || {};\n\n      for (var o in i.enabled = !1 !== i.enabled, n) {\n        o in i || (i[o] = n[o]);\n      }\n\n      var a = {\n        options: i,\n        methods: r,\n        name: e,\n        enable: function enable() {\n          return i.enabled = !0, a;\n        },\n        disable: function disable() {\n          return i.enabled = !1, a;\n        }\n      };\n      return a;\n    };\n\n    return e && \"string\" == typeof e && (i._defaults = n, i._methods = r), i;\n  }, he.addEventModifiers = ge, he.default = void 0;\n  var me = {\n    id: \"modifiers/base\",\n    before: [\"actions\"],\n    install: function install(t) {\n      t.defaults.perAction.modifiers = [];\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        var e = t.interaction;\n        e.modification = new de.default(e);\n      },\n      \"interactions:before-action-start\": function interactionsBeforeActionStart(t) {\n        var e = t.interaction.modification;\n        e.start(t, t.interaction.coords.start.page), t.interaction.edges = e.edges, e.applyToInteraction(t);\n      },\n      \"interactions:before-action-move\": function interactionsBeforeActionMove(t) {\n        return t.interaction.modification.setAndApply(t);\n      },\n      \"interactions:before-action-end\": function interactionsBeforeActionEnd(t) {\n        return t.interaction.modification.beforeEnd(t);\n      },\n      \"interactions:action-start\": ge,\n      \"interactions:action-move\": ge,\n      \"interactions:action-end\": ge,\n      \"interactions:after-action-start\": function interactionsAfterActionStart(t) {\n        return t.interaction.modification.restoreInteractionCoords(t);\n      },\n      \"interactions:after-action-move\": function interactionsAfterActionMove(t) {\n        return t.interaction.modification.restoreInteractionCoords(t);\n      },\n      \"interactions:stop\": function interactionsStop(t) {\n        return t.interaction.modification.stop(t);\n      }\n    }\n  };\n  he.default = me;\n  var ye = {};\n  Object.defineProperty(ye, \"__esModule\", {\n    value: !0\n  }), ye.defaults = void 0, ye.defaults = {\n    base: {\n      preventDefault: \"auto\",\n      deltaSource: \"page\"\n    },\n    perAction: {\n      enabled: !1,\n      origin: {\n        x: 0,\n        y: 0\n      }\n    },\n    actions: {}\n  };\n  var be = {};\n  Object.defineProperty(be, \"__esModule\", {\n    value: !0\n  }), be.InteractEvent = void 0;\n\n  var xe = function (t) {\n    var e, n;\n\n    function r(e, n, r, i, o, a, s) {\n      var l;\n      (l = t.call(this, e) || this).target = void 0, l.currentTarget = void 0, l.relatedTarget = null, l.screenX = void 0, l.screenY = void 0, l.button = void 0, l.buttons = void 0, l.ctrlKey = void 0, l.shiftKey = void 0, l.altKey = void 0, l.metaKey = void 0, l.page = void 0, l.client = void 0, l.delta = void 0, l.rect = void 0, l.x0 = void 0, l.y0 = void 0, l.t0 = void 0, l.dt = void 0, l.duration = void 0, l.clientX0 = void 0, l.clientY0 = void 0, l.velocity = void 0, l.speed = void 0, l.swipe = void 0, l.timeStamp = void 0, l.dragEnter = void 0, l.dragLeave = void 0, l.axes = void 0, l.preEnd = void 0, o = o || e.element;\n      var c = e.interactable,\n          u = (c && c.options || ye.defaults).deltaSource,\n          d = (0, j.default)(c, o, r),\n          f = \"start\" === i,\n          p = \"end\" === i,\n          v = f ? function (t) {\n        if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return t;\n      }(l) : e.prevEvent,\n          h = f ? e.coords.start : p ? {\n        page: v.page,\n        client: v.client,\n        timeStamp: e.coords.cur.timeStamp\n      } : e.coords.cur;\n      return l.page = (0, T.default)({}, h.page), l.client = (0, T.default)({}, h.client), l.rect = (0, T.default)({}, e.rect), l.timeStamp = h.timeStamp, p || (l.page.x -= d.x, l.page.y -= d.y, l.client.x -= d.x, l.client.y -= d.y), l.ctrlKey = n.ctrlKey, l.altKey = n.altKey, l.shiftKey = n.shiftKey, l.metaKey = n.metaKey, l.button = n.button, l.buttons = n.buttons, l.target = o, l.currentTarget = o, l.preEnd = a, l.type = s || r + (i || \"\"), l.interactable = c, l.t0 = f ? e.pointers[e.pointers.length - 1].downTime : v.t0, l.x0 = e.coords.start.page.x - d.x, l.y0 = e.coords.start.page.y - d.y, l.clientX0 = e.coords.start.client.x - d.x, l.clientY0 = e.coords.start.client.y - d.y, l.delta = f || p ? {\n        x: 0,\n        y: 0\n      } : {\n        x: l[u].x - v[u].x,\n        y: l[u].y - v[u].y\n      }, l.dt = e.coords.delta.timeStamp, l.duration = l.timeStamp - l.t0, l.velocity = (0, T.default)({}, e.coords.velocity[u]), l.speed = (0, C.default)(l.velocity.x, l.velocity.y), l.swipe = p || \"inertiastart\" === i ? l.getSwipe() : null, l;\n    }\n\n    n = t, (e = r).prototype = Object.create(n.prototype), e.prototype.constructor = e, e.__proto__ = n;\n    var i = r.prototype;\n    return i.getSwipe = function () {\n      var t = this._interaction;\n      if (t.prevEvent.speed < 600 || this.timeStamp - t.prevEvent.timeStamp > 150) return null;\n      var e = 180 * Math.atan2(t.prevEvent.velocityY, t.prevEvent.velocityX) / Math.PI;\n      e < 0 && (e += 360);\n      var n = 112.5 <= e && e < 247.5,\n          r = 202.5 <= e && e < 337.5;\n      return {\n        up: r,\n        down: !r && 22.5 <= e && e < 157.5,\n        left: n,\n        right: !n && (292.5 <= e || e < 67.5),\n        angle: e,\n        speed: t.prevEvent.speed,\n        velocity: {\n          x: t.prevEvent.velocityX,\n          y: t.prevEvent.velocityY\n        }\n      };\n    }, i.preventDefault = function () {}, i.stopImmediatePropagation = function () {\n      this.immediatePropagationStopped = this.propagationStopped = !0;\n    }, i.stopPropagation = function () {\n      this.propagationStopped = !0;\n    }, r;\n  }(q.BaseEvent);\n\n  be.InteractEvent = xe, Object.defineProperties(xe.prototype, {\n    pageX: {\n      get: function get() {\n        return this.page.x;\n      },\n      set: function set(t) {\n        this.page.x = t;\n      }\n    },\n    pageY: {\n      get: function get() {\n        return this.page.y;\n      },\n      set: function set(t) {\n        this.page.y = t;\n      }\n    },\n    clientX: {\n      get: function get() {\n        return this.client.x;\n      },\n      set: function set(t) {\n        this.client.x = t;\n      }\n    },\n    clientY: {\n      get: function get() {\n        return this.client.y;\n      },\n      set: function set(t) {\n        this.client.y = t;\n      }\n    },\n    dx: {\n      get: function get() {\n        return this.delta.x;\n      },\n      set: function set(t) {\n        this.delta.x = t;\n      }\n    },\n    dy: {\n      get: function get() {\n        return this.delta.y;\n      },\n      set: function set(t) {\n        this.delta.y = t;\n      }\n    },\n    velocityX: {\n      get: function get() {\n        return this.velocity.x;\n      },\n      set: function set(t) {\n        this.velocity.x = t;\n      }\n    },\n    velocityY: {\n      get: function get() {\n        return this.velocity.y;\n      },\n      set: function set(t) {\n        this.velocity.y = t;\n      }\n    }\n  });\n  var _e = {};\n  Object.defineProperty(_e, \"__esModule\", {\n    value: !0\n  }), _e.PointerInfo = void 0, _e.PointerInfo = function (t, e, n, r, i) {\n    this.id = void 0, this.pointer = void 0, this.event = void 0, this.downTime = void 0, this.downTarget = void 0, this.id = t, this.pointer = e, this.event = n, this.downTime = r, this.downTarget = i;\n  };\n  var we,\n      Pe,\n      Ee = {};\n\n  function Se(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n    }\n  }\n\n  Object.defineProperty(Ee, \"__esModule\", {\n    value: !0\n  }), Object.defineProperty(Ee, \"PointerInfo\", {\n    enumerable: !0,\n    get: function get() {\n      return _e.PointerInfo;\n    }\n  }), Ee.default = Ee.Interaction = Ee._ProxyMethods = Ee._ProxyValues = void 0, Ee._ProxyValues = we, function (t) {\n    t.interactable = \"\", t.element = \"\", t.prepared = \"\", t.pointerIsDown = \"\", t.pointerWasMoved = \"\", t._proxy = \"\";\n  }(we || (Ee._ProxyValues = we = {})), Ee._ProxyMethods = Pe, function (t) {\n    t.start = \"\", t.move = \"\", t.end = \"\", t.stop = \"\", t.interacting = \"\";\n  }(Pe || (Ee._ProxyMethods = Pe = {}));\n\n  var Me = 0,\n      Oe = function () {\n    var t, e;\n\n    function n(t) {\n      var e = this,\n          n = t.pointerType,\n          r = t.scopeFire;\n      this.interactable = null, this.element = null, this.rect = void 0, this._rects = void 0, this.edges = void 0, this._scopeFire = void 0, this.prepared = {\n        name: null,\n        axis: null,\n        edges: null\n      }, this.pointerType = void 0, this.pointers = [], this.downEvent = null, this.downPointer = {}, this._latestPointer = {\n        pointer: null,\n        event: null,\n        eventTarget: null\n      }, this.prevEvent = null, this.pointerIsDown = !1, this.pointerWasMoved = !1, this._interacting = !1, this._ending = !1, this._stopped = !0, this._proxy = null, this.simulation = null, this.doMove = (0, It.warnOnce)(function (t) {\n        this.move(t);\n      }, \"The interaction.doMove() method has been renamed to interaction.move()\"), this.coords = {\n        start: X.newCoords(),\n        prev: X.newCoords(),\n        cur: X.newCoords(),\n        delta: X.newCoords(),\n        velocity: X.newCoords()\n      }, this._id = Me++, this._scopeFire = r, this.pointerType = n;\n      var i = this;\n      this._proxy = {};\n\n      var o = function o(t) {\n        Object.defineProperty(e._proxy, t, {\n          get: function get() {\n            return i[t];\n          }\n        });\n      };\n\n      for (var a in we) {\n        o(a);\n      }\n\n      var s = function s(t) {\n        Object.defineProperty(e._proxy, t, {\n          value: function value() {\n            return i[t].apply(i, arguments);\n          }\n        });\n      };\n\n      for (var l in Pe) {\n        s(l);\n      }\n\n      this._scopeFire(\"interactions:new\", {\n        interaction: this\n      });\n    }\n\n    t = n, (e = [{\n      key: \"pointerMoveTolerance\",\n      get: function get() {\n        return 1;\n      }\n    }]) && Se(t.prototype, e);\n    var r = n.prototype;\n    return r.pointerDown = function (t, e, n) {\n      var r = this.updatePointer(t, e, n, !0),\n          i = this.pointers[r];\n\n      this._scopeFire(\"interactions:down\", {\n        pointer: t,\n        event: e,\n        eventTarget: n,\n        pointerIndex: r,\n        pointerInfo: i,\n        type: \"down\",\n        interaction: this\n      });\n    }, r.start = function (t, e, n) {\n      return !(this.interacting() || !this.pointerIsDown || this.pointers.length < (\"gesture\" === t.name ? 2 : 1) || !e.options[t.name].enabled) && ((0, It.copyAction)(this.prepared, t), this.interactable = e, this.element = n, this.rect = e.getRect(n), this.edges = this.prepared.edges ? (0, T.default)({}, this.prepared.edges) : {\n        left: !0,\n        right: !0,\n        top: !0,\n        bottom: !0\n      }, this._stopped = !1, this._interacting = this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: \"start\"\n      }) && !this._stopped, this._interacting);\n    }, r.pointerMove = function (t, e, n) {\n      this.simulation || this.modification && this.modification.endResult || this.updatePointer(t, e, n, !1);\n      var r,\n          i,\n          o = this.coords.cur.page.x === this.coords.prev.page.x && this.coords.cur.page.y === this.coords.prev.page.y && this.coords.cur.client.x === this.coords.prev.client.x && this.coords.cur.client.y === this.coords.prev.client.y;\n      this.pointerIsDown && !this.pointerWasMoved && (r = this.coords.cur.client.x - this.coords.start.client.x, i = this.coords.cur.client.y - this.coords.start.client.y, this.pointerWasMoved = (0, C.default)(r, i) > this.pointerMoveTolerance);\n      var a = this.getPointerIndex(t),\n          s = {\n        pointer: t,\n        pointerIndex: a,\n        pointerInfo: this.pointers[a],\n        event: e,\n        type: \"move\",\n        eventTarget: n,\n        dx: r,\n        dy: i,\n        duplicate: o,\n        interaction: this\n      };\n      o || X.setCoordVelocity(this.coords.velocity, this.coords.delta), this._scopeFire(\"interactions:move\", s), o || this.simulation || (this.interacting() && (s.type = null, this.move(s)), this.pointerWasMoved && X.copyCoords(this.coords.prev, this.coords.cur));\n    }, r.move = function (t) {\n      t && t.event || X.setZeroCoords(this.coords.delta), (t = (0, T.default)({\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this\n      }, t || {})).phase = \"move\", this._doPhase(t);\n    }, r.pointerUp = function (t, e, n, r) {\n      var i = this.getPointerIndex(t);\n      -1 === i && (i = this.updatePointer(t, e, n, !1));\n      var o = /cancel$/i.test(e.type) ? \"cancel\" : \"up\";\n      this._scopeFire(\"interactions:\" + o, {\n        pointer: t,\n        pointerIndex: i,\n        pointerInfo: this.pointers[i],\n        event: e,\n        eventTarget: n,\n        type: o,\n        curEventTarget: r,\n        interaction: this\n      }), this.simulation || this.end(e), this.removePointer(t, e);\n    }, r.documentBlur = function (t) {\n      this.end(t), this._scopeFire(\"interactions:blur\", {\n        event: t,\n        type: \"blur\",\n        interaction: this\n      });\n    }, r.end = function (t) {\n      var e;\n      this._ending = !0, t = t || this._latestPointer.event, this.interacting() && (e = this._doPhase({\n        event: t,\n        interaction: this,\n        phase: \"end\"\n      })), this._ending = !1, !0 === e && this.stop();\n    }, r.currentAction = function () {\n      return this._interacting ? this.prepared.name : null;\n    }, r.interacting = function () {\n      return this._interacting;\n    }, r.stop = function () {\n      this._scopeFire(\"interactions:stop\", {\n        interaction: this\n      }), this.interactable = this.element = null, this._interacting = !1, this._stopped = !0, this.prepared.name = this.prevEvent = null;\n    }, r.getPointerIndex = function (t) {\n      var e = X.getPointerId(t);\n      return \"mouse\" === this.pointerType || \"pen\" === this.pointerType ? this.pointers.length - 1 : G.findIndex(this.pointers, function (t) {\n        return t.id === e;\n      });\n    }, r.getPointerInfo = function (t) {\n      return this.pointers[this.getPointerIndex(t)];\n    }, r.updatePointer = function (t, e, n, r) {\n      var i = X.getPointerId(t),\n          o = this.getPointerIndex(t),\n          a = this.pointers[o];\n      return r = !1 !== r && (r || /(down|start)$/i.test(e.type)), a ? a.pointer = t : (a = new _e.PointerInfo(i, t, e, null, null), o = this.pointers.length, this.pointers.push(a)), X.setCoords(this.coords.cur, this.pointers.map(function (t) {\n        return t.pointer;\n      }), this._now()), X.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur), r && (this.pointerIsDown = !0, a.downTime = this.coords.cur.timeStamp, a.downTarget = n, X.pointerExtend(this.downPointer, t), this.interacting() || (X.copyCoords(this.coords.start, this.coords.cur), X.copyCoords(this.coords.prev, this.coords.cur), this.downEvent = e, this.pointerWasMoved = !1)), this._updateLatestPointer(t, e, n), this._scopeFire(\"interactions:update-pointer\", {\n        pointer: t,\n        event: e,\n        eventTarget: n,\n        down: r,\n        pointerInfo: a,\n        pointerIndex: o,\n        interaction: this\n      }), o;\n    }, r.removePointer = function (t, e) {\n      var n = this.getPointerIndex(t);\n\n      if (-1 !== n) {\n        var r = this.pointers[n];\n        this._scopeFire(\"interactions:remove-pointer\", {\n          pointer: t,\n          event: e,\n          eventTarget: null,\n          pointerIndex: n,\n          pointerInfo: r,\n          interaction: this\n        }), this.pointers.splice(n, 1), this.pointerIsDown = !1;\n      }\n    }, r._updateLatestPointer = function (t, e, n) {\n      this._latestPointer.pointer = t, this._latestPointer.event = e, this._latestPointer.eventTarget = n;\n    }, r.destroy = function () {\n      this._latestPointer.pointer = null, this._latestPointer.event = null, this._latestPointer.eventTarget = null;\n    }, r._createPreparedEvent = function (t, e, n, r) {\n      return new be.InteractEvent(this, t, this.prepared.name, e, this.element, n, r);\n    }, r._fireEvent = function (t) {\n      this.interactable.fire(t), (!this.prevEvent || t.timeStamp >= this.prevEvent.timeStamp) && (this.prevEvent = t);\n    }, r._doPhase = function (t) {\n      var e = t.event,\n          n = t.phase,\n          r = t.preEnd,\n          i = t.type,\n          o = this.rect;\n      if (o && \"move\" === n && (I.addEdges(this.edges, o, this.coords.delta[this.interactable.options.deltaSource]), o.width = o.right - o.left, o.height = o.bottom - o.top), !1 === this._scopeFire(\"interactions:before-action-\" + n, t)) return !1;\n\n      var a = t.iEvent = this._createPreparedEvent(e, n, r, i);\n\n      return this._scopeFire(\"interactions:action-\" + n, t), \"start\" === n && (this.prevEvent = a), this._fireEvent(a), this._scopeFire(\"interactions:after-action-\" + n, t), !0;\n    }, r._now = function () {\n      return Date.now();\n    }, n;\n  }();\n\n  Ee.Interaction = Oe;\n  var Te = Oe;\n  Ee.default = Te;\n  var Ie = {};\n\n  function De(t) {\n    t.pointerIsDown && (Ce(t.coords.cur, t.offset.total), t.offset.pending.x = 0, t.offset.pending.y = 0);\n  }\n\n  function je(t) {\n    ze(t.interaction);\n  }\n\n  function ze(t) {\n    if (!function (t) {\n      return !(!t.offset.pending.x && !t.offset.pending.y);\n    }(t)) return !1;\n    var e = t.offset.pending;\n    return Ce(t.coords.cur, e), Ce(t.coords.delta, e), I.addEdges(t.edges, t.rect, e), e.x = 0, e.y = 0, !0;\n  }\n\n  function Ae(t) {\n    var e = t.x,\n        n = t.y;\n    this.offset.pending.x += e, this.offset.pending.y += n, this.offset.total.x += e, this.offset.total.y += n;\n  }\n\n  function Ce(t, e) {\n    var n = t.page,\n        r = t.client,\n        i = e.x,\n        o = e.y;\n    n.x += i, n.y += o, r.x += i, r.y += o;\n  }\n\n  Object.defineProperty(Ie, \"__esModule\", {\n    value: !0\n  }), Ie.addTotal = De, Ie.applyPending = ze, Ie.default = void 0, Ee._ProxyMethods.offsetBy = \"\";\n  var ke = {\n    id: \"offset\",\n    before: [\"modifiers\", \"pointer-events\", \"actions\", \"inertia\"],\n    install: function install(t) {\n      t.Interaction.prototype.offsetBy = Ae;\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        t.interaction.offset = {\n          total: {\n            x: 0,\n            y: 0\n          },\n          pending: {\n            x: 0,\n            y: 0\n          }\n        };\n      },\n      \"interactions:update-pointer\": function interactionsUpdatePointer(t) {\n        return De(t.interaction);\n      },\n      \"interactions:before-action-start\": je,\n      \"interactions:before-action-move\": je,\n      \"interactions:before-action-end\": function interactionsBeforeActionEnd(t) {\n        var e = t.interaction;\n        if (ze(e)) return e.move({\n          offset: !0\n        }), e.end(), !1;\n      },\n      \"interactions:stop\": function interactionsStop(t) {\n        var e = t.interaction;\n        e.offset.total.x = 0, e.offset.total.y = 0, e.offset.pending.x = 0, e.offset.pending.y = 0;\n      }\n    }\n  };\n  Ie.default = ke;\n  var Re = {};\n  Object.defineProperty(Re, \"__esModule\", {\n    value: !0\n  }), Re.default = Re.InertiaState = void 0;\n\n  var Fe = function () {\n    function t(t) {\n      this.active = !1, this.isModified = !1, this.smoothEnd = !1, this.allowResume = !1, this.modification = null, this.modifierCount = 0, this.modifierArg = null, this.startCoords = null, this.t0 = 0, this.v0 = 0, this.te = 0, this.targetOffset = null, this.modifiedOffset = null, this.currentOffset = null, this.lambda_v0 = 0, this.one_ve_v0 = 0, this.timeout = null, this.interaction = void 0, this.interaction = t;\n    }\n\n    var e = t.prototype;\n    return e.start = function (t) {\n      var e = this.interaction,\n          n = Xe(e);\n      if (!n || !n.enabled) return !1;\n      var r = e.coords.velocity.client,\n          i = (0, C.default)(r.x, r.y),\n          o = this.modification || (this.modification = new de.default(e));\n      if (o.copyFrom(e.modification), this.t0 = e._now(), this.allowResume = n.allowResume, this.v0 = i, this.currentOffset = {\n        x: 0,\n        y: 0\n      }, this.startCoords = e.coords.cur.page, this.modifierArg = {\n        interaction: e,\n        interactable: e.interactable,\n        element: e.element,\n        rect: e.rect,\n        edges: e.edges,\n        pageCoords: this.startCoords,\n        preEnd: !0,\n        phase: \"inertiastart\"\n      }, this.t0 - e.coords.cur.timeStamp < 50 && i > n.minSpeed && i > n.endSpeed) this.startInertia();else {\n        if (o.result = o.setAll(this.modifierArg), !o.result.changed) return !1;\n        this.startSmoothEnd();\n      }\n      return e.modification.result.rect = null, e.offsetBy(this.targetOffset), e._doPhase({\n        interaction: e,\n        event: t,\n        phase: \"inertiastart\"\n      }), e.offsetBy({\n        x: -this.targetOffset.x,\n        y: -this.targetOffset.y\n      }), e.modification.result.rect = null, this.active = !0, e.simulation = this, !0;\n    }, e.startInertia = function () {\n      var t = this,\n          e = this.interaction.coords.velocity.client,\n          n = Xe(this.interaction),\n          r = n.resistance,\n          i = -Math.log(n.endSpeed / this.v0) / r;\n      this.targetOffset = {\n        x: (e.x - i) / r,\n        y: (e.y - i) / r\n      }, this.te = i, this.lambda_v0 = r / this.v0, this.one_ve_v0 = 1 - n.endSpeed / this.v0;\n      var o = this.modification,\n          a = this.modifierArg;\n      a.pageCoords = {\n        x: this.startCoords.x + this.targetOffset.x,\n        y: this.startCoords.y + this.targetOffset.y\n      }, o.result = o.setAll(a), o.result.changed && (this.isModified = !0, this.modifiedOffset = {\n        x: this.targetOffset.x + o.result.delta.x,\n        y: this.targetOffset.y + o.result.delta.y\n      }), this.onNextFrame(function () {\n        return t.inertiaTick();\n      });\n    }, e.startSmoothEnd = function () {\n      var t = this;\n      this.smoothEnd = !0, this.isModified = !0, this.targetOffset = {\n        x: this.modification.result.delta.x,\n        y: this.modification.result.delta.y\n      }, this.onNextFrame(function () {\n        return t.smoothEndTick();\n      });\n    }, e.onNextFrame = function (t) {\n      var e = this;\n      this.timeout = bt.default.request(function () {\n        e.active && t();\n      });\n    }, e.inertiaTick = function () {\n      var t,\n          e,\n          n,\n          r,\n          i,\n          o = this,\n          a = this.interaction,\n          s = Xe(a).resistance,\n          l = (a._now() - this.t0) / 1e3;\n\n      if (l < this.te) {\n        var c,\n            u = 1 - (Math.exp(-s * l) - this.lambda_v0) / this.one_ve_v0;\n        this.isModified ? (0, 0, t = this.targetOffset.x, e = this.targetOffset.y, n = this.modifiedOffset.x, r = this.modifiedOffset.y, c = {\n          x: Ye(i = u, 0, t, n),\n          y: Ye(i, 0, e, r)\n        }) : c = {\n          x: this.targetOffset.x * u,\n          y: this.targetOffset.y * u\n        };\n        var d = {\n          x: c.x - this.currentOffset.x,\n          y: c.y - this.currentOffset.y\n        };\n        this.currentOffset.x += d.x, this.currentOffset.y += d.y, a.offsetBy(d), a.move(), this.onNextFrame(function () {\n          return o.inertiaTick();\n        });\n      } else a.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y\n      }), this.end();\n    }, e.smoothEndTick = function () {\n      var t = this,\n          e = this.interaction,\n          n = e._now() - this.t0,\n          r = Xe(e).smoothEndDuration;\n\n      if (n < r) {\n        var i = {\n          x: We(n, 0, this.targetOffset.x, r),\n          y: We(n, 0, this.targetOffset.y, r)\n        },\n            o = {\n          x: i.x - this.currentOffset.x,\n          y: i.y - this.currentOffset.y\n        };\n        this.currentOffset.x += o.x, this.currentOffset.y += o.y, e.offsetBy(o), e.move({\n          skipModifiers: this.modifierCount\n        }), this.onNextFrame(function () {\n          return t.smoothEndTick();\n        });\n      } else e.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y\n      }), this.end();\n    }, e.resume = function (t) {\n      var e = t.pointer,\n          n = t.event,\n          r = t.eventTarget,\n          i = this.interaction;\n      i.offsetBy({\n        x: -this.currentOffset.x,\n        y: -this.currentOffset.y\n      }), i.updatePointer(e, n, r, !0), i._doPhase({\n        interaction: i,\n        event: n,\n        phase: \"resume\"\n      }), (0, X.copyCoords)(i.coords.prev, i.coords.cur), this.stop();\n    }, e.end = function () {\n      this.interaction.move(), this.interaction.end(), this.stop();\n    }, e.stop = function () {\n      this.active = this.smoothEnd = !1, this.interaction.simulation = null, bt.default.cancel(this.timeout);\n    }, t;\n  }();\n\n  function Xe(t) {\n    var e = t.interactable,\n        n = t.prepared;\n    return e && e.options && n.name && e.options[n.name].inertia;\n  }\n\n  function Ye(t, e, n, r) {\n    var i = 1 - t;\n    return i * i * e + 2 * i * t * n + t * t * r;\n  }\n\n  function We(t, e, n, r) {\n    return -n * (t /= r) * (t - 2) + e;\n  }\n\n  Re.InertiaState = Fe;\n  var Le = {\n    id: \"inertia\",\n    before: [\"modifiers\", \"actions\"],\n    install: function install(t) {\n      var e = t.defaults;\n      t.usePlugin(Ie.default), t.usePlugin(he.default), t.actions.phases.inertiastart = !0, t.actions.phases.resume = !0, e.perAction.inertia = {\n        enabled: !1,\n        resistance: 10,\n        minSpeed: 100,\n        endSpeed: 10,\n        allowResume: !0,\n        smoothEndDuration: 300\n      };\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        var e = t.interaction;\n        e.inertia = new Fe(e);\n      },\n      \"interactions:before-action-end\": function interactionsBeforeActionEnd(t) {\n        var e = t.interaction,\n            n = t.event;\n        return (!e._interacting || e.simulation || !e.inertia.start(n)) && null;\n      },\n      \"interactions:down\": function interactionsDown(t) {\n        var e = t.interaction,\n            n = t.eventTarget,\n            r = e.inertia;\n        if (r.active) for (var i = n; o.default.element(i);) {\n          if (i === e.element) {\n            r.resume(t);\n            break;\n          }\n\n          i = _.parentNode(i);\n        }\n      },\n      \"interactions:stop\": function interactionsStop(t) {\n        var e = t.interaction.inertia;\n        e.active && e.stop();\n      },\n      \"interactions:before-action-resume\": function interactionsBeforeActionResume(t) {\n        var e = t.interaction.modification;\n        e.stop(t), e.start(t, t.interaction.coords.cur.page), e.applyToInteraction(t);\n      },\n      \"interactions:before-action-inertiastart\": function interactionsBeforeActionInertiastart(t) {\n        return t.interaction.modification.setAndApply(t);\n      },\n      \"interactions:action-resume\": he.addEventModifiers,\n      \"interactions:action-inertiastart\": he.addEventModifiers,\n      \"interactions:after-action-inertiastart\": function interactionsAfterActionInertiastart(t) {\n        return t.interaction.modification.restoreInteractionCoords(t);\n      },\n      \"interactions:after-action-resume\": function interactionsAfterActionResume(t) {\n        return t.interaction.modification.restoreInteractionCoords(t);\n      }\n    }\n  };\n  Re.default = Le;\n  var Be = {};\n\n  function Ne(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      if (t.immediatePropagationStopped) break;\n      r(t);\n    }\n  }\n\n  Object.defineProperty(Be, \"__esModule\", {\n    value: !0\n  }), Be.Eventable = void 0;\n\n  var Ve = function () {\n    function t(t) {\n      this.options = void 0, this.types = {}, this.propagationStopped = !1, this.immediatePropagationStopped = !1, this.global = void 0, this.options = (0, T.default)({}, t || {});\n    }\n\n    var e = t.prototype;\n    return e.fire = function (t) {\n      var e,\n          n = this.global;\n      (e = this.types[t.type]) && Ne(t, e), !t.propagationStopped && n && (e = n[t.type]) && Ne(t, e);\n    }, e.on = function (t, e) {\n      var n = (0, z.default)(t, e);\n\n      for (t in n) {\n        this.types[t] = G.merge(this.types[t] || [], n[t]);\n      }\n    }, e.off = function (t, e) {\n      var n = (0, z.default)(t, e);\n\n      for (t in n) {\n        var r = this.types[t];\n        if (r && r.length) for (var i = 0; i < n[t].length; i++) {\n          var o = n[t][i],\n              a = r.indexOf(o);\n          -1 !== a && r.splice(a, 1);\n        }\n      }\n    }, e.getRect = function (t) {\n      return null;\n    }, t;\n  }();\n\n  Be.Eventable = Ve;\n  var qe = {};\n  Object.defineProperty(qe, \"__esModule\", {\n    value: !0\n  }), qe.default = function (t, e) {\n    if (e.phaselessTypes[t]) return !0;\n\n    for (var n in e.map) {\n      if (0 === t.indexOf(n) && t.substr(n.length) in e.phases) return !0;\n    }\n\n    return !1;\n  };\n  var Ue = {};\n\n  function Ge(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n    }\n  }\n\n  Object.defineProperty(Ue, \"__esModule\", {\n    value: !0\n  }), Ue.Interactable = void 0;\n\n  var He = function () {\n    var t, n;\n\n    function r(t, n, r, i) {\n      this.options = void 0, this._actions = void 0, this.target = void 0, this.events = new Be.Eventable(), this._context = void 0, this._win = void 0, this._doc = void 0, this._scopeEvents = void 0, this._rectChecker = void 0, this._actions = n.actions, this.target = t, this._context = n.context || r, this._win = (0, e.getWindow)((0, _.trySelector)(t) ? this._context : t), this._doc = this._win.document, this._scopeEvents = i, this.set(n);\n    }\n\n    t = r, (n = [{\n      key: \"_defaults\",\n      get: function get() {\n        return {\n          base: {},\n          perAction: {},\n          actions: {}\n        };\n      }\n    }]) && Ge(t.prototype, n);\n    var i = r.prototype;\n    return i.setOnEvents = function (t, e) {\n      return o.default.func(e.onstart) && this.on(t + \"start\", e.onstart), o.default.func(e.onmove) && this.on(t + \"move\", e.onmove), o.default.func(e.onend) && this.on(t + \"end\", e.onend), o.default.func(e.oninertiastart) && this.on(t + \"inertiastart\", e.oninertiastart), this;\n    }, i.updatePerActionListeners = function (t, e, n) {\n      (o.default.array(e) || o.default.object(e)) && this.off(t, e), (o.default.array(n) || o.default.object(n)) && this.on(t, n);\n    }, i.setPerAction = function (t, e) {\n      var n = this._defaults;\n\n      for (var r in e) {\n        var i = r,\n            a = this.options[t],\n            s = e[i];\n        \"listeners\" === i && this.updatePerActionListeners(t, a.listeners, s), o.default.array(s) ? a[i] = G.from(s) : o.default.plainObject(s) ? (a[i] = (0, T.default)(a[i] || {}, (0, ue.default)(s)), o.default.object(n.perAction[i]) && \"enabled\" in n.perAction[i] && (a[i].enabled = !1 !== s.enabled)) : o.default.bool(s) && o.default.object(n.perAction[i]) ? a[i].enabled = s : a[i] = s;\n      }\n    }, i.getRect = function (t) {\n      return t = t || (o.default.element(this.target) ? this.target : null), o.default.string(this.target) && (t = t || this._context.querySelector(this.target)), (0, _.getElementRect)(t);\n    }, i.rectChecker = function (t) {\n      var e = this;\n      return o.default.func(t) ? (this._rectChecker = t, this.getRect = function (t) {\n        var n = (0, T.default)({}, e._rectChecker(t));\n        return \"width\" in n || (n.width = n.right - n.left, n.height = n.bottom - n.top), n;\n      }, this) : null === t ? (delete this.getRect, delete this._rectChecker, this) : this.getRect;\n    }, i._backCompatOption = function (t, e) {\n      if ((0, _.trySelector)(e) || o.default.object(e)) {\n        for (var n in this.options[t] = e, this._actions.map) {\n          this.options[n][t] = e;\n        }\n\n        return this;\n      }\n\n      return this.options[t];\n    }, i.origin = function (t) {\n      return this._backCompatOption(\"origin\", t);\n    }, i.deltaSource = function (t) {\n      return \"page\" === t || \"client\" === t ? (this.options.deltaSource = t, this) : this.options.deltaSource;\n    }, i.context = function () {\n      return this._context;\n    }, i.inContext = function (t) {\n      return this._context === t.ownerDocument || (0, _.nodeContains)(this._context, t);\n    }, i.testIgnoreAllow = function (t, e, n) {\n      return !this.testIgnore(t.ignoreFrom, e, n) && this.testAllow(t.allowFrom, e, n);\n    }, i.testAllow = function (t, e, n) {\n      return !t || !!o.default.element(n) && (o.default.string(t) ? (0, _.matchesUpTo)(n, t, e) : !!o.default.element(t) && (0, _.nodeContains)(t, n));\n    }, i.testIgnore = function (t, e, n) {\n      return !(!t || !o.default.element(n)) && (o.default.string(t) ? (0, _.matchesUpTo)(n, t, e) : !!o.default.element(t) && (0, _.nodeContains)(t, n));\n    }, i.fire = function (t) {\n      return this.events.fire(t), this;\n    }, i._onOff = function (t, e, n, r) {\n      o.default.object(e) && !o.default.array(e) && (r = n, n = null);\n      var i = \"on\" === t ? \"add\" : \"remove\",\n          a = (0, z.default)(e, n);\n\n      for (var s in a) {\n        \"wheel\" === s && (s = y.default.wheelEvent);\n\n        for (var l = 0; l < a[s].length; l++) {\n          var c = a[s][l];\n          (0, qe.default)(s, this._actions) ? this.events[t](s, c) : o.default.string(this.target) ? this._scopeEvents[i + \"Delegate\"](this.target, this._context, s, c, r) : this._scopeEvents[i](this.target, s, c, r);\n        }\n      }\n\n      return this;\n    }, i.on = function (t, e, n) {\n      return this._onOff(\"on\", t, e, n);\n    }, i.off = function (t, e, n) {\n      return this._onOff(\"off\", t, e, n);\n    }, i.set = function (t) {\n      var e = this._defaults;\n\n      for (var n in o.default.object(t) || (t = {}), this.options = (0, ue.default)(e.base), this._actions.methodDict) {\n        var r = n,\n            i = this._actions.methodDict[r];\n        this.options[r] = {}, this.setPerAction(r, (0, T.default)((0, T.default)({}, e.perAction), e.actions[r])), this[i](t[r]);\n      }\n\n      for (var a in t) {\n        o.default.func(this[a]) && this[a](t[a]);\n      }\n\n      return this;\n    }, i.unset = function () {\n      if (o.default.string(this.target)) for (var t in this._scopeEvents.delegatedEvents) {\n        for (var e = this._scopeEvents.delegatedEvents[t], n = e.length - 1; n >= 0; n--) {\n          var r = e[n],\n              i = r.selector,\n              a = r.context,\n              s = r.listeners;\n          i === this.target && a === this._context && e.splice(n, 1);\n\n          for (var l = s.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(this.target, this._context, t, s[l][0], s[l][1]);\n          }\n        }\n      } else this._scopeEvents.remove(this.target, \"all\");\n    }, r;\n  }();\n\n  Ue.Interactable = He;\n  var $e = {};\n  Object.defineProperty($e, \"__esModule\", {\n    value: !0\n  }), $e.InteractableSet = void 0;\n\n  var Ke = function () {\n    function t(t) {\n      var e = this;\n      this.list = [], this.selectorMap = {}, this.scope = void 0, this.scope = t, t.addListeners({\n        \"interactable:unset\": function interactableUnset(t) {\n          var n = t.interactable,\n              r = n.target,\n              i = n._context,\n              a = o.default.string(r) ? e.selectorMap[r] : r[e.scope.id],\n              s = G.findIndex(a, function (t) {\n            return t.context === i;\n          });\n          a[s] && (a[s].context = null, a[s].interactable = null), a.splice(s, 1);\n        }\n      });\n    }\n\n    var e = t.prototype;\n    return e.new = function (t, e) {\n      e = (0, T.default)(e || {}, {\n        actions: this.scope.actions\n      });\n      var n = new this.scope.Interactable(t, e, this.scope.document, this.scope.events),\n          r = {\n        context: n._context,\n        interactable: n\n      };\n      return this.scope.addDocument(n._doc), this.list.push(n), o.default.string(t) ? (this.selectorMap[t] || (this.selectorMap[t] = []), this.selectorMap[t].push(r)) : (n.target[this.scope.id] || Object.defineProperty(t, this.scope.id, {\n        value: [],\n        configurable: !0\n      }), t[this.scope.id].push(r)), this.scope.fire(\"interactable:new\", {\n        target: t,\n        options: e,\n        interactable: n,\n        win: this.scope._win\n      }), n;\n    }, e.get = function (t, e) {\n      var n = e && e.context || this.scope.document,\n          r = o.default.string(t),\n          i = r ? this.selectorMap[t] : t[this.scope.id];\n      if (!i) return null;\n      var a = G.find(i, function (e) {\n        return e.context === n && (r || e.interactable.inContext(t));\n      });\n      return a && a.interactable;\n    }, e.forEachMatch = function (t, e) {\n      for (var n = 0; n < this.list.length; n++) {\n        var r = this.list[n],\n            i = void 0;\n        if ((o.default.string(r.target) ? o.default.element(t) && _.matchesSelector(t, r.target) : t === r.target) && r.inContext(t) && (i = e(r)), void 0 !== i) return i;\n      }\n    }, t;\n  }();\n\n  $e.InteractableSet = Ke;\n  var Ze = {};\n  Object.defineProperty(Ze, \"__esModule\", {\n    value: !0\n  }), Ze.default = void 0;\n\n  var Je = function () {\n    function t(t) {\n      this.currentTarget = void 0, this.originalEvent = void 0, this.type = void 0, this.originalEvent = t, (0, k.default)(this, t);\n    }\n\n    var e = t.prototype;\n    return e.preventOriginalDefault = function () {\n      this.originalEvent.preventDefault();\n    }, e.stopPropagation = function () {\n      this.originalEvent.stopPropagation();\n    }, e.stopImmediatePropagation = function () {\n      this.originalEvent.stopImmediatePropagation();\n    }, t;\n  }();\n\n  function Qe(t) {\n    if (!o.default.object(t)) return {\n      capture: !!t,\n      passive: !1\n    };\n    var e = (0, T.default)({}, t);\n    return e.capture = !!t.capture, e.passive = !!t.passive, e;\n  }\n\n  var tn = {\n    id: \"events\",\n    install: function install(t) {\n      var e = [],\n          n = {},\n          r = [],\n          i = {\n        add: a,\n        remove: s,\n        addDelegate: function addDelegate(t, e, i, o, s) {\n          var u = Qe(s);\n\n          if (!n[i]) {\n            n[i] = [];\n\n            for (var d = 0; d < r.length; d++) {\n              var f = r[d];\n              a(f, i, l), a(f, i, c, !0);\n            }\n          }\n\n          var p = n[i],\n              v = G.find(p, function (n) {\n            return n.selector === t && n.context === e;\n          });\n          v || (v = {\n            selector: t,\n            context: e,\n            listeners: []\n          }, p.push(v)), v.listeners.push([o, u]);\n        },\n        removeDelegate: function removeDelegate(t, e, r, i, o) {\n          var a,\n              u = Qe(o),\n              d = n[r],\n              f = !1;\n          if (d) for (a = d.length - 1; a >= 0; a--) {\n            var p = d[a];\n\n            if (p.selector === t && p.context === e) {\n              for (var v = p.listeners, h = v.length - 1; h >= 0; h--) {\n                var g = v[h],\n                    m = g[0],\n                    y = g[1],\n                    b = y.capture,\n                    x = y.passive;\n\n                if (m === i && b === u.capture && x === u.passive) {\n                  v.splice(h, 1), v.length || (d.splice(a, 1), s(e, r, l), s(e, r, c, !0)), f = !0;\n                  break;\n                }\n              }\n\n              if (f) break;\n            }\n          }\n        },\n        delegateListener: l,\n        delegateUseCapture: c,\n        delegatedEvents: n,\n        documents: r,\n        targets: e,\n        supportsOptions: !1,\n        supportsPassive: !1\n      };\n\n      function a(t, n, r, o) {\n        var a = Qe(o),\n            s = G.find(e, function (e) {\n          return e.eventTarget === t;\n        });\n        s || (s = {\n          eventTarget: t,\n          events: {}\n        }, e.push(s)), s.events[n] || (s.events[n] = []), t.addEventListener && !G.contains(s.events[n], r) && (t.addEventListener(n, r, i.supportsOptions ? a : a.capture), s.events[n].push(r));\n      }\n\n      function s(t, n, r, o) {\n        var a = Qe(o),\n            l = G.findIndex(e, function (e) {\n          return e.eventTarget === t;\n        }),\n            c = e[l];\n        if (c && c.events) if (\"all\" !== n) {\n          var u = !1,\n              d = c.events[n];\n\n          if (d) {\n            if (\"all\" === r) {\n              for (var f = d.length - 1; f >= 0; f--) {\n                s(t, n, d[f], a);\n              }\n\n              return;\n            }\n\n            for (var p = 0; p < d.length; p++) {\n              if (d[p] === r) {\n                t.removeEventListener(n, r, i.supportsOptions ? a : a.capture), d.splice(p, 1), 0 === d.length && (delete c.events[n], u = !0);\n                break;\n              }\n            }\n          }\n\n          u && !Object.keys(c.events).length && e.splice(l, 1);\n        } else for (n in c.events) {\n          c.events.hasOwnProperty(n) && s(t, n, \"all\");\n        }\n      }\n\n      function l(t, e) {\n        for (var r = Qe(e), i = new Je(t), a = n[t.type], s = X.getEventTargets(t)[0], l = s; o.default.element(l);) {\n          for (var c = 0; c < a.length; c++) {\n            var u = a[c],\n                d = u.selector,\n                f = u.context;\n\n            if (_.matchesSelector(l, d) && _.nodeContains(f, s) && _.nodeContains(f, l)) {\n              var p = u.listeners;\n              i.currentTarget = l;\n\n              for (var v = 0; v < p.length; v++) {\n                var h = p[v],\n                    g = h[0],\n                    m = h[1],\n                    y = m.capture,\n                    b = m.passive;\n                y === r.capture && b === r.passive && g(i);\n              }\n            }\n          }\n\n          l = _.parentNode(l);\n        }\n      }\n\n      function c(t) {\n        return l(t, !0);\n      }\n\n      return t.document.createElement(\"div\").addEventListener(\"test\", null, {\n        get capture() {\n          return i.supportsOptions = !0;\n        },\n\n        get passive() {\n          return i.supportsPassive = !0;\n        }\n\n      }), t.events = i, i;\n    }\n  };\n  Ze.default = tn;\n  var en = {};\n  Object.defineProperty(en, \"__esModule\", {\n    value: !0\n  }), en.createInteractStatic = function (t) {\n    var e = function e(n, r) {\n      var i = t.interactables.get(n, r);\n      return i || ((i = t.interactables.new(n, r)).events.global = e.globalEvents), i;\n    };\n\n    return e.getPointerAverage = X.pointerAverage, e.getTouchBBox = X.touchBBox, e.getTouchDistance = X.touchDistance, e.getTouchAngle = X.touchAngle, e.getElementRect = _.getElementRect, e.getElementClientRect = _.getElementClientRect, e.matchesSelector = _.matchesSelector, e.closest = _.closest, e.globalEvents = {}, e.version = \"1.10.1\", e.scope = t, e.use = function (t, e) {\n      return this.scope.usePlugin(t, e), this;\n    }, e.isSet = function (t, e) {\n      return !!this.scope.interactables.get(t, e && e.context);\n    }, e.on = function (t, e, n) {\n      if (o.default.string(t) && -1 !== t.search(\" \") && (t = t.trim().split(/ +/)), o.default.array(t)) {\n        for (var r = 0; r < t.length; r++) {\n          var i = t[r];\n          this.on(i, e, n);\n        }\n\n        return this;\n      }\n\n      if (o.default.object(t)) {\n        for (var a in t) {\n          this.on(a, t[a], e);\n        }\n\n        return this;\n      }\n\n      return (0, qe.default)(t, this.scope.actions) ? this.globalEvents[t] ? this.globalEvents[t].push(e) : this.globalEvents[t] = [e] : this.scope.events.add(this.scope.document, t, e, {\n        options: n\n      }), this;\n    }, e.off = function (t, e, n) {\n      if (o.default.string(t) && -1 !== t.search(\" \") && (t = t.trim().split(/ +/)), o.default.array(t)) {\n        for (var r = 0; r < t.length; r++) {\n          var i = t[r];\n          this.off(i, e, n);\n        }\n\n        return this;\n      }\n\n      if (o.default.object(t)) {\n        for (var a in t) {\n          this.off(a, t[a], e);\n        }\n\n        return this;\n      }\n\n      var s;\n      return (0, qe.default)(t, this.scope.actions) ? t in this.globalEvents && -1 !== (s = this.globalEvents[t].indexOf(e)) && this.globalEvents[t].splice(s, 1) : this.scope.events.remove(this.scope.document, t, e, n), this;\n    }, e.debug = function () {\n      return this.scope;\n    }, e.supportsTouch = function () {\n      return y.default.supportsTouch;\n    }, e.supportsPointerEvent = function () {\n      return y.default.supportsPointerEvent;\n    }, e.stop = function () {\n      for (var t = 0; t < this.scope.interactions.list.length; t++) {\n        this.scope.interactions.list[t].stop();\n      }\n\n      return this;\n    }, e.pointerMoveTolerance = function (t) {\n      return o.default.number(t) ? (this.scope.interactions.pointerMoveTolerance = t, this) : this.scope.interactions.pointerMoveTolerance;\n    }, e.addDocument = function (t, e) {\n      this.scope.addDocument(t, e);\n    }, e.removeDocument = function (t) {\n      this.scope.removeDocument(t);\n    }, e;\n  };\n  var nn = {};\n  Object.defineProperty(nn, \"__esModule\", {\n    value: !0\n  }), nn.default = void 0;\n  var rn = {\n    methodOrder: [\"simulationResume\", \"mouseOrPen\", \"hasPointer\", \"idle\"],\n    search: function search(t) {\n      for (var e = 0; e < rn.methodOrder.length; e++) {\n        var n;\n        n = rn.methodOrder[e];\n        var r = rn[n](t);\n        if (r) return r;\n      }\n\n      return null;\n    },\n    simulationResume: function simulationResume(t) {\n      var e = t.pointerType,\n          n = t.eventType,\n          r = t.eventTarget,\n          i = t.scope;\n      if (!/down|start/i.test(n)) return null;\n\n      for (var o = 0; o < i.interactions.list.length; o++) {\n        var a = i.interactions.list[o],\n            s = r;\n        if (a.simulation && a.simulation.allowResume && a.pointerType === e) for (; s;) {\n          if (s === a.element) return a;\n          s = _.parentNode(s);\n        }\n      }\n\n      return null;\n    },\n    mouseOrPen: function mouseOrPen(t) {\n      var e,\n          n = t.pointerId,\n          r = t.pointerType,\n          i = t.eventType,\n          o = t.scope;\n      if (\"mouse\" !== r && \"pen\" !== r) return null;\n\n      for (var a = 0; a < o.interactions.list.length; a++) {\n        var s = o.interactions.list[a];\n\n        if (s.pointerType === r) {\n          if (s.simulation && !on(s, n)) continue;\n          if (s.interacting()) return s;\n          e || (e = s);\n        }\n      }\n\n      if (e) return e;\n\n      for (var l = 0; l < o.interactions.list.length; l++) {\n        var c = o.interactions.list[l];\n        if (!(c.pointerType !== r || /down/i.test(i) && c.simulation)) return c;\n      }\n\n      return null;\n    },\n    hasPointer: function hasPointer(t) {\n      for (var e = t.pointerId, n = t.scope, r = 0; r < n.interactions.list.length; r++) {\n        var i = n.interactions.list[r];\n        if (on(i, e)) return i;\n      }\n\n      return null;\n    },\n    idle: function idle(t) {\n      for (var e = t.pointerType, n = t.scope, r = 0; r < n.interactions.list.length; r++) {\n        var i = n.interactions.list[r];\n\n        if (1 === i.pointers.length) {\n          var o = i.interactable;\n          if (o && (!o.options.gesture || !o.options.gesture.enabled)) continue;\n        } else if (i.pointers.length >= 2) continue;\n\n        if (!i.interacting() && e === i.pointerType) return i;\n      }\n\n      return null;\n    }\n  };\n\n  function on(t, e) {\n    return t.pointers.some(function (t) {\n      return t.id === e;\n    });\n  }\n\n  var an = rn;\n  nn.default = an;\n  var sn = {};\n\n  function ln(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n    }\n  }\n\n  Object.defineProperty(sn, \"__esModule\", {\n    value: !0\n  }), sn.default = void 0;\n  var cn = [\"pointerDown\", \"pointerMove\", \"pointerUp\", \"updatePointer\", \"removePointer\", \"windowBlur\"];\n\n  function un(t, e) {\n    return function (n) {\n      var r = e.interactions.list,\n          i = X.getPointerType(n),\n          o = X.getEventTargets(n),\n          a = o[0],\n          s = o[1],\n          l = [];\n\n      if (/^touch/.test(n.type)) {\n        e.prevTouchTime = e.now();\n\n        for (var c = 0; c < n.changedTouches.length; c++) {\n          var u = n.changedTouches[c],\n              d = {\n            pointer: u,\n            pointerId: X.getPointerId(u),\n            pointerType: i,\n            eventType: n.type,\n            eventTarget: a,\n            curEventTarget: s,\n            scope: e\n          },\n              f = dn(d);\n          l.push([d.pointer, d.eventTarget, d.curEventTarget, f]);\n        }\n      } else {\n        var p = !1;\n\n        if (!y.default.supportsPointerEvent && /mouse/.test(n.type)) {\n          for (var v = 0; v < r.length && !p; v++) {\n            p = \"mouse\" !== r[v].pointerType && r[v].pointerIsDown;\n          }\n\n          p = p || e.now() - e.prevTouchTime < 500 || 0 === n.timeStamp;\n        }\n\n        if (!p) {\n          var h = {\n            pointer: n,\n            pointerId: X.getPointerId(n),\n            pointerType: i,\n            eventType: n.type,\n            curEventTarget: s,\n            eventTarget: a,\n            scope: e\n          },\n              g = dn(h);\n          l.push([h.pointer, h.eventTarget, h.curEventTarget, g]);\n        }\n      }\n\n      for (var m = 0; m < l.length; m++) {\n        var b = l[m],\n            x = b[0],\n            _ = b[1],\n            w = b[2];\n        b[3][t](x, n, _, w);\n      }\n    };\n  }\n\n  function dn(t) {\n    var e = t.pointerType,\n        n = t.scope,\n        r = {\n      interaction: nn.default.search(t),\n      searchDetails: t\n    };\n    return n.fire(\"interactions:find\", r), r.interaction || n.interactions.new({\n      pointerType: e\n    });\n  }\n\n  function fn(t, e) {\n    var n = t.doc,\n        r = t.scope,\n        i = t.options,\n        o = r.interactions.docEvents,\n        a = r.events,\n        s = a[e];\n\n    for (var l in r.browser.isIOS && !i.events && (i.events = {\n      passive: !1\n    }), a.delegatedEvents) {\n      s(n, l, a.delegateListener), s(n, l, a.delegateUseCapture, !0);\n    }\n\n    for (var c = i && i.events, u = 0; u < o.length; u++) {\n      var d = o[u];\n      s(n, d.type, d.listener, c);\n    }\n  }\n\n  var pn = {\n    id: \"core/interactions\",\n    install: function install(t) {\n      for (var e = {}, n = 0; n < cn.length; n++) {\n        var r = cn[n];\n        e[r] = un(r, t);\n      }\n\n      var i,\n          o = y.default.pEventTypes;\n\n      function a() {\n        for (var e = 0; e < t.interactions.list.length; e++) {\n          var n = t.interactions.list[e];\n          if (n.pointerIsDown && \"touch\" === n.pointerType && !n._interacting) for (var r = function r() {\n            var e = n.pointers[i];\n            t.documents.some(function (t) {\n              var n = t.doc;\n              return (0, _.nodeContains)(n, e.downTarget);\n            }) || n.removePointer(e.pointer, e.event);\n          }, i = 0; i < n.pointers.length; i++) {\n            r();\n          }\n        }\n      }\n\n      (i = v.default.PointerEvent ? [{\n        type: o.down,\n        listener: a\n      }, {\n        type: o.down,\n        listener: e.pointerDown\n      }, {\n        type: o.move,\n        listener: e.pointerMove\n      }, {\n        type: o.up,\n        listener: e.pointerUp\n      }, {\n        type: o.cancel,\n        listener: e.pointerUp\n      }] : [{\n        type: \"mousedown\",\n        listener: e.pointerDown\n      }, {\n        type: \"mousemove\",\n        listener: e.pointerMove\n      }, {\n        type: \"mouseup\",\n        listener: e.pointerUp\n      }, {\n        type: \"touchstart\",\n        listener: a\n      }, {\n        type: \"touchstart\",\n        listener: e.pointerDown\n      }, {\n        type: \"touchmove\",\n        listener: e.pointerMove\n      }, {\n        type: \"touchend\",\n        listener: e.pointerUp\n      }, {\n        type: \"touchcancel\",\n        listener: e.pointerUp\n      }]).push({\n        type: \"blur\",\n        listener: function listener(e) {\n          for (var n = 0; n < t.interactions.list.length; n++) {\n            t.interactions.list[n].documentBlur(e);\n          }\n        }\n      }), t.prevTouchTime = 0, t.Interaction = function (e) {\n        var n, r, i, o;\n\n        function a() {\n          return e.apply(this, arguments) || this;\n        }\n\n        return r = e, (n = a).prototype = Object.create(r.prototype), n.prototype.constructor = n, n.__proto__ = r, a.prototype._now = function () {\n          return t.now();\n        }, i = a, (o = [{\n          key: \"pointerMoveTolerance\",\n          get: function get() {\n            return t.interactions.pointerMoveTolerance;\n          },\n          set: function set(e) {\n            t.interactions.pointerMoveTolerance = e;\n          }\n        }]) && ln(i.prototype, o), a;\n      }(Ee.default), t.interactions = {\n        list: [],\n        new: function _new(e) {\n          e.scopeFire = function (e, n) {\n            return t.fire(e, n);\n          };\n\n          var n = new t.Interaction(e);\n          return t.interactions.list.push(n), n;\n        },\n        listeners: e,\n        docEvents: i,\n        pointerMoveTolerance: 1\n      }, t.usePlugin(Jt.default);\n    },\n    listeners: {\n      \"scope:add-document\": function scopeAddDocument(t) {\n        return fn(t, \"add\");\n      },\n      \"scope:remove-document\": function scopeRemoveDocument(t) {\n        return fn(t, \"remove\");\n      },\n      \"interactable:unset\": function interactableUnset(t, e) {\n        for (var n = t.interactable, r = e.interactions.list.length - 1; r >= 0; r--) {\n          var i = e.interactions.list[r];\n          i.interactable === n && (i.stop(), e.fire(\"interactions:destroy\", {\n            interaction: i\n          }), i.destroy(), e.interactions.list.length > 2 && e.interactions.list.splice(r, 1));\n        }\n      }\n    },\n    onDocSignal: fn,\n    doOnInteractions: un,\n    methodNames: cn\n  };\n  sn.default = pn;\n  var vn = {};\n\n  function hn(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var r = e[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n    }\n  }\n\n  Object.defineProperty(vn, \"__esModule\", {\n    value: !0\n  }), vn.initScope = mn, vn.Scope = void 0;\n\n  var gn = function () {\n    function t() {\n      var t = this;\n      this.id = \"__interact_scope_\" + Math.floor(100 * Math.random()), this.isInitialized = !1, this.listenerMaps = [], this.browser = y.default, this.defaults = (0, ue.default)(ye.defaults), this.Eventable = Be.Eventable, this.actions = {\n        map: {},\n        phases: {\n          start: !0,\n          move: !0,\n          end: !0\n        },\n        methodDict: {},\n        phaselessTypes: {}\n      }, this.interactStatic = (0, en.createInteractStatic)(this), this.InteractEvent = be.InteractEvent, this.Interactable = void 0, this.interactables = new $e.InteractableSet(this), this._win = void 0, this.document = void 0, this.window = void 0, this.documents = [], this._plugins = {\n        list: [],\n        map: {}\n      }, this.onWindowUnload = function (e) {\n        return t.removeDocument(e.target);\n      };\n      var e = this;\n\n      this.Interactable = function (t) {\n        var n, r;\n\n        function i() {\n          return t.apply(this, arguments) || this;\n        }\n\n        r = t, (n = i).prototype = Object.create(r.prototype), n.prototype.constructor = n, n.__proto__ = r;\n        var o,\n            a,\n            s = i.prototype;\n        return s.set = function (n) {\n          return t.prototype.set.call(this, n), e.fire(\"interactable:set\", {\n            options: n,\n            interactable: this\n          }), this;\n        }, s.unset = function () {\n          t.prototype.unset.call(this), e.interactables.list.splice(e.interactables.list.indexOf(this), 1), e.fire(\"interactable:unset\", {\n            interactable: this\n          });\n        }, o = i, (a = [{\n          key: \"_defaults\",\n          get: function get() {\n            return e.defaults;\n          }\n        }]) && hn(o.prototype, a), i;\n      }(Ue.Interactable);\n    }\n\n    var n = t.prototype;\n    return n.addListeners = function (t, e) {\n      this.listenerMaps.push({\n        id: e,\n        map: t\n      });\n    }, n.fire = function (t, e) {\n      for (var n = 0; n < this.listenerMaps.length; n++) {\n        var r = this.listenerMaps[n].map[t];\n        if (r && !1 === r(e, this, t)) return !1;\n      }\n    }, n.init = function (t) {\n      return this.isInitialized ? this : mn(this, t);\n    }, n.pluginIsInstalled = function (t) {\n      return this._plugins.map[t.id] || -1 !== this._plugins.list.indexOf(t);\n    }, n.usePlugin = function (t, e) {\n      if (!this.isInitialized) return this;\n      if (this.pluginIsInstalled(t)) return this;\n\n      if (t.id && (this._plugins.map[t.id] = t), this._plugins.list.push(t), t.install && t.install(this, e), t.listeners && t.before) {\n        for (var n = 0, r = this.listenerMaps.length, i = t.before.reduce(function (t, e) {\n          return t[e] = !0, t[yn(e)] = !0, t;\n        }, {}); n < r; n++) {\n          var o = this.listenerMaps[n].id;\n          if (i[o] || i[yn(o)]) break;\n        }\n\n        this.listenerMaps.splice(n, 0, {\n          id: t.id,\n          map: t.listeners\n        });\n      } else t.listeners && this.listenerMaps.push({\n        id: t.id,\n        map: t.listeners\n      });\n\n      return this;\n    }, n.addDocument = function (t, n) {\n      if (-1 !== this.getDocIndex(t)) return !1;\n      var r = e.getWindow(t);\n      n = n ? (0, T.default)({}, n) : {}, this.documents.push({\n        doc: t,\n        options: n\n      }), this.events.documents.push(t), t !== this.document && this.events.add(r, \"unload\", this.onWindowUnload), this.fire(\"scope:add-document\", {\n        doc: t,\n        window: r,\n        scope: this,\n        options: n\n      });\n    }, n.removeDocument = function (t) {\n      var n = this.getDocIndex(t),\n          r = e.getWindow(t),\n          i = this.documents[n].options;\n      this.events.remove(r, \"unload\", this.onWindowUnload), this.documents.splice(n, 1), this.events.documents.splice(n, 1), this.fire(\"scope:remove-document\", {\n        doc: t,\n        window: r,\n        scope: this,\n        options: i\n      });\n    }, n.getDocIndex = function (t) {\n      for (var e = 0; e < this.documents.length; e++) {\n        if (this.documents[e].doc === t) return e;\n      }\n\n      return -1;\n    }, n.getDocOptions = function (t) {\n      var e = this.getDocIndex(t);\n      return -1 === e ? null : this.documents[e].options;\n    }, n.now = function () {\n      return (this.window.Date || Date).now();\n    }, t;\n  }();\n\n  function mn(t, n) {\n    return t.isInitialized = !0, e.init(n), v.default.init(n), y.default.init(n), bt.default.init(n), t.window = n, t.document = n.document, t.usePlugin(sn.default), t.usePlugin(Ze.default), t;\n  }\n\n  function yn(t) {\n    return t && t.replace(/\\/.*$/, \"\");\n  }\n\n  vn.Scope = gn;\n  var bn = {};\n  Object.defineProperty(bn, \"__esModule\", {\n    value: !0\n  }), bn.init = bn.default = void 0;\n  var xn = new vn.Scope(),\n      _n = xn.interactStatic;\n  bn.default = _n;\n\n  var wn = function wn(t) {\n    return xn.init(t);\n  };\n\n  bn.init = wn, \"object\" == typeof window && window && wn(window);\n  var Pn = {};\n  Object.defineProperty(Pn, \"__esModule\", {\n    value: !0\n  }), Pn.default = void 0, Pn.default = function () {};\n  var En = {};\n  Object.defineProperty(En, \"__esModule\", {\n    value: !0\n  }), En.default = void 0, En.default = function () {};\n  var Sn = {};\n  Object.defineProperty(Sn, \"__esModule\", {\n    value: !0\n  }), Sn.default = void 0, Sn.default = function (t) {\n    var e = [[\"x\", \"y\"], [\"left\", \"top\"], [\"right\", \"bottom\"], [\"width\", \"height\"]].filter(function (e) {\n      var n = e[0],\n          r = e[1];\n      return n in t || r in t;\n    }),\n        n = function n(_n2, r) {\n      for (var i = t.range, o = t.limits, a = void 0 === o ? {\n        left: -1 / 0,\n        right: 1 / 0,\n        top: -1 / 0,\n        bottom: 1 / 0\n      } : o, s = t.offset, l = void 0 === s ? {\n        x: 0,\n        y: 0\n      } : s, c = {\n        range: i,\n        grid: t,\n        x: null,\n        y: null\n      }, u = 0; u < e.length; u++) {\n        var d = e[u],\n            f = d[0],\n            p = d[1],\n            v = Math.round((_n2 - l.x) / t[f]),\n            h = Math.round((r - l.y) / t[p]);\n        c[f] = Math.max(a.left, Math.min(a.right, v * t[f] + l.x)), c[p] = Math.max(a.top, Math.min(a.bottom, h * t[p] + l.y));\n      }\n\n      return c;\n    };\n\n    return n.grid = t, n.coordFields = e, n;\n  };\n  var Mn = {};\n  Object.defineProperty(Mn, \"__esModule\", {\n    value: !0\n  }), Object.defineProperty(Mn, \"edgeTarget\", {\n    enumerable: !0,\n    get: function get() {\n      return Pn.default;\n    }\n  }), Object.defineProperty(Mn, \"elements\", {\n    enumerable: !0,\n    get: function get() {\n      return En.default;\n    }\n  }), Object.defineProperty(Mn, \"grid\", {\n    enumerable: !0,\n    get: function get() {\n      return Sn.default;\n    }\n  });\n  var On = {};\n  Object.defineProperty(On, \"__esModule\", {\n    value: !0\n  }), On.default = void 0;\n  var Tn = {\n    id: \"snappers\",\n    install: function install(t) {\n      var e = t.interactStatic;\n      e.snappers = (0, T.default)(e.snappers || {}, Mn), e.createSnapGrid = e.snappers.grid;\n    }\n  };\n  On.default = Tn;\n  var In = {};\n\n  function Dn() {\n    return (Dn = Object.assign || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }).apply(this, arguments);\n  }\n\n  Object.defineProperty(In, \"__esModule\", {\n    value: !0\n  }), In.aspectRatio = In.default = void 0;\n  var jn = {\n    start: function start(t) {\n      var e = t.state,\n          n = t.rect,\n          r = t.edges,\n          i = t.pageCoords,\n          o = e.options.ratio,\n          a = e.options,\n          s = a.equalDelta,\n          l = a.modifiers;\n      \"preserve\" === o && (o = n.width / n.height), e.startCoords = (0, T.default)({}, i), e.startRect = (0, T.default)({}, n), e.ratio = o, e.equalDelta = s;\n      var c = e.linkedEdges = {\n        top: r.top || r.left && !r.bottom,\n        left: r.left || r.top && !r.right,\n        bottom: r.bottom || r.right && !r.top,\n        right: r.right || r.bottom && !r.left\n      };\n      if (e.xIsPrimaryAxis = !(!r.left && !r.right), e.equalDelta) e.edgeSign = (c.left ? 1 : -1) * (c.top ? 1 : -1);else {\n        var u = e.xIsPrimaryAxis ? c.top : c.left;\n        e.edgeSign = u ? -1 : 1;\n      }\n\n      if ((0, T.default)(t.edges, c), l && l.length) {\n        var d = new de.default(t.interaction);\n        d.copyFrom(t.interaction.modification), d.prepareStates(l), e.subModification = d, d.startAll(Dn({}, t));\n      }\n    },\n    set: function set(t) {\n      var e = t.state,\n          n = t.rect,\n          r = t.coords,\n          i = (0, T.default)({}, r),\n          o = e.equalDelta ? zn : An;\n      if (o(e, e.xIsPrimaryAxis, r, n), !e.subModification) return null;\n      var a = (0, T.default)({}, n);\n      (0, I.addEdges)(e.linkedEdges, a, {\n        x: r.x - i.x,\n        y: r.y - i.y\n      });\n      var s = e.subModification.setAll(Dn(Dn({}, t), {}, {\n        rect: a,\n        edges: e.linkedEdges,\n        pageCoords: r,\n        prevCoords: r,\n        prevRect: a\n      })),\n          l = s.delta;\n      return s.changed && (o(e, Math.abs(l.x) > Math.abs(l.y), s.coords, s.rect), (0, T.default)(r, s.coords)), s.eventProps;\n    },\n    defaults: {\n      ratio: \"preserve\",\n      equalDelta: !1,\n      modifiers: [],\n      enabled: !1\n    }\n  };\n\n  function zn(t, e, n) {\n    var r = t.startCoords,\n        i = t.edgeSign;\n    e ? n.y = r.y + (n.x - r.x) * i : n.x = r.x + (n.y - r.y) * i;\n  }\n\n  function An(t, e, n, r) {\n    var i = t.startRect,\n        o = t.startCoords,\n        a = t.ratio,\n        s = t.edgeSign;\n\n    if (e) {\n      var l = r.width / a;\n      n.y = o.y + (l - i.height) * s;\n    } else {\n      var c = r.height * a;\n      n.x = o.x + (c - i.width) * s;\n    }\n  }\n\n  In.aspectRatio = jn;\n  var Cn = (0, he.makeModifier)(jn, \"aspectRatio\");\n  In.default = Cn;\n  var kn = {};\n  Object.defineProperty(kn, \"__esModule\", {\n    value: !0\n  }), kn.default = void 0;\n\n  var Rn = function Rn() {};\n\n  Rn._defaults = {};\n  var Fn = Rn;\n  kn.default = Fn;\n  var Xn = {};\n  Object.defineProperty(Xn, \"__esModule\", {\n    value: !0\n  }), Object.defineProperty(Xn, \"default\", {\n    enumerable: !0,\n    get: function get() {\n      return kn.default;\n    }\n  });\n  var Yn = {};\n\n  function Wn(t, e, n) {\n    return o.default.func(t) ? I.resolveRectLike(t, e.interactable, e.element, [n.x, n.y, e]) : I.resolveRectLike(t, e.interactable, e.element);\n  }\n\n  Object.defineProperty(Yn, \"__esModule\", {\n    value: !0\n  }), Yn.getRestrictionRect = Wn, Yn.restrict = Yn.default = void 0;\n  var Ln = {\n    start: function start(t) {\n      var e = t.rect,\n          n = t.startOffset,\n          r = t.state,\n          i = t.interaction,\n          o = t.pageCoords,\n          a = r.options,\n          s = a.elementRect,\n          l = (0, T.default)({\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      }, a.offset || {});\n\n      if (e && s) {\n        var c = Wn(a.restriction, i, o);\n\n        if (c) {\n          var u = c.right - c.left - e.width,\n              d = c.bottom - c.top - e.height;\n          u < 0 && (l.left += u, l.right += u), d < 0 && (l.top += d, l.bottom += d);\n        }\n\n        l.left += n.left - e.width * s.left, l.top += n.top - e.height * s.top, l.right += n.right - e.width * (1 - s.right), l.bottom += n.bottom - e.height * (1 - s.bottom);\n      }\n\n      r.offset = l;\n    },\n    set: function set(t) {\n      var e = t.coords,\n          n = t.interaction,\n          r = t.state,\n          i = r.options,\n          o = r.offset,\n          a = Wn(i.restriction, n, e);\n\n      if (a) {\n        var s = I.xywhToTlbr(a);\n        e.x = Math.max(Math.min(s.right - o.right, e.x), s.left + o.left), e.y = Math.max(Math.min(s.bottom - o.bottom, e.y), s.top + o.top);\n      }\n    },\n    defaults: {\n      restriction: null,\n      elementRect: null,\n      offset: null,\n      endOnly: !1,\n      enabled: !1\n    }\n  };\n  Yn.restrict = Ln;\n  var Bn = (0, he.makeModifier)(Ln, \"restrict\");\n  Yn.default = Bn;\n  var Nn = {};\n  Object.defineProperty(Nn, \"__esModule\", {\n    value: !0\n  }), Nn.restrictEdges = Nn.default = void 0;\n  var Vn = {\n    top: 1 / 0,\n    left: 1 / 0,\n    bottom: -1 / 0,\n    right: -1 / 0\n  },\n      qn = {\n    top: -1 / 0,\n    left: -1 / 0,\n    bottom: 1 / 0,\n    right: 1 / 0\n  };\n\n  function Un(t, e) {\n    for (var n = [\"top\", \"left\", \"bottom\", \"right\"], r = 0; r < n.length; r++) {\n      var i = n[r];\n      i in t || (t[i] = e[i]);\n    }\n\n    return t;\n  }\n\n  var Gn = {\n    noInner: Vn,\n    noOuter: qn,\n    start: function start(t) {\n      var e,\n          n = t.interaction,\n          r = t.startOffset,\n          i = t.state,\n          o = i.options;\n\n      if (o) {\n        var a = (0, Yn.getRestrictionRect)(o.offset, n, n.coords.start.page);\n        e = I.rectToXY(a);\n      }\n\n      e = e || {\n        x: 0,\n        y: 0\n      }, i.offset = {\n        top: e.y + r.top,\n        left: e.x + r.left,\n        bottom: e.y - r.bottom,\n        right: e.x - r.right\n      };\n    },\n    set: function set(t) {\n      var e = t.coords,\n          n = t.edges,\n          r = t.interaction,\n          i = t.state,\n          o = i.offset,\n          a = i.options;\n\n      if (n) {\n        var s = (0, T.default)({}, e),\n            l = (0, Yn.getRestrictionRect)(a.inner, r, s) || {},\n            c = (0, Yn.getRestrictionRect)(a.outer, r, s) || {};\n        Un(l, Vn), Un(c, qn), n.top ? e.y = Math.min(Math.max(c.top + o.top, s.y), l.top + o.top) : n.bottom && (e.y = Math.max(Math.min(c.bottom + o.bottom, s.y), l.bottom + o.bottom)), n.left ? e.x = Math.min(Math.max(c.left + o.left, s.x), l.left + o.left) : n.right && (e.x = Math.max(Math.min(c.right + o.right, s.x), l.right + o.right));\n      }\n    },\n    defaults: {\n      inner: null,\n      outer: null,\n      offset: null,\n      endOnly: !1,\n      enabled: !1\n    }\n  };\n  Nn.restrictEdges = Gn;\n  var Hn = (0, he.makeModifier)(Gn, \"restrictEdges\");\n  Nn.default = Hn;\n  var $n = {};\n  Object.defineProperty($n, \"__esModule\", {\n    value: !0\n  }), $n.restrictRect = $n.default = void 0;\n  var Kn = (0, T.default)({\n    get elementRect() {\n      return {\n        top: 0,\n        left: 0,\n        bottom: 1,\n        right: 1\n      };\n    },\n\n    set elementRect(t) {}\n\n  }, Yn.restrict.defaults),\n      Zn = {\n    start: Yn.restrict.start,\n    set: Yn.restrict.set,\n    defaults: Kn\n  };\n  $n.restrictRect = Zn;\n  var Jn = (0, he.makeModifier)(Zn, \"restrictRect\");\n  $n.default = Jn;\n  var Qn = {};\n  Object.defineProperty(Qn, \"__esModule\", {\n    value: !0\n  }), Qn.restrictSize = Qn.default = void 0;\n  var tr = {\n    width: -1 / 0,\n    height: -1 / 0\n  },\n      er = {\n    width: 1 / 0,\n    height: 1 / 0\n  },\n      nr = {\n    start: function start(t) {\n      return Nn.restrictEdges.start(t);\n    },\n    set: function set(t) {\n      var e = t.interaction,\n          n = t.state,\n          r = t.rect,\n          i = t.edges,\n          o = n.options;\n\n      if (i) {\n        var a = I.tlbrToXywh((0, Yn.getRestrictionRect)(o.min, e, t.coords)) || tr,\n            s = I.tlbrToXywh((0, Yn.getRestrictionRect)(o.max, e, t.coords)) || er;\n        n.options = {\n          endOnly: o.endOnly,\n          inner: (0, T.default)({}, Nn.restrictEdges.noInner),\n          outer: (0, T.default)({}, Nn.restrictEdges.noOuter)\n        }, i.top ? (n.options.inner.top = r.bottom - a.height, n.options.outer.top = r.bottom - s.height) : i.bottom && (n.options.inner.bottom = r.top + a.height, n.options.outer.bottom = r.top + s.height), i.left ? (n.options.inner.left = r.right - a.width, n.options.outer.left = r.right - s.width) : i.right && (n.options.inner.right = r.left + a.width, n.options.outer.right = r.left + s.width), Nn.restrictEdges.set(t), n.options = o;\n      }\n    },\n    defaults: {\n      min: null,\n      max: null,\n      endOnly: !1,\n      enabled: !1\n    }\n  };\n  Qn.restrictSize = nr;\n  var rr = (0, he.makeModifier)(nr, \"restrictSize\");\n  Qn.default = rr;\n  var ir = {};\n  Object.defineProperty(ir, \"__esModule\", {\n    value: !0\n  }), Object.defineProperty(ir, \"default\", {\n    enumerable: !0,\n    get: function get() {\n      return kn.default;\n    }\n  });\n  var or = {};\n  Object.defineProperty(or, \"__esModule\", {\n    value: !0\n  }), or.snap = or.default = void 0;\n  var ar = {\n    start: function start(t) {\n      var e,\n          n = t.interaction,\n          r = t.interactable,\n          i = t.element,\n          o = t.rect,\n          a = t.state,\n          s = t.startOffset,\n          l = a.options,\n          c = l.offsetWithOrigin ? function (t) {\n        var e = t.interaction.element;\n        return (0, I.rectToXY)((0, I.resolveRectLike)(t.state.options.origin, null, null, [e])) || (0, j.default)(t.interactable, e, t.interaction.prepared.name);\n      }(t) : {\n        x: 0,\n        y: 0\n      };\n      if (\"startCoords\" === l.offset) e = {\n        x: n.coords.start.page.x,\n        y: n.coords.start.page.y\n      };else {\n        var u = (0, I.resolveRectLike)(l.offset, r, i, [n]);\n        (e = (0, I.rectToXY)(u) || {\n          x: 0,\n          y: 0\n        }).x += c.x, e.y += c.y;\n      }\n      var d = l.relativePoints;\n      a.offsets = o && d && d.length ? d.map(function (t, n) {\n        return {\n          index: n,\n          relativePoint: t,\n          x: s.left - o.width * t.x + e.x,\n          y: s.top - o.height * t.y + e.y\n        };\n      }) : [(0, T.default)({\n        index: 0,\n        relativePoint: null\n      }, e)];\n    },\n    set: function set(t) {\n      var e = t.interaction,\n          n = t.coords,\n          r = t.state,\n          i = r.options,\n          a = r.offsets,\n          s = (0, j.default)(e.interactable, e.element, e.prepared.name),\n          l = (0, T.default)({}, n),\n          c = [];\n      i.offsetWithOrigin || (l.x -= s.x, l.y -= s.y);\n\n      for (var u = 0; u < a.length; u++) {\n        for (var d = a[u], f = l.x - d.x, p = l.y - d.y, v = 0, h = i.targets.length; v < h; v++) {\n          var g,\n              m = i.targets[v];\n          (g = o.default.func(m) ? m(f, p, e._proxy, d, v) : m) && c.push({\n            x: (o.default.number(g.x) ? g.x : f) + d.x,\n            y: (o.default.number(g.y) ? g.y : p) + d.y,\n            range: o.default.number(g.range) ? g.range : i.range,\n            source: m,\n            index: v,\n            offset: d\n          });\n        }\n      }\n\n      for (var y = {\n        target: null,\n        inRange: !1,\n        distance: 0,\n        range: 0,\n        delta: {\n          x: 0,\n          y: 0\n        }\n      }, b = 0; b < c.length; b++) {\n        var x = c[b],\n            _ = x.range,\n            w = x.x - l.x,\n            P = x.y - l.y,\n            E = (0, C.default)(w, P),\n            S = E <= _;\n        _ === 1 / 0 && y.inRange && y.range !== 1 / 0 && (S = !1), y.target && !(S ? y.inRange && _ !== 1 / 0 ? E / _ < y.distance / y.range : _ === 1 / 0 && y.range !== 1 / 0 || E < y.distance : !y.inRange && E < y.distance) || (y.target = x, y.distance = E, y.range = _, y.inRange = S, y.delta.x = w, y.delta.y = P);\n      }\n\n      return y.inRange && (n.x = y.target.x, n.y = y.target.y), r.closest = y, y;\n    },\n    defaults: {\n      range: 1 / 0,\n      targets: null,\n      offset: null,\n      offsetWithOrigin: !0,\n      origin: null,\n      relativePoints: null,\n      endOnly: !1,\n      enabled: !1\n    }\n  };\n  or.snap = ar;\n  var sr = (0, he.makeModifier)(ar, \"snap\");\n  or.default = sr;\n  var lr = {};\n  Object.defineProperty(lr, \"__esModule\", {\n    value: !0\n  }), lr.snapSize = lr.default = void 0;\n  var cr = {\n    start: function start(t) {\n      var e = t.state,\n          n = t.edges,\n          r = e.options;\n      if (!n) return null;\n      t.state = {\n        options: {\n          targets: null,\n          relativePoints: [{\n            x: n.left ? 0 : 1,\n            y: n.top ? 0 : 1\n          }],\n          offset: r.offset || \"self\",\n          origin: {\n            x: 0,\n            y: 0\n          },\n          range: r.range\n        }\n      }, e.targetFields = e.targetFields || [[\"width\", \"height\"], [\"x\", \"y\"]], or.snap.start(t), e.offsets = t.state.offsets, t.state = e;\n    },\n    set: function set(t) {\n      var e = t.interaction,\n          n = t.state,\n          r = t.coords,\n          i = n.options,\n          a = n.offsets,\n          s = {\n        x: r.x - a[0].x,\n        y: r.y - a[0].y\n      };\n      n.options = (0, T.default)({}, i), n.options.targets = [];\n\n      for (var l = 0; l < (i.targets || []).length; l++) {\n        var c = (i.targets || [])[l],\n            u = void 0;\n\n        if (u = o.default.func(c) ? c(s.x, s.y, e) : c) {\n          for (var d = 0; d < n.targetFields.length; d++) {\n            var f = n.targetFields[d],\n                p = f[0],\n                v = f[1];\n\n            if (p in u || v in u) {\n              u.x = u[p], u.y = u[v];\n              break;\n            }\n          }\n\n          n.options.targets.push(u);\n        }\n      }\n\n      var h = or.snap.set(t);\n      return n.options = i, h;\n    },\n    defaults: {\n      range: 1 / 0,\n      targets: null,\n      offset: null,\n      endOnly: !1,\n      enabled: !1\n    }\n  };\n  lr.snapSize = cr;\n  var ur = (0, he.makeModifier)(cr, \"snapSize\");\n  lr.default = ur;\n  var dr = {};\n  Object.defineProperty(dr, \"__esModule\", {\n    value: !0\n  }), dr.snapEdges = dr.default = void 0;\n  var fr = {\n    start: function start(t) {\n      var e = t.edges;\n      return e ? (t.state.targetFields = t.state.targetFields || [[e.left ? \"left\" : \"right\", e.top ? \"top\" : \"bottom\"]], lr.snapSize.start(t)) : null;\n    },\n    set: lr.snapSize.set,\n    defaults: (0, T.default)((0, ue.default)(lr.snapSize.defaults), {\n      targets: null,\n      range: null,\n      offset: {\n        x: 0,\n        y: 0\n      }\n    })\n  };\n  dr.snapEdges = fr;\n  var pr = (0, he.makeModifier)(fr, \"snapEdges\");\n  dr.default = pr;\n  var vr = {};\n  Object.defineProperty(vr, \"__esModule\", {\n    value: !0\n  }), Object.defineProperty(vr, \"default\", {\n    enumerable: !0,\n    get: function get() {\n      return kn.default;\n    }\n  });\n  var hr = {};\n  Object.defineProperty(hr, \"__esModule\", {\n    value: !0\n  }), Object.defineProperty(hr, \"default\", {\n    enumerable: !0,\n    get: function get() {\n      return kn.default;\n    }\n  });\n  var gr = {};\n  Object.defineProperty(gr, \"__esModule\", {\n    value: !0\n  }), gr.default = void 0;\n  var mr = {\n    aspectRatio: In.default,\n    restrictEdges: Nn.default,\n    restrict: Yn.default,\n    restrictRect: $n.default,\n    restrictSize: Qn.default,\n    snapEdges: dr.default,\n    snap: or.default,\n    snapSize: lr.default,\n    spring: vr.default,\n    avoid: Xn.default,\n    transform: hr.default,\n    rubberband: ir.default\n  };\n  gr.default = mr;\n  var yr = {};\n  Object.defineProperty(yr, \"__esModule\", {\n    value: !0\n  }), yr.default = void 0;\n  var br = {\n    id: \"modifiers\",\n    install: function install(t) {\n      var e = t.interactStatic;\n\n      for (var n in t.usePlugin(he.default), t.usePlugin(On.default), e.modifiers = gr.default, gr.default) {\n        var r = gr.default[n],\n            i = r._defaults,\n            o = r._methods;\n        i._methods = o, t.defaults.perAction[n] = i;\n      }\n    }\n  };\n  yr.default = br;\n  var xr = {};\n  Object.defineProperty(xr, \"__esModule\", {\n    value: !0\n  }), xr.default = void 0, xr.default = {};\n  var _r = {};\n\n  function wr(t) {\n    if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return t;\n  }\n\n  Object.defineProperty(_r, \"__esModule\", {\n    value: !0\n  }), _r.PointerEvent = _r.default = void 0;\n\n  var Pr = function (t) {\n    var e, n;\n\n    function r(e, n, r, i, o, a) {\n      var s;\n\n      if ((s = t.call(this, o) || this).type = void 0, s.originalEvent = void 0, s.pointerId = void 0, s.pointerType = void 0, s.double = void 0, s.pageX = void 0, s.pageY = void 0, s.clientX = void 0, s.clientY = void 0, s.dt = void 0, s.eventable = void 0, X.pointerExtend(wr(s), r), r !== n && X.pointerExtend(wr(s), n), s.timeStamp = a, s.originalEvent = r, s.type = e, s.pointerId = X.getPointerId(n), s.pointerType = X.getPointerType(n), s.target = i, s.currentTarget = null, \"tap\" === e) {\n        var l = o.getPointerIndex(n);\n        s.dt = s.timeStamp - o.pointers[l].downTime;\n        var c = s.timeStamp - o.tapTime;\n        s.double = !!(o.prevTap && \"doubletap\" !== o.prevTap.type && o.prevTap.target === s.target && c < 500);\n      } else \"doubletap\" === e && (s.dt = n.timeStamp - o.tapTime);\n\n      return s;\n    }\n\n    n = t, (e = r).prototype = Object.create(n.prototype), e.prototype.constructor = e, e.__proto__ = n;\n    var i = r.prototype;\n    return i._subtractOrigin = function (t) {\n      var e = t.x,\n          n = t.y;\n      return this.pageX -= e, this.pageY -= n, this.clientX -= e, this.clientY -= n, this;\n    }, i._addOrigin = function (t) {\n      var e = t.x,\n          n = t.y;\n      return this.pageX += e, this.pageY += n, this.clientX += e, this.clientY += n, this;\n    }, i.preventDefault = function () {\n      this.originalEvent.preventDefault();\n    }, r;\n  }(q.BaseEvent);\n\n  _r.PointerEvent = _r.default = Pr;\n  var Er = {};\n  Object.defineProperty(Er, \"__esModule\", {\n    value: !0\n  }), Er.default = void 0;\n  var Sr = {\n    id: \"pointer-events/base\",\n    before: [\"inertia\", \"modifiers\", \"auto-start\", \"actions\"],\n    install: function install(t) {\n      t.pointerEvents = Sr, t.defaults.actions.pointerEvents = Sr.defaults, (0, T.default)(t.actions.phaselessTypes, Sr.types);\n    },\n    listeners: {\n      \"interactions:new\": function interactionsNew(t) {\n        var e = t.interaction;\n        e.prevTap = null, e.tapTime = 0;\n      },\n      \"interactions:update-pointer\": function interactionsUpdatePointer(t) {\n        var e = t.down,\n            n = t.pointerInfo;\n        !e && n.hold || (n.hold = {\n          duration: 1 / 0,\n          timeout: null\n        });\n      },\n      \"interactions:move\": function interactionsMove(t, e) {\n        var n = t.interaction,\n            r = t.pointer,\n            i = t.event,\n            o = t.eventTarget;\n        t.duplicate || n.pointerIsDown && !n.pointerWasMoved || (n.pointerIsDown && Tr(t), Mr({\n          interaction: n,\n          pointer: r,\n          event: i,\n          eventTarget: o,\n          type: \"move\"\n        }, e));\n      },\n      \"interactions:down\": function interactionsDown(t, e) {\n        !function (t, e) {\n          for (var n = t.interaction, r = t.pointer, i = t.event, o = t.eventTarget, a = t.pointerIndex, s = n.pointers[a].hold, l = _.getPath(o), c = {\n            interaction: n,\n            pointer: r,\n            event: i,\n            eventTarget: o,\n            type: \"hold\",\n            targets: [],\n            path: l,\n            node: null\n          }, u = 0; u < l.length; u++) {\n            var d = l[u];\n            c.node = d, e.fire(\"pointerEvents:collect-targets\", c);\n          }\n\n          if (c.targets.length) {\n            for (var f = 1 / 0, p = 0; p < c.targets.length; p++) {\n              var v = c.targets[p].eventable.options.holdDuration;\n              v < f && (f = v);\n            }\n\n            s.duration = f, s.timeout = setTimeout(function () {\n              Mr({\n                interaction: n,\n                eventTarget: o,\n                pointer: r,\n                event: i,\n                type: \"hold\"\n              }, e);\n            }, f);\n          }\n        }(t, e), Mr(t, e);\n      },\n      \"interactions:up\": function interactionsUp(t, e) {\n        Tr(t), Mr(t, e), function (t, e) {\n          var n = t.interaction,\n              r = t.pointer,\n              i = t.event,\n              o = t.eventTarget;\n          n.pointerWasMoved || Mr({\n            interaction: n,\n            eventTarget: o,\n            pointer: r,\n            event: i,\n            type: \"tap\"\n          }, e);\n        }(t, e);\n      },\n      \"interactions:cancel\": function interactionsCancel(t, e) {\n        Tr(t), Mr(t, e);\n      }\n    },\n    PointerEvent: _r.PointerEvent,\n    fire: Mr,\n    collectEventTargets: Or,\n    defaults: {\n      holdDuration: 600,\n      ignoreFrom: null,\n      allowFrom: null,\n      origin: {\n        x: 0,\n        y: 0\n      }\n    },\n    types: {\n      down: !0,\n      move: !0,\n      up: !0,\n      cancel: !0,\n      tap: !0,\n      doubletap: !0,\n      hold: !0\n    }\n  };\n\n  function Mr(t, e) {\n    var n = t.interaction,\n        r = t.pointer,\n        i = t.event,\n        o = t.eventTarget,\n        a = t.type,\n        s = t.targets,\n        l = void 0 === s ? Or(t, e) : s,\n        c = new _r.PointerEvent(a, r, i, o, n, e.now());\n    e.fire(\"pointerEvents:new\", {\n      pointerEvent: c\n    });\n\n    for (var u = {\n      interaction: n,\n      pointer: r,\n      event: i,\n      eventTarget: o,\n      targets: l,\n      type: a,\n      pointerEvent: c\n    }, d = 0; d < l.length; d++) {\n      var f = l[d];\n\n      for (var p in f.props || {}) {\n        c[p] = f.props[p];\n      }\n\n      var v = (0, j.default)(f.eventable, f.node);\n      if (c._subtractOrigin(v), c.eventable = f.eventable, c.currentTarget = f.node, f.eventable.fire(c), c._addOrigin(v), c.immediatePropagationStopped || c.propagationStopped && d + 1 < l.length && l[d + 1].node !== c.currentTarget) break;\n    }\n\n    if (e.fire(\"pointerEvents:fired\", u), \"tap\" === a) {\n      var h = c.double ? Mr({\n        interaction: n,\n        pointer: r,\n        event: i,\n        eventTarget: o,\n        type: \"doubletap\"\n      }, e) : c;\n      n.prevTap = h, n.tapTime = h.timeStamp;\n    }\n\n    return c;\n  }\n\n  function Or(t, e) {\n    var n = t.interaction,\n        r = t.pointer,\n        i = t.event,\n        o = t.eventTarget,\n        a = t.type,\n        s = n.getPointerIndex(r),\n        l = n.pointers[s];\n    if (\"tap\" === a && (n.pointerWasMoved || !l || l.downTarget !== o)) return [];\n\n    for (var c = _.getPath(o), u = {\n      interaction: n,\n      pointer: r,\n      event: i,\n      eventTarget: o,\n      type: a,\n      path: c,\n      targets: [],\n      node: null\n    }, d = 0; d < c.length; d++) {\n      var f = c[d];\n      u.node = f, e.fire(\"pointerEvents:collect-targets\", u);\n    }\n\n    return \"hold\" === a && (u.targets = u.targets.filter(function (t) {\n      return t.eventable.options.holdDuration === n.pointers[s].hold.duration;\n    })), u.targets;\n  }\n\n  function Tr(t) {\n    var e = t.interaction,\n        n = t.pointerIndex,\n        r = e.pointers[n].hold;\n    r && r.timeout && (clearTimeout(r.timeout), r.timeout = null);\n  }\n\n  var Ir = Sr;\n  Er.default = Ir;\n  var Dr = {};\n\n  function jr(t) {\n    var e = t.interaction;\n    e.holdIntervalHandle && (clearInterval(e.holdIntervalHandle), e.holdIntervalHandle = null);\n  }\n\n  Object.defineProperty(Dr, \"__esModule\", {\n    value: !0\n  }), Dr.default = void 0;\n  var zr = {\n    id: \"pointer-events/holdRepeat\",\n    install: function install(t) {\n      t.usePlugin(Er.default);\n      var e = t.pointerEvents;\n      e.defaults.holdRepeatInterval = 0, e.types.holdrepeat = t.actions.phaselessTypes.holdrepeat = !0;\n    },\n    listeners: [\"move\", \"up\", \"cancel\", \"endall\"].reduce(function (t, e) {\n      return t[\"pointerEvents:\" + e] = jr, t;\n    }, {\n      \"pointerEvents:new\": function pointerEventsNew(t) {\n        var e = t.pointerEvent;\n        \"hold\" === e.type && (e.count = (e.count || 0) + 1);\n      },\n      \"pointerEvents:fired\": function pointerEventsFired(t, e) {\n        var n = t.interaction,\n            r = t.pointerEvent,\n            i = t.eventTarget,\n            o = t.targets;\n\n        if (\"hold\" === r.type && o.length) {\n          var a = o[0].eventable.options.holdRepeatInterval;\n          a <= 0 || (n.holdIntervalHandle = setTimeout(function () {\n            e.pointerEvents.fire({\n              interaction: n,\n              eventTarget: i,\n              type: \"hold\",\n              pointer: r,\n              event: r\n            }, e);\n          }, a));\n        }\n      }\n    })\n  };\n  Dr.default = zr;\n  var Ar = {};\n\n  function Cr(t) {\n    return (0, T.default)(this.events.options, t), this;\n  }\n\n  Object.defineProperty(Ar, \"__esModule\", {\n    value: !0\n  }), Ar.default = void 0;\n  var kr = {\n    id: \"pointer-events/interactableTargets\",\n    install: function install(t) {\n      var e = t.Interactable;\n      e.prototype.pointerEvents = Cr;\n      var n = e.prototype._backCompatOption;\n\n      e.prototype._backCompatOption = function (t, e) {\n        var r = n.call(this, t, e);\n        return r === this && (this.events.options[t] = e), r;\n      };\n    },\n    listeners: {\n      \"pointerEvents:collect-targets\": function pointerEventsCollectTargets(t, e) {\n        var n = t.targets,\n            r = t.node,\n            i = t.type,\n            o = t.eventTarget;\n        e.interactables.forEachMatch(r, function (t) {\n          var e = t.events,\n              a = e.options;\n          e.types[i] && e.types[i].length && t.testIgnoreAllow(a, r, o) && n.push({\n            node: r,\n            eventable: e,\n            props: {\n              interactable: t\n            }\n          });\n        });\n      },\n      \"interactable:new\": function interactableNew(t) {\n        var e = t.interactable;\n\n        e.events.getRect = function (t) {\n          return e.getRect(t);\n        };\n      },\n      \"interactable:set\": function interactableSet(t, e) {\n        var n = t.interactable,\n            r = t.options;\n        (0, T.default)(n.events.options, e.pointerEvents.defaults), (0, T.default)(n.events.options, r.pointerEvents || {});\n      }\n    }\n  };\n  Ar.default = kr;\n  var Rr = {};\n  Object.defineProperty(Rr, \"__esModule\", {\n    value: !0\n  }), Rr.default = void 0;\n  var Fr = {\n    id: \"pointer-events\",\n    install: function install(t) {\n      t.usePlugin(Er), t.usePlugin(Dr.default), t.usePlugin(Ar.default);\n    }\n  };\n  Rr.default = Fr;\n  var Xr = {};\n  Object.defineProperty(Xr, \"__esModule\", {\n    value: !0\n  }), Xr.default = void 0, Xr.default = {};\n  var Yr = {};\n\n  function Wr(t) {\n    var e = t.Interactable;\n    t.actions.phases.reflow = !0, e.prototype.reflow = function (e) {\n      return function (t, e, n) {\n        for (var r = o.default.string(t.target) ? G.from(t._context.querySelectorAll(t.target)) : [t.target], i = n.window.Promise, a = i ? [] : null, s = function s() {\n          var o = r[l],\n              s = t.getRect(o);\n          if (!s) return \"break\";\n          var c = G.find(n.interactions.list, function (n) {\n            return n.interacting() && n.interactable === t && n.element === o && n.prepared.name === e.name;\n          }),\n              u = void 0;\n          if (c) c.move(), a && (u = c._reflowPromise || new i(function (t) {\n            c._reflowResolve = t;\n          }));else {\n            var d = (0, I.tlbrToXywh)(s),\n                f = {\n              page: {\n                x: d.x,\n                y: d.y\n              },\n              client: {\n                x: d.x,\n                y: d.y\n              },\n              timeStamp: n.now()\n            },\n                p = X.coordsToEvent(f);\n\n            u = function (t, e, n, r, i) {\n              var o = t.interactions.new({\n                pointerType: \"reflow\"\n              }),\n                  a = {\n                interaction: o,\n                event: i,\n                pointer: i,\n                eventTarget: n,\n                phase: \"reflow\"\n              };\n              o.interactable = e, o.element = n, o.prevEvent = i, o.updatePointer(i, i, n, !0), X.setZeroCoords(o.coords.delta), (0, It.copyAction)(o.prepared, r), o._doPhase(a);\n              var s = t.window.Promise,\n                  l = s ? new s(function (t) {\n                o._reflowResolve = t;\n              }) : void 0;\n              return o._reflowPromise = l, o.start(r, e, n), o._interacting ? (o.move(a), o.end(i)) : (o.stop(), o._reflowResolve()), o.removePointer(i, i), l;\n            }(n, t, o, e, p);\n          }\n          a && a.push(u);\n        }, l = 0; l < r.length && \"break\" !== s(); l++) {\n          ;\n        }\n\n        return a && i.all(a).then(function () {\n          return t;\n        });\n      }(this, e, t);\n    };\n  }\n\n  Object.defineProperty(Yr, \"__esModule\", {\n    value: !0\n  }), Yr.install = Wr, Yr.default = void 0;\n  var Lr = {\n    id: \"reflow\",\n    install: Wr,\n    listeners: {\n      \"interactions:stop\": function interactionsStop(t, e) {\n        var n = t.interaction;\n        \"reflow\" === n.pointerType && (n._reflowResolve && n._reflowResolve(), G.remove(e.interactions.list, n));\n      }\n    }\n  };\n  Yr.default = Lr;\n  var Br = {};\n  Object.defineProperty(Br, \"__esModule\", {\n    value: !0\n  }), Br.default = void 0, Br.default = {};\n  var Nr = {};\n  Object.defineProperty(Nr, \"__esModule\", {\n    value: !0\n  }), Nr.exchange = void 0, Nr.exchange = {};\n  var Vr = {};\n  Object.defineProperty(Vr, \"__esModule\", {\n    value: !0\n  }), Vr.default = void 0, Vr.default = {};\n  var qr = {\n    exports: {}\n  };\n  Object.defineProperty(qr.exports, \"__esModule\", {\n    value: !0\n  }), qr.exports.default = void 0, bn.default.use(xr.default), bn.default.use(Jt.default), bn.default.use(Ie.default), bn.default.use(Zt.default), bn.default.use(yt.default), bn.default.use(Rr.default), bn.default.use(Re.default), bn.default.use(yr.default), bn.default.use($t.default), bn.default.use(gt.default), bn.default.use(Et.default), bn.default.use(Yr.default), bn.default.use(ce.default), bn.default.use(Vr.default), bn.default.use(Xr.default), bn.default.__utils = {\n    exchange: Nr.exchange,\n    displace: Br,\n    pointer: X\n  }, bn.default.use(ie.default);\n  var Ur = bn.default;\n  if (qr.exports.default = Ur, qr) try {\n    qr.exports = bn.default;\n  } catch (t) {}\n  bn.default.default = bn.default, qr = qr.exports;\n  var Gr = {\n    exports: {}\n  };\n  Object.defineProperty(Gr.exports, \"__esModule\", {\n    value: !0\n  }), Gr.exports.default = void 0;\n  var Hr = qr.default;\n  if (Gr.exports.default = Hr, Gr) try {\n    Gr.exports = qr.default;\n  } catch (t) {}\n  return qr.default.default = qr.default, Gr.exports;\n});","map":{"version":3,"sources":["_header.js","packages/@interactjs/utils/isWindow.ts","packages/@interactjs/utils/window.ts","packages/@interactjs/utils/is.ts","packages/@interactjs/actions/drag/plugin.ts","packages/@interactjs/utils/domObjects.ts","packages/@interactjs/utils/browser.ts","packages/@interactjs/utils/domUtils.ts","packages/@interactjs/utils/extend.ts","packages/@interactjs/utils/rect.ts","packages/@interactjs/utils/getOriginXY.ts","packages/@interactjs/utils/normalizeListeners.ts","packages/@interactjs/utils/hypot.ts","packages/@interactjs/utils/pointerExtend.ts","packages/@interactjs/utils/pointerUtils.ts","packages/@interactjs/core/BaseEvent.ts","packages/@interactjs/utils/arr.ts","packages/@interactjs/actions/drop/DropEvent.ts","packages/@interactjs/actions/drop/plugin.ts","packages/@interactjs/actions/gesture/plugin.ts","packages/@interactjs/actions/resize/plugin.ts","packages/@interactjs/actions/plugin.ts","packages/@interactjs/arrange/plugin.ts","packages/@interactjs/utils/raf.ts","packages/@interactjs/auto-scroll/plugin.ts","packages/@interactjs/utils/misc.ts","packages/@interactjs/auto-start/InteractableMethods.ts","packages/@interactjs/auto-start/base.ts","packages/@interactjs/auto-start/dragAxis.ts","packages/@interactjs/auto-start/hold.ts","packages/@interactjs/auto-start/plugin.ts","packages/@interactjs/clone/plugin.ts","packages/@interactjs/core/interactablePreventDefault.ts","packages/@interactjs/dev-tools/plugin.ts","packages/@interactjs/utils/clone.ts","packages/@interactjs/modifiers/Modification.ts","packages/@interactjs/modifiers/base.ts","packages/@interactjs/core/defaultOptions.ts","packages/@interactjs/core/InteractEvent.ts","packages/@interactjs/core/PointerInfo.ts","packages/@interactjs/core/Interaction.ts","packages/@interactjs/offset/plugin.ts","packages/@interactjs/inertia/plugin.ts","packages/@interactjs/core/Eventable.ts","packages/@interactjs/core/isNonNativeEvent.ts","packages/@interactjs/core/Interactable.ts","packages/@interactjs/core/InteractableSet.ts","packages/@interactjs/core/events.ts","packages/@interactjs/core/interactStatic.ts","packages/@interactjs/core/interactionFinder.ts","packages/@interactjs/core/interactions.ts","packages/@interactjs/core/scope.ts","packages/@interactjs/interact/index.ts","packages/@interactjs/snappers/edgeTarget.ts","packages/@interactjs/snappers/grid.ts","packages/@interactjs/snappers/plugin.ts","packages/@interactjs/modifiers/aspectRatio.ts","packages/@interactjs/modifiers/noop.ts","packages/@interactjs/modifiers/restrict/pointer.ts","packages/@interactjs/modifiers/restrict/edges.ts","packages/@interactjs/modifiers/restrict/rect.ts","packages/@interactjs/modifiers/restrict/size.ts","packages/@interactjs/modifiers/snap/pointer.ts","packages/@interactjs/modifiers/snap/size.ts","packages/@interactjs/modifiers/snap/edges.ts","packages/@interactjs/modifiers/all.ts","packages/@interactjs/modifiers/plugin.ts","packages/@interactjs/pointer-events/PointerEvent.ts","packages/@interactjs/pointer-events/base.ts","packages/@interactjs/pointer-events/holdRepeat.ts","packages/@interactjs/pointer-events/interactableTargets.ts","packages/@interactjs/pointer-events/plugin.ts","packages/@interactjs/reflow/plugin.ts","packages/@interactjs/utils/displace.ts","packages/@interactjs/utils/exchange.ts","packages/@interactjs/interactjs/index.ts","packages/interactjs/index.ts","node_modules/browser-pack-flat/_postlude"],"names":[],"mappings":"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","sourcesContent":["/**\n * interact.js 1.10.1\n *\n * Copyright (c) 2012-present Taye Adeyemi <dev@taye.me>\n * Released under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","export default (thing: any) => !!(thing && thing.Window) && (thing instanceof thing.Window)\n","import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init (window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document &&\n      typeof window.wrap === 'function' &&\n    window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow (node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = (node.ownerDocument || node)\n\n  return rootNode.defaultView || win.window\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window =>\n  thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment =>\n  object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } =>\n  !!thing && (typeof thing === 'object')\n\nconst func = (thing: any): thing is (...args: any[]) => any =>\n  typeof thing === 'function'\n\nconst number = (thing: any): thing is number =>\n  typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean =>\n  typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string =>\n  typeof thing === 'string'\n\nconst element = (thing: any): thing is Interact.Element => {\n  if (!thing || (typeof thing !== 'object')) { return false }\n\n  // eslint-disable-next-line import/no-named-as-default-member\n  const _window = win.getWindow(thing) || win.window\n\n  return (/object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string')\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) &&\n  !!thing.constructor &&\n  /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  (object(thing) &&\n  (typeof thing.length !== 'undefined') &&\n  func(thing.splice))\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n","import { Scope } from '@interactjs/core/scope'\nimport * as Interact from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drag: Interact.DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = Interact.InteractEvent<'drag'>\n\nexport type DraggableMethod = Interact.ActionMethod<Interact.DraggableOptions>\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    defaults,\n  } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y   = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y   = 0\n  }\n  else if (axis === 'y') {\n    interaction.coords.cur.page.x   = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x   = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite]   = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (this: Interact.Interactable, options?: Interact.DraggableOptions | boolean): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Interact.Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': arg => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n         /mouse|pointer/.test(interaction.pointerType) &&\n       (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: (dragOptions.lockAxis === 'start'\n          ? dragOptions.startAxis\n          : dragOptions.lockAxis),\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  } as Interact.DropzoneOptions,\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} =\n{\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document           = win.document\n  domObjects.DocumentFragment   = win.DocumentFragment   || blank\n  domObjects.SVGElement         = win.SVGElement         || blank\n  domObjects.SVGSVGElement      = win.SVGSVGElement      || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element            = win.Element            || blank\n  domObjects.HTMLElement        = win.HTMLElement        || domObjects.Element\n\n  domObjects.Event        = win.Event\n  domObjects.Touch        = win.Touch || blank\n  domObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent)\n}\n","import domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window: any) {\n  const Element = domObjects.Element\n  const navigator  = win.window.navigator\n\n  // Does the browser support touch input?\n  browser.supportsTouch = ('ontouchstart' in window) ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = (/iP(hone|od|ad)/.test(navigator.platform))\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform) &&\n           /OS 7[^\\d]/.test(navigator.appVersion))\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile = (navigator.appName === 'Opera' &&\n    browser.supportsTouch &&\n    /Presto/.test(navigator.userAgent))\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = ('matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector') as 'matches'\n\n  browser.pEventTypes = (browser.supportsPointerEvent\n    ? (domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null)\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import * as Interact from '@interactjs/types/index'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains (parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest (element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) { return element }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element: Interact.Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements: Interact.Element[] | NodeListOf<Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    }\n    else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (currentNodeParents[commonIndex] && currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    let child = parents[0].lastChild\n\n    while (child) {\n      if (child === parents[1]) {\n        deepestNodeIndex = i\n        deepestNodeParents = currentNodeParents\n\n        break\n      }\n      else if (child === parents[2]) {\n        break\n      }\n\n      child = child.previousSibling\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents (node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan (higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo (element: Interact.Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Interact.Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element: Interact.Element) {\n  return (element as SVGElement).correspondingUseElement || element\n}\n\nexport function getScrollXY (relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element: Interact.Element): Required<Interact.Rect> {\n  const clientRect = (element instanceof domObjects.SVGElement\n    ? element.getBoundingClientRect()\n    : element.getClientRects()[0])\n\n  return clientRect && {\n    left  : clientRect.left,\n    right : clientRect.right,\n    top   : clientRect.top,\n    bottom: clientRect.bottom,\n    width : clientRect.width  || clientRect.right  - clientRect.left,\n    height: clientRect.height || clientRect.bottom - clientRect.top,\n  }\n}\n\nexport function getElementRect (element: Interact.Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left   += scroll.x\n    clientRect.right  += scroll.x\n    clientRect.top    += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector (value: Interact.Target) {\n  if (!is.string(value)) { return false }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default function extend<T, U extends object> (dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    (dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult (value: any, target: Interact.HasGetRect, element: Node) {\n  if (value === 'parent') { return parentNode(element) }\n\n  if (value === 'self') { return target.getRect(element as Interact.Element) }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]> (\n  value: Interact.RectResolvable<T>,\n  target?: Interact.HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  }\n  else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Interact.Rect\n}\n\nexport function rectToXY (rect: Interact.Rect | Interact.Point) {\n  return  rect && {\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n  }\n}\n\nexport function xywhToTlbr<T extends Partial<Interact.Rect & Interact.Point>> (rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left   = rect.x || 0\n    rect.top    = rect.y || 0\n    rect.right  = rect.right   || (rect.left + rect.width)\n    rect.bottom = rect.bottom  || (rect.top + rect.height)\n  }\n\n  return rect as Interact.Rect & T\n}\n\nexport function tlbrToXywh (rect: Interact.Rect & Partial<Interact.Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x      = rect.left || 0\n    rect.y      = rect.top  || 0\n    rect.width  = rect.width  || ((rect.right || 0)  - rect.x)\n    rect.height = rect.height || ((rect.bottom || 0) - rect.y)\n  }\n\n  return rect as Interact.FullRect & Interact.Point\n}\n\nexport function addEdges (edges: Interact.EdgeOptions, rect: Interact.Rect, delta: Interact.Point) {\n  if (edges.left)   { rect.left   += delta.x }\n  if (edges.right)  { rect.right  += delta.x }\n  if (edges.top)    { rect.top    += delta.y }\n  if (edges.bottom) { rect.bottom += delta.y }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function (\n  target: Interact.HasGetRect & { options: Interact.PerActionDefaults },\n  element: Node,\n  actionName?: Interact.ActionName,\n) {\n  const actionOptions = (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport extend from './extend'\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Interact.Listener[]\n}\n\nexport default function normalize (\n  type: Interact.EventTypes,\n  listeners?: Interact.ListenersArg | Interact.ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>(\n      (acc, t) => extend(acc, normalize(t, listeners, result)),\n      result,\n    )\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  }\n  else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  }\n  else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map(p => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","export default (x: number, y: number) =>  Math.sqrt(x * x + y * y)\n","function pointerExtend<T> (dest: Partial<T>, source: T) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs\n    let deprecated = false\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true\n        break\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop]\n    }\n  }\n  return dest\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n  moz: /(Pressure)$/,\n} as { [prefix: string]: RegExp }\n\nexport default pointerExtend\n","import * as Interact from '@interactjs/types/index'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords (dest: Interact.CoordsSetMember, src: Interact.CoordsSetMember) {\n  dest.page = dest.page || {} as any\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || {} as any\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas (targetObj: Interact.CoordsSetMember, prev: Interact.CoordsSetMember, cur: Interact.CoordsSetMember) {\n  targetObj.page.x    = cur.page.x    - prev.page.x\n  targetObj.page.y    = cur.page.y    - prev.page.y\n  targetObj.client.x  = cur.client.x  - prev.client.x\n  targetObj.client.y  = cur.client.y  - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity (targetObj: Interact.CoordsSetMember, delta: Interact.CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x   = delta.page.x / dt\n  targetObj.page.y   = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords (targetObj: Interact.CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer  (pointer: any) {\n  return (pointer instanceof dom.Event || pointer instanceof dom.Touch)\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY (type: string, pointer: Interact.PointerType | Interact.InteractEvent, xy: Interact.Point) {\n  xy = xy || {} as Interact.Point\n  type = type || 'page'\n\n  xy.x = pointer[type + 'X' as keyof Interact.PointerType]\n  xy.y = pointer[type + 'Y' as keyof Interact.PointerType]\n\n  return xy\n}\n\nexport function getPageXY (pointer: Interact.PointerType | Interact.InteractEvent, page?: Interact.Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  }\n  else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY (pointer: Interact.PointerType, client: Interact.Point) {\n  client = client || {} as any\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  }\n  else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId (pointer: { pointerId?: number, identifier?: number, type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId : pointer.identifier\n}\n\nexport function setCoords (dest: Interact.CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = (pointers.length > 1\n    ? pointerAverage(pointers)\n    : pointers[0])\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair (event: TouchEvent | Interact.PointerType[]) {\n  const touches: Interact.PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      }\n      else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    }\n    else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage (pointers: Interact.PointerType[]) {\n  const average = {\n    pageX  : 0,\n    pageY  : 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox (event: Interact.PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance (event: Interact.PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = deltaSource + 'X' as 'pageX'\n  const sourceY = deltaSource + 'Y' as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle (event: Interact.PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = deltaSource + 'X' as 'pageX'\n  const sourceY = deltaSource + 'Y' as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = 180 * Math.atan2(dy, dx) / Math.PI\n\n  return  angle\n}\n\nexport function getPointerType (pointer: { pointerType?: string, identifier?: number, type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]\n      // if the PointerEvent API isn't available, then the \"pointer\" must\n      // be either a MouseEvent, TouchEvent, or Touch object\n      : /touch/.test(pointer.type) || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets (event: Event) {\n  const path = is.func(event.composedPath)\n    ? event.composedPath() as Interact.Element[]\n    : (event as unknown as { path: Interact.Element[]}).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : event.target as Interact.Element),\n    domUtils.getActualElement(event.currentTarget as Interact.Element),\n  ]\n}\n\nexport function newCoords (): Interact.CoordsSetMember {\n  return {\n    page     : { x: 0, y: 0 },\n    client   : { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent (coords: MockCoords) {\n  const event = {\n    coords,\n    get page () { return this.coords.page },\n    get client () { return this.coords.client },\n    get timeStamp () { return this.coords.timeStamp },\n    get pageX () { return this.coords.page.x },\n    get pageY () { return this.coords.page.y },\n    get clientX () { return this.coords.client.x },\n    get clientY () { return this.coords.client.y },\n    get pointerId () { return this.coords.pointerId },\n    get target () { return this.coords.target },\n    get type () { return this.coords.type },\n    get pointerType () { return this.coords.pointerType },\n    get buttons () { return this.coords.buttons },\n    preventDefault () {},\n  }\n\n  return event as typeof event & Interact.PointerType & Interact.PointerEventType\n}\n\nexport interface MockCoords {\n  page: Interact.Point\n  client: Interact.Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","import * as Interact from '@interactjs/types/index'\n\nexport class BaseEvent<T extends Interact.ActionName = never> {\n  type: string\n  target: EventTarget\n  currentTarget: Node\n  interactable: Interact.Interactable\n  _interaction: Interact.Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor (interaction: Interact.Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends Interact.ActionName> {\n  interaction: Interact.InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get (this: BaseEvent) { return this._interaction._proxy },\n  set (this: BaseEvent) {},\n})\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>) => array[findIndex(array, func)]\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport { InteractEvent } from '@interactjs/core/InteractEvent'\nimport { Interactable } from '@interactjs/core/Interactable'\nimport * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  target: Interact.Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Interact.Element\n  draggable: Interactable\n  timeStamp: number\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: import('./plugin').DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave'\n      ? dropState.prev\n      : dropState.cur\n\n    this.type          = type\n    this.target        = element\n    this.currentTarget = element\n    this.dropzone      = dropzone\n    this.dragEvent     = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable     = dragEvent.interactable\n    this.timeStamp     = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      (this.type !== 'dropactivate') && (\n        !this.dropzone ||\n        dropState.cur.dropzone !== this.dropzone ||\n        dropState.cur.element !== this.target)) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(activeDrops, ({ dropzone, element }) =>\n        dropzone === this.dropzone && element === this.target)\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    }\n    else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n","import { InteractEvent } from '@interactjs/core/InteractEvent'\nimport { Interactable } from '@interactjs/core/Interactable'\nimport * as Interact from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport drag from '../drag/plugin'\n\nimport { DropEvent } from './DropEvent'\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: Interact.DropzoneOptions | boolean): Interact.Interactable\n  (): Interact.DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: Interact.PointerEventType,\n      draggable: Interactable,\n      draggableElement: Interact.Element,\n      dropElemen: Interact.Element,\n      rect: any\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drop: Interact.DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/interactStatic' {\n  export interface InteractStatic {\n    dynamicDrop: (this: Interact.InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interact.Interaction<'drag'>\n  dragEvent: Interact.DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Interact.Element\n  rect: Interact.Rect\n}\n\nexport interface DropState {\n  cur: {\n    dropzone: Interactable    // the dropzone a drag target might be dropped into\n    element: Interact.Element // the element at the time of checking\n  }\n  prev: {\n    dropzone: Interactable    // the dropzone that was recently dragged away from\n    element: Interact.Element // the element at the time of checking\n  }\n  rejected: boolean           // wheather the potential drop was rejected from a listener\n  events: any                 // the drop events related to the current drag event\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable, // eslint-disable-line no-shadow\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (this: Interact.Interactable, dragEvent, event, draggable, draggableElement, dropElement, rect) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }, draggableElement) {\n  const drops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) { continue }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if ((is.element(accept) && accept !== draggableElement) ||\n        (is.string(accept) &&\n        !domUtils.matchesSelector(draggableElement, accept)) ||\n        (is.func(accept) && !accept({ dropzone, draggableElement }))) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : is.array(dropzone.target) ? dropzone.target : [dropzone.target]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops, event) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Interact.Scope, dragElement: Interact.Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop ({ dropState, interactable: draggable, element: dragElement }: Partial<Interact.Interaction>, dragEvent, pointerEvent) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n      ? dropzoneElement\n      : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interact.Interaction, _pointerEvent, dragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target   = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target   = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\nfunction fireDropEvents (interaction: Interact.Interaction, events) {\n  const { dropState } = interaction\n  const {\n    activeDrops,\n    cur,\n    prev,\n  } = dropState\n\n  if (events.leave) { prev.dropzone.fire(events.leave) }\n  if (events.enter) { cur.dropzone.fire(events.enter) }\n  if (events.move) { cur.dropzone.fire(events.move) }\n  if (events.drop) { cur.dropzone.fire(events.drop) }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone  = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: Interact.DoPhaseArg<'drag', Interact.EventPhase>, scope: Interact.Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected = dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone  = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod (interactable: Interact.Interactable): Interact.DropzoneOptions\nfunction dropzoneMethod (interactable: Interact.Interactable, options: Interact.DropzoneOptions | boolean): Interact.Interactable\nfunction dropzoneMethod (interactable: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) { interactable.on('drop', options.ondrop) }\n    if (is.func(options.ondropactivate)) { interactable.on('dropactivate', options.ondropactivate) }\n    if (is.func(options.ondropdeactivate)) { interactable.on('dropdeactivate', options.ondropdeactivate) }\n    if (is.func(options.ondragenter)) { interactable.on('dragenter', options.ondragenter) }\n    if (is.func(options.ondragleave)) { interactable.on('dragleave', options.ondragleave) }\n    if (is.func(options.ondropmove)) { interactable.on('dropmove', options.ondropmove) }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    }\n    else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interact.Interactable,\n  dragEvent: InteractEvent,\n  event: Interact.PointerEventType,\n  draggable: Interact.Interactable,\n  draggableElement: Interact.Element,\n  dropElement: Interact.Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return (interactable.options.drop.checker\n      ? interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n      : false)\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right)\n    const vertical   = (page.y > rect.top) && (page.y < rect.bottom)\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2\n    const cy = dragRect.top  + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n                          Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top)))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n  }\n\n  return dropped\n}\n\nconst drop: Interact.Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': ({ interaction, event, iEvent: dragEvent }: Interact.DoPhaseArg<'drag', Interact.EventPhase>, scope) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': ({ interaction, iEvent: dragEvent }: Interact.DoPhaseArg<'drag', Interact.EventPhase>, scope) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      interaction.dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: Interact.DoPhaseArg<'drag', Interact.EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') { return }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  } as Interact.DropzoneOptions,\n}\n\nexport default drop\n","import * as Interact from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nexport type GesturableMethod = Interact.ActionMethod<Interact.GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number           // angle from first to second touch\n      distance: number\n      scale: number           // gesture.distance / gesture.startDistance\n      startAngle: number      // angle of line joining two touches\n      startDistance: number   // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    gesture: Interact.GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GestureEvent extends Interact.InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Interact.Rect // enclosing box of all points\n  touches: Interact.PointerType[]\n}\n\nexport interface GestureSignalArg extends Interact.DoPhaseArg<'gesture', Interact.EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interact.Interaction<'gesture'>\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    actions,\n    Interactable,\n    defaults,\n  } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (this: Interact.Interactable, options: Interact.GesturableOptions | boolean) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as Interact.Options\n  } as GesturableMethod\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps ({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') { return }\n\n  const pointers = interaction.pointers.map(p => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box      = pointerUtils.touchBBox(pointers)\n    iEvent.scale    = 1\n    iEvent.ds       = 0\n    iEvent.angle    = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da       = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  }\n  else if (ending) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box      = prevEvent.box\n    iEvent.scale    = prevEvent.scale\n    iEvent.ds       = 0\n    iEvent.angle    = prevEvent.angle\n    iEvent.da       = 0\n  }\n  else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box      = pointerUtils.touchBBox(pointers)\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle    = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) &&\n      iEvent.scale !== Infinity &&\n      !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Interact.Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': arg => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {\n  },\n\n  getCursor () {\n    return ''\n  },\n}\n\nexport default gesture\n","import { Interaction } from '@interactjs/core/Interaction'\nimport { Scope } from '@interactjs/core/scope'\nimport * as Interact from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = Interact.ActionMethod<Interact.ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    resize: Interact.ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizeEvent<P extends Interact.EventPhase = Interact.EventPhase> extends Interact.InteractEvent<'resize', P> {\n  deltaRect?: Interact.FullRect\n  edges?: Interact.ActionProps['edges']\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interact.Interactable, options: Interact.ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker (arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) { return undefined }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n     /mouse|pointer/.test(interaction.pointerType) &&\n   (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin)\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  }\n  else {\n    const right  = resizeOptions.axis !== 'y' && page.x > (rect.right  - resize.defaultMargin)\n    const bottom = resizeOptions.axis !== 'x' && page.y > (rect.bottom - resize.defaultMargin)\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable (interactable: Interact.Interactable, options: Interact.OrBoolean<Interact.ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    }\n    else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    }\n    else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (\n  name: string,\n  value: any,\n  page: Interact.Point,\n  element: Node,\n  interactableElement: Interact.Element,\n  rect: Interact.Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) { return false }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = is.number(rect.width) ? rect.width  : rect.right  - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if      (name === 'left')  { name = 'right' }\n      else if (name === 'right') { name = 'left'  }\n    }\n    if (height < 0) {\n      if      (name === 'top')    { name = 'bottom' }\n      else if (name === 'bottom') { name = 'top'    }\n    }\n\n    if (name === 'left') { return page.x < ((width  >= 0 ? rect.left : rect.right) + margin) }\n    if (name === 'top') { return page.y < ((height >= 0 ? rect.top : rect.bottom) + margin) }\n\n    if (name === 'right') { return page.x > ((width  >= 0 ? rect.right : rect.left) - margin) }\n    if (name === 'bottom') { return page.y > ((height >= 0 ? rect.bottom : rect.top) - margin) }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) { return false }\n\n  return is.element(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : dom.matchesUpTo(element, value, interactableElement)\n}\n\nfunction initCursors (browser: typeof import ('@interactjs/utils/browser').default) {\n  return (browser.isIe9 ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  })\n}\n\nfunction start ({ iEvent, interaction }: { iEvent: Interact.InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right : 0,\n      width : 0,\n      top : 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move ({ iEvent, interaction }: { iEvent: Interact.InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  // eslint-disable-next-line no-shadow\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  }\n  else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top    = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left   = Math.min(current.left, startRect.right)\n    corrected.right  = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width  = corrected.right  - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end ({ iEvent, interaction }: { iEvent: Interact.InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes ({ iEvent, interaction }: { iEvent: Interact.InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) { return }\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    }\n    else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  }\n  else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    }\n    else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Interact.Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': arg => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': arg => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as Interact.ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor ({ edges, axis, name }: Interact.ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    }\n    else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n","import * as Interact from '@interactjs/types/index'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n\nexport default {\n  id: 'actions',\n  install (scope: Interact.Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n","export type ArrangeEvent = {}\nexport type ArrangeMode = {}\n\nexport default {}\n","let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init (window: Window) {\n  request = window.requestAnimationFrame\n  cancel = window.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = window[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel = window[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        window[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(window)\n  cancel = cancel && cancel.bind(window)\n\n  if (!request) {\n    request = callback => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      // eslint-disable-next-line standard/no-callback-literal\n      const token = window.setTimeout(() => { callback(currTime + timeToCall) },\n        timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token\n    }\n\n    cancel = token => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n","import * as Interact from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ntype Scope = import ('@interactjs/core/scope').Scope\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install (scope: Scope) {\n  const {\n    defaults,\n    actions,\n  } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    margin   : 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed    : 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interact.Interaction,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interact.Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        }\n        else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop  += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable: Interact.Interactable, actionName: Interact.ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends Interact.ActionName> ({ interaction, pointer }: { interaction: Interact.Interaction<T>, pointer: Interact.PointerType }) {\n    if (!(interaction.interacting() &&\n          autoScroll.check(interaction.interactable, interaction.prepared.name))) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left   = pointer.clientX < autoScroll.margin\n      top    = pointer.clientY < autoScroll.margin\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin\n      top    = pointer.clientY < rect.top    + autoScroll.margin\n      right  = pointer.clientX > rect.right  - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = (right ? 1 : left ? -1 : 0)\n    autoScroll.y = (bottom ? 1 :  top ? -1 : 0)\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed  = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value: any, interactable: Interact.Interactable, element: Interact.Element) {\n  return (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n}\n\nexport function getScroll (container: any) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container: any) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends Interact.ActionName> ({ interaction, element }: {\n  interaction: Partial<Interact.Interaction<T>>\n  element: Interact.Element\n}, func: any) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(\n    scrollOptions.container,\n    interaction.interactable,\n    element,\n  )\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Interact.Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n","import * as Interact from '@interactjs/types/index'\n\nimport { window } from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      (window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction (dest: Interact.ActionProps, src: Interact.ActionProps) {\n  dest.name  = src.name\n  dest.axis  = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n","import * as Interact from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interact.Interactable,\n      pointer: Interact.PointerType,\n      event: Interact.PointerEventType,\n      interaction: Interact.Interaction,\n      element: Interact.Element,\n    ) => Interact.ActionProps | null\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n    allowFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction (\n    this: Interact.Interactable,\n    pointer: Interact.PointerType,\n    event: Interact.PointerEventType,\n    interaction: Interact.Interaction,\n    element: Interact.Element,\n  ): Interact.ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  /**\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interact.Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interact.Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n   *       // force drag with handle target\n   *       action.name = drag\n   *     }\n   *     else {\n   *       // resize from the top and right edges\n   *       action.name  = 'resize'\n   *       action.edges = { top: true, right: true }\n   *     }\n   *\n   *     return action\n   * })\n   * ```\n   *\n   * Returns or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker (\n  interactable: Interact.Interactable,\n  event: Interact.PointerEventType,\n  interaction: Interact.Interaction,\n  element: Interact.Element,\n  scope: Interact.Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons = (event as MouseEvent).buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16,\n  })[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor (this: Interact.Interactable): boolean\nfunction styleCursor (this: Interact.Interactable, newValue: boolean): typeof this\nfunction styleCursor (this: Interact.Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interact.Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import * as Interact from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/core/interactStatic' {\n  export interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Interact.SignalArgs['interactions:move']\n    'autoStart:prepared': { interaction: Interact.Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Interact.Element\n    ignoreFrom?: string | Interact.Element\n    cursorChecker?: Interact.CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interact.Interactable\n  interaction: Interact.Interaction\n  element: Interact.Element\n  action: Interact.ActionProps\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Interact.Element\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    interactStatic: interact,\n    defaults,\n  } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom:  null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown ({ interaction, pointer, event, eventTarget }: Interact.SignalArgs['interactions:down'], scope: Interact.Scope) {\n  if (interaction.interacting()) { return }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove ({ interaction, pointer, event, eventTarget }: Interact.SignalArgs['interactions:move'], scope: Interact.Scope) {\n  if (interaction.pointerType !== 'mouse' ||\n      interaction.pointerIsDown ||\n      interaction.interacting()) { return }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Interact.Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove (arg: Interact.SignalArgs['interactions:move'], scope: Interact.Scope) {\n  const { interaction } = arg\n\n  if (!interaction.pointerIsDown ||\n      interaction.interacting() ||\n      !interaction.pointerWasMoved ||\n      !interaction.prepared.name) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interact.Interaction<Interact.ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (interactable.options[actionName].manualStart ||\n        !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)) {\n      interaction.stop()\n    }\n    else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop ({ interaction }: { interaction: Interact.Interaction }, scope: Interact.Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends Interact.ActionName> (\n  action: Interact.ActionProps<T>,\n  interactable: Interact.Interactable,\n  element: Interact.Element,\n  eventTarget: Node,\n  scope: Interact.Scope,\n) {\n  if (interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n      interactable.options[action.name].enabled &&\n      withinInteractionLimit(interactable, element, action, scope)) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (\n  interaction: Interact.Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  matches: Interact.Interactable[],\n  matchElements: Interact.Element[],\n  eventTarget: Node,\n  scope: Interact.Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) { continue }\n\n    const action = validateAction(\n      matchAction,\n      match,\n      matchElement,\n      eventTarget,\n      scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (\n  interaction: Interact.Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  eventTarget: Node,\n  scope: Interact.Scope,\n) {\n  let matches: Interact.Interactable[] = []\n  let matchElements: Interact.Element[] = []\n\n  let element = eventTarget as Interact.Element\n\n  function pushMatches (interactable: Interact.Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(interaction, pointer, event, matches, matchElements, eventTarget, scope)\n\n    if (actionInfo.action &&\n      !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Interact.Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (\n  interaction: Interact.Interaction,\n  { action, interactable, element }: {\n    action: Interact.ActionProps\n    interactable: Interact.Interactable\n    element: Interact.Element\n  },\n  scope: Interact.Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name\n    ? interactable.getRect(element)\n    : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends Interact.ActionName> (\n  interactable: Interact.Interactable,\n  element: Interact.Element,\n  action: Interact.ActionProps<T>,\n  scope: Interact.Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) { return false }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) { continue }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) { continue }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue: any, scope: Interact.Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: Interact.Element, cursor: string, scope: Interact.Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends Interact.ActionName> (interaction: Interact.Interaction<T>, scope: Interact.Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    }\n    else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Interact.Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n} as Interact.Plugin\n\nexport default autoStart\n","import * as Interact from '@interactjs/types/index'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart ({ interaction, eventTarget, dx, dy }: Interact.SignalArgs['interactions:move'], scope: Interact.Scope) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy')\n\n  interaction.prepared.axis = targetOptions.lockAxis === 'start'\n    ? currentAxis[0]  as 'x' | 'y' // always lock to one axis even if currentAxis === 'xy'\n    : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    (interaction as Interact.Interaction<Interact.ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Interact.Element\n\n    const getDraggable = function (interactable: Interact.Interactable): Interact.Interactable | void {\n      if (interactable === interaction.interactable) { return }\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart &&\n          interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer, interaction.downEvent, interaction, element)\n\n        if (action &&\n            action.name === 'drag' &&\n            checkStartAxis(currentAxis, interactable) &&\n            autoStart.validateAction(action, interactable, element, eventTarget, scope)) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        (interaction as Interact.Interaction<Interact.ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Interact.Element\n    }\n  }\n}\n\nfunction checkStartAxis (startAxis: string, interactable: Interact.Interactable) {\n  if (!interactable) { return false }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis)\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction: Interact.Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) { return null }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nexport default {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nexport default {\n  id: 'auto-start',\n  install (scope: Interact.Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n","export default {}\n","import * as Interact from '@interactjs/types/index'\nimport { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault: typeof preventDefault\n    checkAndPreventDefault: (event: Event) => void\n  }\n}\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\nfunction preventDefault (this: Interact.Interactable): PreventDefaultValue\nfunction preventDefault (this: Interact.Interactable, newValue: PreventDefaultValue): typeof this\nfunction preventDefault (this: Interact.Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable: Interact.Interactable, scope: Interact.Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') { return }\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (is.element(event.target) &&\n      matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }: { interaction: Interact.Interaction, event: Interact.PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install (scope: Interact.Scope) {\n  /** @lends Interactable */\n  const { Interactable } = scope\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        if (interaction.element &&\n          (interaction.element === event.target ||\n           nodeContains(interaction.element, event.target))) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n","/* eslint-disable no-console */\nimport * as Interact from '@interactjs/types/index'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as win from '@interactjs/utils/window'\n\nimport visualizer from './visualizer/plugin'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\ndeclare module '@interactjs/core/interactStatic' {\n  export interface InteractStatic {\n    visializer: typeof visualizer\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface BaseDefaults {\n    devTools?: DevToolsOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    devTools: Interact.OptionMethod<DevToolsOptions>\n  }\n}\n\nexport interface DevToolsOptions {\n  ignore: { [P in keyof typeof CheckName]?: boolean }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport interface Check {\n  name: CheckName\n  text: string\n  perform: (interaction: Interact.Interaction) => boolean\n  getInfo: (interaction: Interact.Interaction) => any[]\n}\n\nenum CheckName {\n  touchAction = 'touchAction',\n  boxSizing = 'boxSizing',\n  noListeners = 'noListeners',\n}\n\nconst prefix  = '[interact.js] '\nconst links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\n// eslint-disable-next-line no-undef\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// eslint-disable-next-line no-restricted-syntax\nfunction install (scope: Interact.Scope, { logger }: { logger?: Logger } = {}) {\n  const {\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.logger = logger || console\n\n  defaults.base.devTools = {\n    ignore: {},\n  }\n\n  Interactable.prototype.devTools = function (options?: object) {\n    if (options) {\n      extend(this.options.devTools, options)\n      return this\n    }\n\n    return this.options.devTools\n  }\n}\n\nconst checks: Check[] = [\n  {\n    name: CheckName.touchAction,\n    perform ({ element }) {\n      return !parentHasStyle(element, 'touchAction', /pan-|pinch|none/)\n    },\n    getInfo ({ element }) {\n      return [\n        element,\n        links.touchAction,\n      ]\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n',\n  },\n\n  {\n    name: CheckName.boxSizing,\n    perform (interaction) {\n      const { element } = interaction\n\n      return interaction.prepared.name === 'resize' &&\n        element instanceof domObjects.HTMLElement &&\n        !hasStyle(element, 'boxSizing', /border-box/)\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo ({ element }) {\n      return [\n        element,\n        links.boxSizing,\n      ]\n    },\n  },\n\n  {\n    name: CheckName.noListeners,\n    perform (interaction) {\n      const actionName = interaction.prepared.name\n      const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n      return !moveListeners.length\n    },\n    getInfo (interaction) {\n      return [\n        interaction.prepared.name,\n        interaction.interactable,\n      ]\n    },\n    text: 'There are no listeners set for this action',\n  },\n]\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  const value = element.style[prop] || win.window.getComputedStyle(element)[prop]\n  return styleRe.test((value || '').toString())\n}\n\nfunction parentHasStyle (element: Interact.Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent) as HTMLElement\n  }\n\n  return false\n}\n\nconst id = 'dev-tools'\nconst defaultExport: Interact.Plugin = isProduction\n  ? { id, install: () => {} }\n  : {\n    id,\n    install,\n    listeners: {\n      'interactions:action-start': ({ interaction }, scope) => {\n        for (const check of checks) {\n          const options = interaction.interactable && interaction.interactable.options\n\n          if (\n            !(options && options.devTools && options.devTools.ignore[check.name]) &&\n            check.perform(interaction)\n          ) {\n            scope.logger.warn(prefix + check.text, ...check.getInfo(interaction))\n          }\n        }\n      },\n    },\n    checks,\n    CheckName,\n    links,\n    prefix,\n  }\n\nexport default defaultExport\n","import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    }\n    else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    }\n    else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import * as Interact from '@interactjs/types/index'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { Modifier, ModifierArg, ModifierState } from './base'\n\nexport interface ModificationResult {\n  delta: Interact.Point\n  rectDelta: Interact.Rect\n  coords: Interact.Point\n  rect: Interact.FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: Interact.EventPhase\n  pageCoords?: Interact.Point\n  rect?: Interact.FullRect\n  coords?: Interact.Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport default class Modification {\n  states: ModifierState[] = []\n  startOffset: Interact.Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta: Interact.Point = null\n  result?: ModificationResult = null\n  endResult?: Interact.Point = null\n  edges: Interact.EdgeOptions\n  readonly interaction: Readonly<Interact.Interaction>\n\n  constructor (interaction: Interact.Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n  }\n\n  start (\n    { phase }: MethodArg,\n    pageCoords: Interact.Point,\n  ) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.edges = extend({}, interaction.edges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg: MethodArg = {\n      phase,\n      pageCoords,\n      preEnd: false,\n    }\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = this.result = this.setAll(arg)\n\n    return result\n  }\n\n  fillArg (arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect = arg.rect || interaction.rect\n    arg.edges = this.edges\n    arg.startOffset = this.startOffset\n  }\n\n  startAll (arg: MethodArg & Partial<ModifierArg>) {\n    this.fillArg(arg)\n\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll (arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    this.fillArg(arg)\n\n    const {\n      phase,\n      preEnd,\n      skipModifiers,\n      rect: unmodifiedRect,\n    } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n\n    const states = skipModifiers\n      ? this.states.slice(skipModifiers)\n      : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg)\n\n        rectUtils.addEdges(this.interaction.edges, arg.rect, { x: arg.coords.x - lastModifierCoords.x, y: arg.coords.y - lastModifierCoords.y })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left   = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right  = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top    = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged = newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed = rectChanged ||\n        prevCoords.x !== newResult.coords.x ||\n        prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction (arg: { phase: Interact.EventPhase, rect?: Interact.Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [[startCoords, startDelta], [curCoords, curDelta]] as const) {\n      coordsSet.page.x   += delta.x\n      coordsSet.page.y   += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left   += rectDelta.left\n    rect.right  += rectDelta.right\n    rect.top    += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply (arg: Partial<Interact.DoAnyPhaseArg> & {\n    phase: Interact.EventPhase\n    preEnd?: boolean\n    skipModifiers?: number\n    modifiedCoords?: Interact.Point\n  }): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll({\n      preEnd,\n      phase,\n      pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n    })\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (!result.changed && (!skipModifiers || skipModifiers < this.states.length) && interaction.interacting()) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd (arg: Omit<Interact.DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop (arg: { interaction: Interact.Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend({\n      states: this.states,\n      interactable: interaction.interactable,\n      element: interaction.element,\n      rect: null,\n    }, arg)\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) { state.methods.stop(modifierArg as ModifierArg) }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates (modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords ({ interaction: { coords, rect, modification } }: { interaction: Interact.Interaction }) {\n    if (!modification.result) { return }\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo (options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      (!options || options.enabled === false) ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom (other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.edges = other.edges\n    this.states = other.states.map(s => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy () {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult (coords?: Interact.Point, rect?: Interact.FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left  : 0,\n      right : 0,\n      top   : 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map(type => {\n      const options = actionOptions[type]\n\n      return options && options.enabled && {\n        options,\n        methods: options._methods,\n      }\n    })\n    .filter(m => !!m)\n}\n\nexport function getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left  : coords.x - rect.left,\n      top   : coords.y - rect.top,\n      right : rect.right  - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left  : 0,\n      top   : 0,\n      right : 0,\n      bottom: 0,\n    }\n}\n","import * as Interact from '@interactjs/types/index'\n\nimport Modification from './Modification'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport interface Modifier<\n  Defaults = any,\n  State extends ModifierState = any,\n  Name extends string = any\n> {\n  options?: Defaults\n  methods: {\n    start?: (arg: ModifierArg<State>) => void\n    set: (arg: ModifierArg<State>) => void\n    beforeEnd?: (arg: ModifierArg<State>) => Interact.Point | void\n    stop?: (arg: ModifierArg<State>) => void\n  }\n  name?: Name\n  enable: () => Modifier<Defaults, State, Name>\n  disable: () => Modifier<Defaults, State, Name>\n}\n\nexport type ModifierState<\n  Defaults = {},\n  StateProps extends { [prop: string]: any } = {},\n  Name extends string = any\n> = {\n  options: Defaults\n  methods?: Modifier<Defaults>['methods']\n  index?: number\n  name?: Name\n} & StateProps\n\nexport interface ModifierArg<State extends ModifierState = ModifierState> {\n  interaction: Interact.Interaction\n  interactable: Interact.Interactable\n  phase: Interact.EventPhase\n  rect: Interact.FullRect\n  edges: Interact.EdgeOptions\n  state?: State\n  element: Interact.Element\n  pageCoords?: Interact.Point\n  prevCoords?: Interact.Point\n  prevRect?: Interact.FullRect\n  coords?: Interact.Point\n  startOffset?: Interact.Rect\n  preEnd?: boolean\n}\n\nexport interface ModifierModule<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n> {\n  defaults?: Defaults\n  start? (arg: ModifierArg<State>): void\n  set? (arg: ModifierArg<State>): any\n  beforeEnd? (arg: ModifierArg<State>): Interact.Point | void\n  stop? (arg: ModifierArg<State>): void\n}\n\nexport interface ModifierFunction <\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n> {\n  (_options?: Partial<Defaults>): Modifier<Defaults, State, Name>\n  _defaults: Defaults\n  _methods: ModifierModule<Defaults, State>\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string\n> (\n  module: ModifierModule<Defaults, State>,\n  name?: Name,\n) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options: Defaults = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        options[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers ({ iEvent, interaction: { modification: { result } } }: {\n  iEvent: Interact.InteractEvent<any>\n  interaction: Interact.Interaction<any>\n}) {\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Interact.Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: scope => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': arg => {\n      const { modification } = arg.interaction\n\n      modification.start(arg, arg.interaction.coords.start.page)\n      arg.interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': arg => arg.interaction.modification.setAndApply(arg),\n\n    'interactions:before-action-end': arg => arg.interaction.modification.beforeEnd(arg),\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': arg => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': arg => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': arg => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n","import * as Interact from '@interactjs/types/index'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {\n}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Node\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Interact.Point | string | Interact.Element\n  listeners?: Interact.Listeners\n  allowFrom?: string | Interact.Element\n  ignoreFrom?: string | Interact.Element\n}\n\nexport type Options = Partial<BaseDefaults> & Partial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\n// export interface Options extends BaseDefaults, PerActionDefaults {}\n\nexport interface OptionsArg extends BaseDefaults, Interact.OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n","import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport { Interaction } from './Interaction'\nimport { defaults } from './defaultOptions'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends Interact.ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  target: Interact.Element\n  currentTarget: Interact.Element\n  relatedTarget: null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Interact.FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Interact.Element\n  dragLeave?: Interact.Element\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction<T>,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Interact.Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: { get () { return this.page.x }, set (value) { this.page.x = value } },\n  pageY: { get () { return this.page.y }, set (value) { this.page.y = value } },\n\n  clientX: { get () { return this.client.x }, set (value) { this.client.x = value } },\n  clientY: { get () { return this.client.y }, set (value) { this.client.y = value } },\n\n  dx: { get () { return this.delta.x }, set (value) { this.delta.x = value } },\n  dy: { get () { return this.delta.y }, set (value) { this.delta.y = value } },\n\n  velocityX: { get () { return this.velocity.x }, set (value) { this.velocity.x = value } },\n  velocityY: { get () { return this.velocity.y }, set (value) { this.velocity.y = value } },\n\n})\n","import * as Interact from '@interactjs/types/index'\n\nexport class PointerInfo {\n  id: number\n  pointer: Interact.PointerType\n  event: Interact.PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor (\n    id: number,\n    pointer: Interact.PointerType,\n    event: Interact.PointerEventType,\n    downTime: number,\n    downTarget: Node,\n  ) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n","import type { ActionDefaults } from '@interactjs/core/defaultOptions'\nimport * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { InteractEvent, EventPhase } from './InteractEvent'\nimport { Interactable } from './Interactable'\nimport { PointerInfo } from './PointerInfo'\nimport { ActionName } from './scope'\n\nexport interface ActionProps<T extends ActionName = never> {\n  name: T\n  axis?: 'x' | 'y' | 'xy'\n  edges?: Interact.EdgeOptions\n}\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = ''\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = ''\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: Interact.PointerType\n  event: Interact.PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: Interact.PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction, event: Event, type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName = ActionName> = Pick<\nInteraction<T>,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName = ActionName> {\n  // current interactable being interacted with\n  interactable: Interactable = null\n\n  // the target element of the interactable\n  element: Interact.Element = null\n  rect: Interact.FullRect\n  _rects?: {\n    start: Interact.FullRect\n    corrected: Interact.FullRect\n    previous: Interact.FullRect\n    delta: Interact.FullRect\n  }\n  edges: Interact.EdgeOptions\n\n  _scopeFire: Interact.Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name : null,\n    axis : null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: Interact.PointerEventType = null\n\n  downPointer: Interact.PointerType = {} as Interact.PointerType\n\n  _latestPointer: {\n    pointer: Interact.PointerType\n    event: Interact.PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  // previous action event\n  prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: InteractionProxy<T> = null\n\n  simulation = null\n\n  /** @internal */ get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = warnOnce(\n    function (this: Interaction, signalArg: any) {\n      this.move(signalArg)\n    },\n    'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: Interact.CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  readonly _id: number = idCounter++\n\n  /** */\n  constructor ({ pointerType, scopeFire }: {\n    pointerType?: string\n    scopeFire: Interact.Scope['fire']\n  }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () { return that[key] },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interact.Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {Boolean} Whether the interaction was successfully started\n   */\n  start<A extends ActionName> (action: ActionProps<A>, interactable: Interactable, element: Interact.Element): boolean {\n    if (this.interacting() ||\n        !this.pointerIsDown ||\n        this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n        !interactable.options[action.name as keyof ActionDefaults].enabled) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element      = element\n    this.rect         = interactable.getRect(element)\n    this.edges        = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped     = false\n    this._interacting = this._doPhase({\n      interaction: this,\n      event: this.downEvent,\n      phase: 'start',\n    }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove = (this.coords.cur.page.x === this.coords.prev.page.x &&\n                           this.coords.cur.page.y === this.coords.prev.page.y &&\n                           this.coords.cur.client.x === this.coords.prev.client.x &&\n                           this.coords.cur.client.y === this.coords.prev.client.y)\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interact.Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend({\n      pointer: this._latestPointer.pointer,\n      event: this._latestPointer.event,\n      eventTarget: this._latestPointer.eventTarget,\n      interaction: this,\n    }, signalArg || {})\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Node, curEventTarget: Interact.EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interact.Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', { event, type: 'blur', interaction: this })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: Interact.PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer: Interact.PointerType) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return (this.pointerType === 'mouse' || this.pointerType === 'pen')\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, curPointer => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false\n      ? false\n      : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(\n        id,\n        pointer,\n        event,\n        null,\n        null,\n      )\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    }\n    else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(this.coords.cur, this.pointers.map(p => p.pointer), this._now())\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interact.Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: Interact.PointerType, event: Interact.PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) { return }\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interact.Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  _updateLatestPointer (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent<P extends EventPhase> (event: Interact.PointerEventType, phase: P, preEnd?: boolean, type?: string) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  _fireEvent<P extends EventPhase> (iEvent: InteractEvent<T, P>) {\n    this.interactable.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase<P extends EventPhase> (signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> }) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type)\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') { this.prevEvent = iEvent }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () { return Date.now() }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","import { _ProxyMethods } from '@interactjs/core/Interaction'\nimport * as Interact from '@interactjs/types/index'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Interact.Point\n      pending: Interact.Point\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum _ProxyMethods {\n    // eslint-disable-next-line no-shadow\n    offsetBy = ''\n  }\n}\n\n(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal (interaction: Interact.Interaction) {\n  if (!interaction.pointerIsDown) { return }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction ({ interaction }: { interaction: Interact.Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd ({ interaction }: { interaction: Interact.Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) { return }\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end ({ interaction }: { interaction: Interact.Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending (interaction: Interact.Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy (this: Interact.Interaction, { x, y }: Interact.Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords ({ page, client }, { x, y }: Interact.Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending (interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Interact.Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install (scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n","import Modification from '@interactjs/modifiers/Modification'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport offset from '@interactjs/offset/plugin'\nimport * as Interact from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number        // the lambda in exponential decay\n      minSpeed?: number          // target speed must be above this for inertia to start\n      endSpeed?: number          // the speed at which inertia is slow enough to stop\n      allowResume?: true         // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<Interact.DoPhaseArg<Interact.ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': Interact.DoPhaseArg<Interact.ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': Interact.DoPhaseArg<Interact.ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<Interact.DoPhaseArg<Interact.ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': Interact.DoPhaseArg<Interact.ActionName, 'resume'>\n    'interactions:after-action-resume': Interact.DoPhaseArg<Interact.ActionName, 'resume'>\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification: Modification = null\n  modifierCount = 0\n  modifierArg: modifiers.ModifierArg = null\n\n  startCoords: Interact.Point = null\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset: Interact.Point = null\n  modifiedOffset: Interact.Point = null\n  currentOffset: Interact.Point = null\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout: number = null\n  readonly interaction: Interact.Interaction\n\n  constructor (interaction: Interact.Interaction) {\n    this.interaction = interaction\n  }\n\n  start (event: Interact.PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = {\n      interaction,\n      interactable: interaction.interactable,\n      element: interaction.element,\n      rect: interaction.rect,\n      edges: interaction.edges,\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    }\n\n    const thrown = (\n      (this.t0 - interaction.coords.cur.timeStamp) < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n    )\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia () {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd () {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame (tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) { tickFn() }\n    })\n  }\n\n  inertiaTick () {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress =  1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Interact.Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0, 0,\n          this.targetOffset.x, this.targetOffset.y,\n          this.modifiedOffset.x, this.modifiedOffset.y,\n          progress,\n        )\n      }\n      else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    }\n    else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick () {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    }\n    else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume ({ pointer, event, eventTarget }: Interact.SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end () {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop () {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start ({ interaction, event }: Interact.DoPhaseArg<Interact.ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume (arg: Interact.SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) { return }\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop ({ interaction }: { interaction: Interact.Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions ({ interactable, prepared }: Interact.Interaction) {\n  return interactable &&\n    interactable.options &&\n    prepared.name &&\n    interactable.options[prepared.name].inertia\n}\n\nconst inertia: Interact.Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': arg => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': arg => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': arg => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': arg => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint (\n  startX: number, startY: number, cpX: number, cpY: number, endX: number, endY: number, position: number) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n","import * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport normalize, { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\n\nfunction fireUntilImmediateStopped (event: any, listeners: Interact.Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) { break }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string, propagationStopped?: boolean }> (event: T) {\n    let listeners: Interact.Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) { continue }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Interact.Element): Interact.Rect {\n    return null\n  }\n}\n","import * as Interact from '@interactjs/types/index'\n\nexport default function isNonNativeEvent (type: string, actions: Interact.Actions) {\n  if (actions.phaselessTypes[type]) { return true }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n","/* eslint-disable no-dupe-class-members */\nimport { ActionMap } from '@interactjs/core/scope'\nimport * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport { ActionDefaults, Defaults, Options } from './defaultOptions'\nimport isNonNativeEvent from './isNonNativeEvent'\n\ntype IgnoreValue = string | Interact.Element | boolean\ntype DeltaSource = 'page' | 'client'\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Interact.Actions\n  readonly target: Interact.Target\n  readonly events = new Eventable()\n  readonly _context: Interact.Context\n  readonly _win: Window\n  readonly _doc: Document\n  readonly _scopeEvents: Interact.Scope['events']\n\n  /** @internal */ _rectChecker?: typeof Interactable.prototype.getRect\n\n  /** */\n  constructor (target: Interact.Target, options: any, defaultContext: Document | Interact.Element, scopeEvents: Interact.Scope['events']) {\n    this._actions = options.actions\n    this.target   = target\n    this._context = options.context || defaultContext\n    this._win     = getWindow(trySelector(target) ? this._context : target)\n    this._doc     = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: Interact.ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) { this.on(`${actionName}start`, phases.onstart) }\n    if (is.func(phases.onmove)) { this.on(`${actionName}move`, phases.onmove) }\n    if (is.func(phases.onend)) { this.on(`${actionName}end`, phases.onend) }\n    if (is.func(phases.oninertiastart)) { this.on(`${actionName}inertiastart`, phases.oninertiastart) }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName: Interact.ActionName, prev: Interact.Listeners, cur: Interact.Listeners) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName: Interact.ActionName, options: Interact.OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof Interact.PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Interact.Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array<any>(optionValue)) {\n        (actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        (actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || {} as any,\n          clone(optionValue))\n\n        // set anabled field to true if it exists in the defaults\n        if (is.object(defaults.perAction[optionName]) && 'enabled' in (defaults.perAction[optionName] as any)) {\n          (actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        (actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        (actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Interact.Rect} The object's bounding rectangle.\n   */\n  getRect (element: Interact.Element) {\n    element = element || (is.element(this.target)\n      ? this.target\n      : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker (): (element: Interact.Element) => any | null\n  rectChecker (checker: (element: Interact.Element) => any): this\n  rectChecker (checker?: (element: Interact.Element) => any) {\n    if (is.func(checker)) {\n      this._rectChecker = checker\n\n      this.getRect = element => {\n        const rect = extend({}, this._rectChecker(element))\n\n        if (!('width' in rect)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n      delete this._rectChecker\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName: keyof Interact.Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      (this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        (this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource (): DeltaSource\n  deltaSource (newValue: DeltaSource): this\n  deltaSource (newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element: Document | Node) {\n    return (this._context === element.ownerDocument ||\n            nodeContains(this._context, element))\n  }\n\n  testIgnoreAllow (\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue, allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (!this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n            this.testAllow(options.allowFrom, targetNode, eventTarget))\n  }\n\n  testAllow (\n    this: Interactable,\n    allowFrom: IgnoreValue,\n    targetNode: Node,\n    element: Node,\n  ) {\n    if (!allowFrom) { return true }\n\n    if (!is.element(element)) { return false }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    }\n    else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (\n    this: Interactable,\n    ignoreFrom: IgnoreValue,\n    targetNode: Node,\n    element: Node,\n  ) {\n    if (!ignoreFrom || !is.element(element)) { return false }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    }\n    else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }> (iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: Interact.EventTypes, listenerArg?: Interact.ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') { type = browser.wheelEvent }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[`${addRemove}Delegate` as 'addDelegate' | 'removeDelegate'](this.target, this._context, type, listener, options)\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[addRemove](this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: Interact.OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    (this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as Interact.ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n\n      ;(this[methodName] as Interact.ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func((this as any)[setting])) {\n        (this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset () {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(this.target, this._context, type, listeners[l][0], listeners[l][1])\n          }\n        }\n      }\n    }\n    else {\n      this._scopeEvents.remove(this.target as Node, 'all')\n    }\n  }\n}\n","import { Interactable } from '@interactjs/core/Interactable'\nimport * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interact.Interactable\n      target: Interact.Target\n      options: Interact.OptionsArg\n      win: Window\n    }\n  }\n}\n\ninterface InteractableScopeProp {\n  context: Document | Interact.Element\n  interactable: Interact.Interactable\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interact.Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: InteractableScopeProp[]\n  } = {}\n\n  scope: Interact.Scope\n\n  constructor (scope: Interact.Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings: InteractableScopeProp[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(targetMappings, m => m.context === context)\n        if (targetMappings[targetIndex]) {\n        // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Interact.Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) { this.selectorMap[target] = [] }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!((interactable.target as any)[this.scope.id])) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      (target as any)[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Interact.Target, options?: Interact.Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings: InteractableScopeProp[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!targetMappings) { return null }\n\n    const found = arr.find(\n      targetMappings,\n      m => m.context === context &&\n        (isSelector || m.interactable.inContext(target as any)))\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interact.Interactable) => T) {\n    for (const interactable of this.list) {\n      let ret: void | T\n\n      if ((is.string(interactable.target)\n      // target is a selector and the element matches\n        ? (is.element(node) && domUtils.matchesSelector(node, interactable.target))\n        // target is the element\n        : node === interactable.target) &&\n        // the element is in context\n        (interactable.inContext(node))) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ntype Listener = (event: Event | FakeEvent) => any\n\nfunction install (scope: Interact.Scope) {\n  const targets: Array<{\n    eventTarget: EventTarget\n    events: { [type: string]: Listener[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: Array<[Listener, { capture: boolean, passive: boolean }]>\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document.createElement('div').addEventListener('test', null, {\n    get capture () { return (eventsMethods.supportsOptions = true) },\n    get passive () { return (eventsMethods.supportsPassive = true) },\n  })\n\n  scope.events = eventsMethods\n\n  function add (eventTarget: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, t => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (eventTarget.addEventListener && !arr.contains(target.events[type], listener)) {\n      eventTarget.addEventListener(type, listener as any, eventsMethods.supportsOptions ? options : options.capture)\n      target.events[type].push(listener)\n    }\n  }\n\n  function remove (eventTarget: EventTarget, type: string, listener?: 'all' | Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    const targetIndex = arr.findIndex(targets, t => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          remove(eventTarget, type, typeListeners[i], options)\n        }\n        return\n      }\n      else {\n        for (let i = 0; i < typeListeners.length; i++) {\n          if (typeListeners[i] === listener) {\n            eventTarget.removeEventListener(type, listener as any, eventsMethods.supportsOptions ? options : options.capture)\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, d => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push([listener, options])\n  }\n\n  function removeDelegate (\n    selector: string,\n    context: Document | Interact.Element,\n    type: string,\n    listener?: Listener,\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) { return }\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const [fn, { capture, passive }] = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (fn === listener && capture === options.capture && passive === options.passive) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) { break }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener (event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = (pointerUtils.getEventTargets(event as Event))\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (domUtils.matchesSelector(element, selector) &&\n            domUtils.nodeContains(context, eventTarget) &&\n            domUtils.nodeContains(context, element)) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const [fn, { capture, passive }] of listeners) {\n            if (capture === options.capture && passive === options.passive) {\n              fn(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture (this: Interact.Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor (originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions (param: { [index: string]: any } | boolean): { capture: boolean, passive: boolean } {\n  if (!is.object(param)) { return { capture: !!param, passive: false } }\n\n  const options = extend({}, param) as any\n\n  options.capture = !!param.capture\n  options.passive = !!param.passive\n\n  return options\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n","/** @module interact */\nimport * as Interact from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport { Interactable } from './Interactable'\nimport { Options } from './defaultOptions'\nimport isNonNativeEvent from './isNonNativeEvent'\n\nexport interface InteractStatic {\n  (target: Interact.Target, options?: Options): Interactable\n  getPointerAverage: typeof pointerUtils.pointerAverage\n  getTouchBBox: typeof pointerUtils.touchBBox\n  getTouchDistance: typeof pointerUtils.touchDistance\n  getTouchAngle: typeof pointerUtils.touchAngle\n  getElementRect: typeof domUtils.getElementRect\n  getElementClientRect: typeof domUtils.getElementClientRect\n  matchesSelector: typeof domUtils.matchesSelector\n  closest: typeof domUtils.closest\n  /** @internal */ globalEvents: any\n  version: string\n  /** @internal */ scope: Interact.Scope\n  use(plugin: Interact.Plugin, options?: {\n    [key: string]: any\n  }): any\n  isSet(target: Interact.Element, options?: any): boolean\n  on(type: string | Interact.EventTypes, listener: Interact.ListenersArg, options?: object): any\n  off(type: Interact.EventTypes, listener: any, options?: object): any\n  debug(): any\n  supportsTouch(): boolean\n  supportsPointerEvent(): boolean\n  stop(): any\n  pointerMoveTolerance(newValue?: number): any\n  addDocument(doc: Document, options?: object): void\n  removeDocument(doc: Document): void\n}\n\nexport function createInteractStatic (scope: Interact.Scope): Interact.InteractStatic {\n  /**\n   * ```js\n   * interact('#draggable').draggable(true)\n   *\n   * var rectables = interact('rect')\n   * rectables\n   *   .gesturable(true)\n   *   .on('gesturemove', function (event) {\n   *       // ...\n   *   })\n   * ```\n   *\n   * The methods of this variable can be used to set elements as interactables\n   * and also to change various default settings.\n   *\n   * Calling it as a function and passing an element or a valid CSS selector\n   * string returns an Interactable object which has various methods to configure\n   * it.\n   *\n   * @global\n   *\n   * @param {Element | string} target The HTML or SVG Element to interact with\n   * or CSS selector\n   * @return {Interactable}\n   */\n  const interact = ((target, options) => {\n    let interactable = scope.interactables.get(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  /**\n  * Use a plugin\n  *\n  * @alias module:interact.use\n  *\n  * @param {Object} plugin\n  * @param {function} plugin.install\n  * @return {Interact.InteractStatic}\n   */\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  /**\n   * Check if an element or selector has been set with the {@link interact}\n   * function\n   *\n   * @alias module:interact.isSet\n   *\n   * @param {Element} element The Element being searched for\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  interact.isSet = function (target, options) {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  /**\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\n   *\n   * @alias module:interact.on\n   *\n   * @param {string | array | object} type The types of events to listen for\n   * @param {function} listener The function event (s)\n   * @param {object | boolean} [options] object or useCapture flag for\n   * addEventListener\n   * @return {object} interact\n   */\n  interact.on = function (type: string | Interact.EventTypes, listener: Interact.ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of (type as any[])) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      }\n      else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Interact.Listener, { options })\n    }\n\n    return this\n  }\n\n  /**\n   * Removes a global InteractEvent listener or DOM event from `document`\n   *\n   * @alias module:interact.off\n   *\n   * @param {string | array | object} type The types of events that were listened\n   * for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} options [options] object or useCapture flag for\n   * removeEventListener\n   * @return {object} interact\n   */\n  interact.off = function (type: Interact.EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents &&\n            (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    }\n    else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  /**\n   * @alias module:interact.supportsTouch\n   *\n   * @return {boolean} Whether or not the browser supports touch input\n   */\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  /**\n   * @alias module:interact.supportsPointerEvent\n   *\n   * @return {boolean} Whether or not the browser supports PointerEvents\n   */\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  /**\n   * Cancels all interactions (end events are not fired)\n   *\n   * @alias module:interact.stop\n   *\n   * @return {object} interact\n   */\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   *\n   * @alias module:interact.pointerMoveTolerance\n   *\n   * @param {number} [newValue] The movement from the start position must be greater than this value\n   * @return {interact | number}\n   */\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact as any\n}\n","import * as Interact from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: Interact.PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: Interact.EventTarget\n  curEventTarget: Interact.EventTarget\n  scope: Interact.Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search (details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (interaction.simulation && interaction.simulation.allowResume &&\n          (interaction.pointerType === pointerType)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) { continue }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && (pointerType === interaction.pointerType)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction: Interact.Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import * as Interact from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport InteractionBase from './Interaction'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport finder, { SearchDetails } from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends Interact.ActionName> (options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Interact.Listener }\n      docEvents: Array<{ type: string, listener: Interact.Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer', 'windowBlur',\n]\n\nfunction install (scope: Interact.Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down,   listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down,   listener: listeners.pointerDown },\n      { type: pEventTypes.move,   listener: listeners.pointerMove },\n      { type: pEventTypes.up,     listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  }\n  else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class <T extends Interact.ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () { return scope.now() }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends Interact.ActionName> (options: { pointerType?: string, scopeFire?: Interact.Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown ||\n        interaction.pointerType !== 'touch' ||\n        interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions (method: string, scope: Interact.Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n    else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer ||\n          (scope.now() - scope.prevTouchTime < 500) ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> ({ doc, scope, options }: Interact.SignalArgs[T], eventMethodName: 'add' | 'remove') {\n  const { interactions: { docEvents }, events } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Interact.Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': arg => onDocSignal(arg, 'add'),\n    'scope:remove-document': arg => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) { continue }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n","import * as Interact from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport { InteractEvent, PhaseMap } from './InteractEvent'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { defaults } from './defaultOptions'\nimport events from './events'\nimport { createInteractStatic } from './interactStatic'\nimport interactions from './interactions'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: Interact.OptionsArg }\n  'interactions:destroy': { interaction: Interact.Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options?: { [index: string]: any }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionMap {}\nexport type ActionName = keyof ActionMap\n\nexport interface Actions {\n  map: ActionMap\n  phases: PhaseMap\n  methodDict: { [P in ActionName]?: keyof Interact.Interactable }\n  phaselessTypes: { [type: string]: true }\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install? (scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {},\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor () {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults () { return scope.defaults }\n\n      set <T extends InteractableBase> (this: T, options: Interact.OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset (this: InteractableBase) {\n        super.unset()\n        scope.interactables.list.splice(scope.interactables.list.indexOf(this), 1)\n\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const { map: { [name]: listener } } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window) {\n    return this.isInitialized\n      ? this\n      : initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) { this._plugins.map[plugin.id] = plugin }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (before[otherId] || before[pluginIdRoot(otherId)]) { break }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    }\n    else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) { return false }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return ((this.window as any).Date as typeof Date || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window) {\n  scope.isInitialized = true\n  win.init(window)\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot (id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n","import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact: import('@interactjs/core/interactStatic').InteractStatic = scope.interactStatic\n\nexport default interact\n\nexport const init = (win: Window) => scope.init(win)\n\nif (typeof window === 'object' && !!window) {\n  init(window)\n}\n","export default () => {}\n","import * as Interact from '@interactjs/types/index'\n\nexport type GridOptions = (Partial<Interact.Rect> | Interact.Point) & {\n  range?: number\n  limits?: Interact.Rect\n  offset?: Interact.Point\n}\n\nexport default (grid: GridOptions) => {\n  const coordFields = ([\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ] as const).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: Interact.SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left  : -Infinity,\n        right :  Infinity,\n        top   : -Infinity,\n        bottom:  Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: Interact.SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n","import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/interactStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Interact.Plugin = {\n  id: 'snappers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n","/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This module forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport Modification from './Modification'\nimport { Modifier, ModifierModule, ModifierState, makeModifier } from './base'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<AspectRatioOptions, {\n  startCoords: Interact.Point\n  startRect: Interact.Rect\n  linkedEdges: Interact.EdgeOptions\n  ratio: number\n  equalDelta: boolean\n  xIsPrimaryAxis: boolean\n  edgeSign: 1 | -1\n  subModification: Modification\n}>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start (arg) {\n    const { state, rect, edges: originalEdges, pageCoords: coords } = arg\n    let { ratio } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = state.linkedEdges = {\n      top   : originalEdges.top    || (originalEdges.left   && !originalEdges.bottom),\n      left  : originalEdges.left   || (originalEdges.top    && !originalEdges.right),\n      bottom: originalEdges.bottom || (originalEdges.right  && !originalEdges.top),\n      right : originalEdges.right  || (originalEdges.bottom && !originalEdges.left),\n    }\n\n    state.xIsPrimaryAxis = !!(originalEdges.left || originalEdges.right)\n\n    if (state.equalDelta) {\n      state.edgeSign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1) as 1 | -1\n    }\n    else {\n      const negativeSecondaryEdge = state.xIsPrimaryAxis ? linkedEdges.top : linkedEdges.left\n      state.edgeSign = negativeSecondaryEdge ? -1 : 1\n    }\n\n    extend(arg.edges, linkedEdges)\n\n    if (!modifiers || !modifiers.length) { return }\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set (arg) {\n    const { state, rect, coords } = arg\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) { return null }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(state.linkedEdges, correctedRect, { x: coords.x - initialCoords.x, y: coords.y - initialCoords.y })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: state.linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta ({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Interact.Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign\n  }\n  else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign\n  }\n}\n\nfunction setRatio ({ startRect, startCoords, ratio, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Interact.Point, rect: Interact.Rect) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign\n  }\n  else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n","import { ModifierFunction } from './base'\n\nconst noop = (() => {\n}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n","import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier, ModifierArg, ModifierModule, ModifierState } from '../base'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: Interact.RectResolvable<[number, number, Interact.Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Interact.Rect\n  offset: Interact.Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<RestrictOptions, {\n  offset: Interact.Rect\n}>\n\nfunction start ({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Interact.Rect = extend({\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  }, options.offset || {})\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = (restriction.right - restriction.left) - rect.width\n      const heightDiff = (restriction.bottom - restriction.top) - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - (rect.width  * elementRect.left)\n    offset.top  += startOffset.top  - (rect.height * elementRect.top)\n\n    offset.right  += startOffset.right  - (rect.width  * (1 - elementRect.right))\n    offset.bottom += startOffset.bottom - (rect.height * (1 - elementRect.bottom))\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) { return }\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right  - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top  + offset.top)\n}\n\nexport function getRestrictionRect (\n  value: Interact.RectResolvable<[number, number, Interact.Interaction]>,\n  interaction: Interact.Interaction,\n  coords?: Interact.Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [coords.x, coords.y, interaction])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier, ModifierArg, ModifierState } from '../base'\n\nimport { getRestrictionRect, RestrictOptions } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<RestrictEdgesOptions, {\n  inner: Interact.Rect\n  outer: Interact.Rect\n  offset: RestrictEdgesOptions['offset']\n}>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top:    offset.y + startOffset.top,\n    left:   offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right:  offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || {} as Interact.Rect\n  const outer = getRestrictionRect(options.outer, interaction, page) || {} as Interact.Rect\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top    + offset.top,    page.y), inner.top    + offset.top)\n  }\n  else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left   + offset.left,   page.x), inner.left   + offset.left)\n  }\n  else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right  + offset.right,  page.x), inner.right  + offset.right)\n  }\n}\n\nfunction fixRect (rect, defaults) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n","import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend({\n  get elementRect () {\n    return { top: 0, left: 0, bottom: 1, right: 1 }\n  },\n  set elementRect (_) {},\n}, restrict.defaults)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n","import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier, ModifierArg, ModifierState } from '../base'\n\nimport { restrictEdges, RestrictEdgesState } from './edges'\nimport { getRestrictionRect, RestrictOptions } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Interact.Size | Interact.Point | RestrictOptions['restriction']\n  max?: Interact.Size | Interact.Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start (arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState =\n  RestrictEdgesState & ModifierState<RestrictSizeOptions & { inner: Interact.Rect, outer: Interact.Rect }, {\n    min: Interact.Rect\n    max: Interact.Rect\n  }>\n\nfunction set (arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize = rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize = rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  }\n  else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  }\n  else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n","import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier, ModifierArg, ModifierState } from '../base'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Interact.Point\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: Interact.InteractionProxy,\n  offset: Offset,\n  index: number\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[]\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Interact.Point[]\n  // startCoords = offset snapping from drag start page position\n  offset: Interact.Point | Interact.RectResolvable<[Interact.Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin: Interact.RectResolvable<[Interact.Element]> | Interact.Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<SnapOptions, {\n  offsets?: Offset[]\n  closest?: any\n  targetFields?: string[][]\n}>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin\n    ? getOrigin(arg)\n    : { x: 0, y: 0 }\n\n  let snapOffset: Interact.Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  }\n  else  {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets = rect && relativePoints && relativePoints.length\n    ?  relativePoints.map((relativePoint, index) => ({\n      index,\n      relativePoint,\n      x: startOffset.left - (rect.width  * relativePoint.x) + snapOffset.x,\n      y: startOffset.top  - (rect.height * relativePoint.y) + snapOffset.y,\n    }))\n    : [extend({\n      index: 0,\n      relativePoint: null,\n    }, snapOffset)]\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      }\n      else {\n        target = snapTarget\n      }\n\n      if (!target) { continue }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (!closest.target || (inRange\n      // is the closest target in range?\n      ? (closest.inRange && range !== Infinity\n        // the pointer is relatively deeper in this target\n        ? distance / range < closest.distance / closest.range\n        // this target has Infinite range and the closest doesn't\n        : (range === Infinity && closest.range !== Infinity) ||\n          // OR this target is closer that the previous closest\n          distance < closest.distance)\n      // The other is not in range and the pointer is closer to this target\n      : (!closest.inRange && distance < closest.distance))) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(\n    resolveRectLike(arg.state.options.origin as any, null, null, [element]),\n  )\n  const origin = optionsOrigin || getOriginXY(\n    arg.interactable,\n    element,\n    arg.interaction.prepared.name,\n  )\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range  : Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier, ModifierArg } from '../base'\n\nimport { snap, SnapOptions, SnapState } from './pointer'\n\nexport type SnapSizeOptions = Pick<\nSnapOptions,\n'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) { return null }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [{\n        x: edges.left ? 0 : 1,\n        y: edges.top ? 0 : 1,\n      }],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of (options.targets || [])) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    }\n    else {\n      target = snapTarget\n    }\n\n    if (!target) { continue }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * WOW> This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier, ModifierArg, ModifierModule } from '../base'\n\nimport { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) { return null }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(\n    clone(snapSize.defaults),\n    {\n      targets: null,\n      range: null,\n      offset: { x: 0, y: 0 },\n    } as const,\n  ),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n","/* eslint-disable node/no-extraneous-import */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring'\nimport transform from './transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n","import snappers from '@interactjs/snappers/plugin'\nimport * as Interact from '@interactjs/types/index'\n\nimport all from './all'\nimport base from './base'\n\ndeclare module '@interactjs/core/interactStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Interact.Plugin = {\n  id: 'modifiers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n","import * as Interact from '@interactjs/types/index'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport { BaseEvent } from '../core/BaseEvent'\n\nexport default class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  type: T\n  originalEvent: Interact.PointerEventType\n  pointerId: number\n  pointerType: string\n  double: boolean\n  pageX: number\n  pageY: number\n  clientX: number\n  clientY: number\n  dt: number\n  eventable: any\n  [key: string]: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: Interact.PointerType | PointerEvent<any>,\n    event: Interact.PointerEventType,\n    eventTarget: Node,\n    interaction: Interact.Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp     = timeStamp\n    this.originalEvent = event\n    this.type          = type\n    this.pointerId     = pointerUtils.getPointerId(pointer)\n    this.pointerType   = pointerUtils.getPointerType(pointer)\n    this.target        = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double = !!(interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500)\n    }\n    else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }: Interact.Point) {\n    this.pageX   -= originX\n    this.pageY   -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }: Interact.Point) {\n    this.pageX   += originX\n    this.pageY   += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n\nexport { PointerEvent }\n","import { Eventable } from '@interactjs/core/Eventable'\nimport { Interaction } from '@interactjs/core/Interaction'\nimport { PerActionDefaults } from '@interactjs/core/defaultOptions'\nimport { Scope } from '@interactjs/core/scope'\nimport * as Interact from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Interact.Point | string | Interact.Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    pointerEvents: Interact.Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<never>\n      pointer: Interact.PointerType | PointerEvent<any>\n      event: Interact.PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<never>\n      pointer: Interact.PointerType | PointerEvent<any>\n      event: Interact.PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom  : null,\n  allowFrom   : null,\n  origin      : { x: 0, y: 0 },\n}\n\nconst pointerEvents: Interact.Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string> (\n  arg: {\n    pointer: Interact.PointerType | PointerEvent<any>\n    event: Interact.PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Interact.Scope,\n) {\n  const {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    targets = collectEventTargets(arg, scope),\n  } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      (pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (pointerEvent.immediatePropagationStopped ||\n        (pointerEvent.propagationStopped &&\n            (i + 1) < targets.length && targets[i + 1].node !== pointerEvent.currentTarget)) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire({\n        interaction,\n        pointer,\n        event,\n        eventTarget,\n        type: 'doubletap',\n      }, scope)\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> ({ interaction, pointer, event, eventTarget, type }: {\n  interaction: Interaction<never>\n  pointer: Interact.PointerType | PointerEvent<any>\n  event: Interact.PointerEventType | PointerEvent<any>\n  eventTarget: Node\n  type: T\n}, scope: Interact.Scope) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (type === 'tap' && (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Interact.Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(target =>\n      target.eventable.options.holdDuration === interaction.pointers[pointerIndex].hold.duration)\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps ({ interaction }) {\n  interaction.prevTap = null   // the most recent tap event on this interaction\n  interaction.tapTime = 0     // time of the most recent tap event\n}\n\nfunction addHoldInfo ({ down, pointerInfo }: Interact.SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold ({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold (\n  arg: Interact.SignalArgs['interactions:move'],\n  scope: Interact.Scope,\n) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire({\n      interaction,\n      pointer,\n      event,\n      eventTarget: eventTarget as Interact.Element,\n      type: 'move',\n    }, scope)\n  }\n}\n\nfunction downAndStartHold ({ interaction, pointer, event, eventTarget, pointerIndex }: Interact.SignalArgs['interactions:down'], scope: Interact.Scope) {\n  const timer = interaction.pointers[pointerIndex].hold\n  const path = domUtils.getPath(eventTarget as Interact.Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) { return }\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire({\n      interaction,\n      eventTarget,\n      pointer,\n      event,\n      type: 'hold',\n    }, scope)\n  }, minDuration)\n}\n\nfunction tapAfterUp ({ interaction, pointer, event, eventTarget }: Interact.SignalArgs['interactions:up'], scope: Interact.Scope) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n","import { ListenerMap } from '@interactjs/core/scope'\nimport * as Interact from '@interactjs/types/index'\n\nimport PointerEvent from './PointerEvent'\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  scope.usePlugin(basePlugin)\n\n  const {\n    pointerEvents,\n  } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew ({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') { return }\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: Interact.SignalArgs['pointerEvents:fired'],\n  scope: Interact.Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) { return }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire({\n      interaction,\n      eventTarget,\n      type: 'hold',\n      pointer: pointerEvent,\n      event: pointerEvent,\n    }, scope)\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }: { interaction: Interact.Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Interact.Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      (acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n","import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interact.Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nconst plugin: Interact.Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({\n      targets,\n      node,\n      type,\n      eventTarget,\n    }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interact.Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n        interactable.testIgnoreAllow(options, node, eventTarget)) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Interact.Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import * as Interact from '@interactjs/types/index'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nconst plugin: Interact.Plugin = {\n  id: 'pointer-events',\n  install (scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n","import { Interactable } from '@interactjs/core/Interactable'\nimport { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport { Scope } from '@interactjs/core/scope'\nimport * as Interact from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<Interact.DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': Interact.DoAnyPhaseArg\n    'interactions:after-action-reflow': Interact.DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: <T extends Interact.ActionName>(action: ActionProps<T>) => ReturnType<typeof reflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: () => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nexport function install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    // eslint-disable-next-line no-shadow\n    Interactable,\n  } = scope\n\n  scope.actions.phases.reflow = true\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n   */\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return reflow(this, action, scope)\n  }\n}\n\nfunction reflow<T extends Interact.ActionName> (interactable: Interactable, action: ActionProps<T>, scope: Scope): Promise<Interactable> {\n  const elements = (is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target]) as Interact.Element[]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) { break }\n\n    const runningInteraction = arr.find(\n      scope.interactions.list,\n      (interaction: Interaction) => {\n        return interaction.interacting() &&\n          interaction.interactable === interactable &&\n          interaction.element === element &&\n          interaction.prepared.name === action.name\n      })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise = runningInteraction._reflowPromise || new Promise((resolve: any) => {\n          runningInteraction._reflowResolve = resolve\n        })\n      }\n    }\n    else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page     : { x: xywh.x, y: xywh.y },\n        client   : { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends Interact.ActionName> (scope: Scope, interactable: Interactable, element: Interact.Element, action: ActionProps<T>, event: any) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = (scope.window as unknown as { Promise: PromiseConstructor })\n  const reflowPromise = Promise\n    ? new Promise<undefined>(resolve => {\n      interaction._reflowResolve = resolve\n    })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  }\n  else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nexport default {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n} as Interact.Plugin\n","export default {}\n","export const exchange = {}\n","import actions from '@interactjs/actions/plugin'\nimport arrange from '@interactjs/arrange/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport clone from '@interactjs/clone/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport feedback from '@interactjs/feedback/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport multiTarget from '@interactjs/multi-target/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reactComponents from '@interactjs/react/plugin'\nimport reflow from '@interactjs/reflow/plugin'\nimport * as displace from '@interactjs/utils/displace'\nimport { exchange } from '@interactjs/utils/exchange'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport vueComponents from '@interactjs/vue/plugin'\n\ndeclare module '@interactjs/core/interactStatic' {\n  export interface InteractStatic {\n    __utils: {\n      exchange: typeof exchange\n      displace: typeof displace\n      pointer: typeof pointerUtils\n    }\n  }\n}\n\ninteract.use(multiTarget)\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// interaction element cloning\ninteract.use(clone)\n\n// sortable and swappable\ninteract.use(arrange)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\ninteract.use(feedback)\n\ninteract.use(vueComponents)\n\ninteract.use(reactComponents)\n\ninteract.__utils = {\n  exchange,\n  displace,\n  pointer: pointerUtils,\n}\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try { module.exports = interact }\n  catch {}\n}\n\n(interact as any).default = interact\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs/index'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try { module.exports = interact }\n  catch {}\n}\n\n(interact as any).default = interact\n","\nreturn _$index_86;\n\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}