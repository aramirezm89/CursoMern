{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification, Space } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { loginApi } from \"../../api/user\";\nimport { emailValidation, minLengthValidation } from \"../../utils/formValidation\";\nimport \"./RegisterForm.scss\";\nexport default function RegisterForm() {\n  const [input, setInput] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privatePolicy: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privatePolicy: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privatePolicy\") {\n      setInput({ ...input,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setInput({ ...input,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const inputValidation = e => {\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  const register = () => {\n    console.log(formValid);\n    const {\n      email,\n      password,\n      repeatPassword,\n      privatePolicy\n    } = input;\n    const emailVal = email;\n    const passwordVal = password;\n    const repeatPasswordVal = repeatPassword;\n    const privatePolicyVal = privatePolicy;\n\n    if (!emailVal || !passwordVal || !repeatPasswordVal || !privatePolicyVal) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios\"\n      });\n    } else {\n      if (passwordVal != repeatPasswordVal) {\n        notification[\"error\"]({\n          message: \"contrase√±as incorrectas\"\n        });\n      } else {\n        notification[\"success\"]({\n          message: \"Cuenta creada con exito\"\n        });\n        const result = loginApi(input);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"register-form\",\n    onFinish: register,\n    onChange: changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Nombre\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }),\n    value: input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    placeholder: \"Apellido\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }),\n    value: input.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"repeatPassword\",\n    placeholder: \"Repita su contrase\\xF1a\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.repeatPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"privatePolicy\",\n    checked: input.privatePolicy,\n    onChange: inputValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"He leido y acepto la politica de privacidad.\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"horizontal\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"register-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Crear cuenta\"))));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","Space","UserOutlined","LockOutlined","MailOutlined","loginApi","emailValidation","minLengthValidation","RegisterForm","input","setInput","name","email","password","repeatPassword","privatePolicy","formValid","setFormValid","changeForm","e","target","checked","value","inputValidation","type","register","console","log","emailVal","passwordVal","repeatPasswordVal","privatePolicyVal","message","result","color","lastName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { loginApi } from \"../../api/user\";\r\nimport {\r\n  emailValidation,\r\n  minLengthValidation,\r\n} from \"../../utils/formValidation\";\r\n\r\nimport \"./RegisterForm.scss\";\r\n\r\nexport default function RegisterForm() {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    privatePolicy: false,\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    email: false,\r\n    password: false,\r\n    repeatPassword: false,\r\n    privatePolicy: false,\r\n  });\r\n\r\n  const changeForm = (e) => {\r\n    if (e.target.name === \"privatePolicy\") {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.checked,\r\n      });\r\n    } else {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const inputValidation = (e) => {\r\n    const { type, name } = e.target;\r\n    if (type === \"email\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: emailValidation(e.target),\r\n      });\r\n    }\r\n\r\n    if (type === \"password\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: minLengthValidation(e.target, 6),\r\n      });\r\n    }\r\n\r\n    if (type === \"checkbox\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: e.target.checked,\r\n      });\r\n    }\r\n  };\r\n\r\n  const register = () => {\r\n    console.log(formValid);\r\n    const { email, password, repeatPassword, privatePolicy } = input;\r\n    const emailVal = email;\r\n    const passwordVal = password;\r\n    const repeatPasswordVal = repeatPassword;\r\n    const privatePolicyVal = privatePolicy;\r\n    if (!emailVal || !passwordVal || !repeatPasswordVal || !privatePolicyVal) {\r\n      notification[\"error\"]({\r\n        message: \"Todos los campos son obligatorios\",\r\n      });\r\n    } else {\r\n      if (passwordVal != repeatPasswordVal) {\r\n        notification[\"error\"]({\r\n          message: \"contrase√±as incorrectas\",\r\n        });\r\n      } else {\r\n        notification[\"success\"]({\r\n          message: \"Cuenta creada con exito\",\r\n        });\r\n\r\n        const result = loginApi(input);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Form className=\"register-form\" onFinish={register} onChange={changeForm}>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nombre\"\r\n          className=\"register-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          value={input.name}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Apellido\"\r\n          className=\"register-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          value={input.lastName}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"register-form-input\"\r\n          prefix={<MailOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.email}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Contrase√±a\"\r\n          className=\"register-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.password}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          placeholder=\"Repita su contrase√±a\"\r\n          className=\"register-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.repeatPassword}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Checkbox\r\n          name=\"privatePolicy\"\r\n          checked={input.privatePolicy}\r\n          onChange={inputValidation}\r\n        >\r\n          He leido y acepto la politica de privacidad.\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Space direction=\"horizontal\" size={20}>\r\n          <Button htmlType=\"submit\" className=\"register-form-button\">\r\n            Crear cuenta\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}