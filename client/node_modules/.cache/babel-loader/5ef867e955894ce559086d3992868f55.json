{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Users\\\\ListUsers\\\\ListUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button } from \"antd\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport EditUserForm from \"../EditUserForm\";\nimport { getAvatarApi } from \"../../../api/user\";\nimport Modal from \"../../../Modal\";\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\";\nimport \".//ListUsers.scss\";\nexport default function ListUsers(props) {\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActive, setViewUsersActive] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => {\n      setViewUsersActive(!viewUsersActive);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, viewUsersActive ? \" Usuarios Activos\" : \" Usuarios Inactivos\")), viewUsersActive ? /*#__PURE__*/React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editando Usuario: ${user.name} ${user.lastName}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditUserForm, {\n      user: user,\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserActive, {\n      user: user,\n      editUser: editUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction UserActive(props) {\n  const {\n    user,\n    editUser\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => console.log(\"Desactiva Usuarios..\"),\n      icon: /*#__PURE__*/React.createElement(StopOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => console.log(\"Elimar Usuario...\"),\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }),\n    title: `\n            ${user.name ? user.name : \"No existe nombre\"}\n            ${user.lastName ? user.lastName : \"No existe Apellido\"}\n        \n            `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserInactive, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  });\n}\n\nfunction UserInactive(props) {\n  const {\n    user\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => console.log(\"Activar Usuario...\"),\n      icon: /*#__PURE__*/React.createElement(CheckOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => console.log(\"Elimar Usuario...\"),\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }),\n    title: `\n                ${user.name ? user.name : \"No existe nombre\"}\n                ${user.lastName ? user.lastName : \"No existe Apellido\"}\n                \n                `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","EditUserForm","getAvatarApi","Modal","NoAvatar","ListUsers","props","usersActive","usersInactive","setReloadUsers","viewUsersActive","setViewUsersActive","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","UsersActive","editUser","user","name","lastName","UserActive","avatar","setAvatar","then","response","console","log","email","UsersInactive","UserInactive"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Switch,List,Avatar,Button} from \"antd\";\r\nimport {EditOutlined,StopOutlined,DeleteOutlined,CheckOutlined  } from \"@ant-design/icons\";\r\nimport EditUserForm from \"../EditUserForm\"\r\nimport {getAvatarApi} from \"../../../api/user\"\r\nimport Modal from \"../../../Modal\"\r\n\r\n import NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\"\r\n import \".//ListUsers.scss\"\r\n\r\n export default function ListUsers(props){\r\n     const {usersActive, usersInactive,setReloadUsers} =  props;\r\n     const [viewUsersActive, setViewUsersActive] = useState(true)\r\n     const [isVisibleModal, setIsVisibleModal] = useState(false)\r\n     const [modalTitle, setModalTitle] = useState(\"\")\r\n     const [modalContent, setModalContent] = useState(null)\r\n    \r\n     return(\r\n        \r\n         <div className=\"list-users\">\r\n             <div className=\"list-users-switch\">\r\n                <Switch defaultChecked onChange={()=>{\r\n                    setViewUsersActive(!viewUsersActive)\r\n                }}\r\n                />\r\n                <span>\r\n                    {viewUsersActive ? \" Usuarios Activos\" : \" Usuarios Inactivos\"}\r\n                </span>\r\n             </div>\r\n            {viewUsersActive ?(\r\n                 <UsersActive \r\n                 usersActive={usersActive} \r\n                 setIsVisibleModal={setIsVisibleModal} \r\n                 setModalTitle={setModalTitle}\r\n                 setModalContent={setModalContent}\r\n                 />\r\n                  ):(\r\n                 <UsersInactive usersInactive={usersInactive}/>\r\n                  ) }\r\n            \r\n            <Modal  title={modalTitle} isVisible={isVisibleModal} setIsVisible={setIsVisibleModal} >\r\n                {modalContent}\r\n            </Modal>\r\n\r\n         </div>\r\n     )\r\n }\r\n\r\n function UsersActive(props){\r\n     const {usersActive,setIsVisibleModal,setModalTitle,setModalContent} = props;\r\n     \r\n     const editUser = user =>{\r\n         setIsVisibleModal(true)\r\n         setModalTitle(`Editando Usuario: ${user.name} ${user.lastName}`);\r\n         setModalContent(<EditUserForm user={user} setIsVisibleModal={setIsVisibleModal} setReloadUsers={setReloadUsers}/>);\r\n     }\r\n      \r\n\r\n   \r\n     return (\r\n         <List \r\n         className=\"users-active\"\r\n         itemLayout=\"horizontal\"\r\n         dataSource={usersActive}\r\n         renderItem={user => <UserActive user={user} editUser={editUser}/>}\r\n         />\r\n     )\r\n }\r\n\r\n\r\n function UserActive(props){\r\n  const { user, editUser} = props;\r\n  \r\n  const [avatar, setAvatar] = useState(null);\r\n  \r\n  useEffect(()=>{\r\n     if (user.avatar){\r\n         getAvatarApi(user.avatar).then(response =>{\r\n             setAvatar(response)\r\n         })\r\n     }else{\r\n         setAvatar(null);\r\n     }\r\n  },[user])\r\n\r\n  return(\r\n        <List.Item\r\n                \r\n        actions={[\r\n            <Button\r\n            type=\"primary\"\r\n                onClick={ () => editUser(user)}\r\n                icon={<EditOutlined/>}\r\n            />,\r\n\r\n            <Button\r\n                type=\"danger\"\r\n                onClick={()=> console.log(\"Desactiva Usuarios..\")}\r\n                icon={<StopOutlined/>}\r\n            />,\r\n            <Button\r\n            type=\"danger\"\r\n            onClick={()=>console.log(\"Elimar Usuario...\")}\r\n            icon={<DeleteOutlined/>}\r\n            />\r\n\r\n        \r\n            \r\n        ]}\r\n    \r\n    >\r\n        \r\n        <List.Item.Meta\r\n            avatar={<Avatar src={avatar ? avatar : NoAvatar}/>}\r\n            title={`\r\n            ${user.name ? user.name : \"No existe nombre\"}\r\n            ${user.lastName ? user.lastName : \"No existe Apellido\"}\r\n        \r\n            `  \r\n            }\r\n            description={user.email}\r\n            \r\n        />\r\n    </List.Item>\r\n    )\r\n    }\r\n\r\n    function UsersInactive(props){\r\n        const {usersInactive} = props\r\n        return ( \r\n            <List \r\n            className=\"users-active\"\r\n            itemLayout=\"horizontal\"\r\n            dataSource={usersInactive}\r\n            renderItem={user => <UserInactive user={user}/>}\r\n            />\r\n        )\r\n}\r\n\r\n    function UserInactive (props){\r\n        const {user} = props;\r\n        const [avatar, setAvatar] = useState(null);\r\n  \r\n        useEffect(()=>{\r\n           if (user.avatar){\r\n               getAvatarApi(user.avatar).then(response =>{\r\n                   setAvatar(response)\r\n               })\r\n           }else{\r\n               setAvatar(null);\r\n           }\r\n        },[user])\r\n        \r\n        return(\r\n            <List.Item\r\n                \r\n            actions={[\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={()=> console.log(\"Activar Usuario...\")}\r\n                    icon={<CheckOutlined/>}\r\n                />,\r\n\r\n                \r\n                <Button\r\n                type=\"danger\"\r\n                onClick={()=>console.log(\"Elimar Usuario...\")}\r\n                icon={<DeleteOutlined/>}\r\n                />\r\n\r\n                \r\n                \r\n            ]}\r\n            \r\n            >\r\n            \r\n                <List.Item.Meta\r\n                avatar={<Avatar src={avatar ? avatar : NoAvatar}/>}\r\n                title={`\r\n                ${user.name ? user.name : \"No existe nombre\"}\r\n                ${user.lastName ? user.lastName : \"No existe Apellido\"}\r\n                \r\n                `  \r\n                }\r\n                description={user.email}\r\n                />\r\n            </List.Item>\r\n        )\r\n    }"]},"metadata":{},"sourceType":"module"}