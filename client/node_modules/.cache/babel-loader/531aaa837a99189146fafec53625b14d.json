{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Admin\\\\Courses\\\\CoursesList\\\\CoursesList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Button, Modal as ModalAntd, notification } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport DragSortableList from \"react-drag-sortable\";\nimport Modal from \"../../../../Modal\";\nimport { getCourseDataUdemyApi } from \"../../../../api/course\";\nimport \"./CoursesList.scss\";\nconst {\n  confirm\n} = ModalAntd;\nexport default function CoursesList(props) {\n  const {\n    courses,\n    setReloadCourses\n  } = props;\n  const [listCourses, setListCourses] = useState([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  const onSort = (sortedList, dropEvent) => {\n    console.log(sortedList);\n  };\n\n  const deleteCourse = courses => {\n    console.log(courses);\n  };\n\n  useEffect(() => {\n    const listCoursesArray = [];\n    courses.forEach(courses => {\n      listCoursesArray.push({\n        content: /*#__PURE__*/React.createElement(Course, {\n          courses: courses,\n          deleteCourse: deleteCourse,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        })\n      });\n    });\n    setListCourses(listCoursesArray);\n  }, [courses]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courses-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courses-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => console.log(\"Creando curso...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Nuevo curso\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courses-list-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, listCourses.length === 0 && /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"No tines cursos creados.\"), /*#__PURE__*/React.createElement(DragSortableList, {\n    items: listCourses,\n    onSort: onSort,\n    type: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction Course(props) {\n  const {\n    courses,\n    deleteCourse\n  } = props;\n  const [courseData, setCourseData] = useState(null);\n  useEffect(() => {\n    getCourseDataUdemyApi(courses.idCourse).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: `EL curso con el id ${courses.idCourse} no se ha encontrado.`\n        });\n      }\n\n      setCourseData(response.data);\n    });\n  }, [courses]);\n\n  if (!courseData) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => console.log(\"Editar Curso.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: deleteCourse(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: courseData.image_480x270,\n    alt: courseData.title,\n    style: {\n      width: \"100px\",\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List.Item.Meta, {\n    title: `${courseData.title} | ID:${courses.idCourse}`,\n    description: courseData.headline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/Courses/CoursesList/CoursesList.js"],"names":["React","useState","useEffect","List","Button","Modal","ModalAntd","notification","EditOutlined","DeleteOutlined","DragSortableList","getCourseDataUdemyApi","confirm","CoursesList","props","courses","setReloadCourses","listCourses","setListCourses","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","onSort","sortedList","dropEvent","console","log","deleteCourse","listCoursesArray","forEach","push","content","length","textAlign","margin","Course","courseData","setCourseData","idCourse","then","response","code","message","data","image_480x270","title","width","marginRight","headline"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {List,Button,Modal as ModalAntd,notification} from \"antd\";\r\nimport {EditOutlined,DeleteOutlined} from \"@ant-design/icons\"\r\nimport DragSortableList from \"react-drag-sortable\";\r\nimport Modal from \"../../../../Modal\"\r\nimport {getCourseDataUdemyApi} from \"../../../../api/course\"\r\n\r\nimport \"./CoursesList.scss\";\r\n\r\nconst {confirm} = ModalAntd;\r\n\r\nexport default function CoursesList(props) {\r\n    const {courses,setReloadCourses} = props;\r\n    const [listCourses, setListCourses] = useState([]);\r\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [modalContent, setModalContent] = useState(null);\r\n   \r\n    const onSort= (sortedList, dropEvent) =>{\r\n        console.log(sortedList);\r\n    }\r\n\r\n    const deleteCourse = courses =>{\r\n        console.log(courses)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listCoursesArray = [];\r\n        courses.forEach(courses =>{\r\n            listCoursesArray.push({\r\n                content:(\r\n                    <Course courses={courses} deleteCourse={deleteCourse}/>\r\n                )\r\n            });\r\n            \r\n        })\r\n        setListCourses(listCoursesArray);\r\n    }, [courses]);\r\n\r\n    return (\r\n        <div className=\"courses-list\">\r\n            <div className=\"courses-list-header\">\r\n                <Button \r\n                type=\"primary\" \r\n                onClick={() => console.log(\"Creando curso...\")}\r\n                >\r\n                    Nuevo curso\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"courses-list-items\">\r\n                {listCourses.length === 0 &&(\r\n                    <h2 style={{ textAlign:\"center\", margin:0}}>\r\n                        No tines cursos creados.\r\n                    </h2>\r\n                )}\r\n\r\n                <DragSortableList items={listCourses} onSort={onSort} type=\"vertical\"/>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nfunction Course(props){\r\n    const {courses, deleteCourse} = props;\r\n    const [courseData, setCourseData] = useState(null);\r\n\r\n    useEffect(() => {\r\n      getCourseDataUdemyApi(courses.idCourse).then(response =>{\r\n          if(response.code !==200){\r\n              notification[\"warning\"]({\r\n                  message:`EL curso con el id ${courses.idCourse} no se ha encontrado.`\r\n              })\r\n          }\r\n\r\n          setCourseData(response.data);\r\n      })\r\n    }, [courses])\r\n\r\n    if(!courseData){\r\n        return null;\r\n    }\r\n  return(\r\n      <List.Item\r\n        actions={[\r\n            <Button \r\n             type=\"primary\"\r\n             onClick={() => console.log(\"Editar Curso.\")}\r\n            >\r\n              <EditOutlined/>\r\n            </Button>,\r\n              <Button \r\n              type=\"danger\"\r\n              onClick={deleteCourse()}\r\n             >\r\n               <DeleteOutlined/>\r\n             </Button>\r\n\r\n        ]}\r\n      >\r\n          <img \r\n          src={courseData.image_480x270} \r\n          alt={courseData.title} \r\n          style={{width:\"100px\", marginRight:\"20px\"}}\r\n          />\r\n          <List.Item.Meta \r\n            title={`${courseData.title} | ID:${courses.idCourse}`}\r\n            description={courseData.headline}\r\n          />\r\n\r\n      </List.Item>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}