{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Web\\\\Blog\\\\PostInfo\\\\PostInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Spin, notification, message } from \"antd\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport { getPostApi } from \"../../../../api/post\";\nexport default function PostInfo(props) {\n  const {\n    url\n  } = props;\n  const [postInfo, setPostInfo] = useState(null);\n  useEffect(() => {\n    getPostApi(url).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: response.message\n        });\n      } else {\n        setPostInfo(response.post);\n      }\n    }).catch(() => {\n      notification[\"error\"]({\n        message: \"Error del servidor\"\n      });\n    });\n  }, [url]);\n  console.log(postInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Estamos en PostInfo....\");\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Web/Blog/PostInfo/PostInfo.js"],"names":["React","useState","useEffect","Spin","notification","message","moment","getPostApi","PostInfo","props","url","postInfo","setPostInfo","then","response","code","post","catch","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,EAAaC,YAAb,EAA2BC,OAA3B,QAAyC,MAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAQD,KAAd;AACA,QAAM,CAACE,QAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,IAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,UAAU,CAACG,GAAD,CAAV,CAAgBG,IAAhB,CAAqBC,QAAQ,IAAG;AAC5B,UAAGA,QAAQ,CAACC,IAAT,KAAkB,GAArB,EAAyB;AACrBX,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACpBC,UAAAA,OAAO,EAAGS,QAAQ,CAACT;AADC,SAAxB;AAGH,OAJD,MAIK;AACDO,QAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;AACH;AACJ,KARD,EAQGC,KARH,CAQS,MAAK;AACVb,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClBC,QAAAA,OAAO,EAAC;AADU,OAAtB;AAGH,KAZD;AAaH,GAdQ,EAcP,CAACK,GAAD,CAdO,CAAT;AAgBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAKH","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {Spin,notification, message} from \"antd\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport {getPostApi} from \"../../../../api/post\"\r\n\r\nexport default function PostInfo(props) {\r\n    const {url} = props;\r\n    const [postInfo,setPostInfo] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        getPostApi(url).then(response =>{\r\n            if(response.code !== 200){\r\n                notification[\"warning\"]({\r\n                    message : response.message\r\n                })\r\n            }else{\r\n                setPostInfo(response.post)\r\n            }\r\n        }).catch(() =>{\r\n            notification[\"error\"]({\r\n                message:\"Error del servidor\"\r\n            })\r\n        })\r\n    },[url])\r\n\r\n    console.log(postInfo)\r\n    return (\r\n        <div>\r\n            Estamos en PostInfo....\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}