{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from\"react-router-dom\";import Helmet from\"react-helmet\";import{Spin,List,notification,message}from\"antd\";import moment from\"moment\";import queryString from\"query-string\";import Pagination from\"../../../Pagination\";import{getPostsApi}from\"../../../../api/post\";import\"moment/locale/es\";import\"./PostListWeb.scss\";export default function PostListWeb(props){var location=props.location,history=props.history;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPost=_useState2[1];var _queryString$parse=queryString.parse(location.search),_queryString$parse$pa=_queryString$parse.page,page=_queryString$parse$pa===void 0?1:_queryString$parse$pa;useEffect(function(){getPostsApi(page,12).then(function(response){if(response.code!==200){notification[\"warning\"]({message:response.message});}else{setPost(response.posts);}}).catch(function(){notification[\"error\"]({message:\"Error del servidor.\"});});},[page]);if(!posts){return/*#__PURE__*/React.createElement(Spin,{tip:\"Cargando\",style:{width:\"100%\",padding:\"200px 0\"}});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,\"Blog de programaci\\xF3n | Antonio Ramirez Monsalve\"),/*#__PURE__*/React.createElement(\"meta\",{name:\"description\",content:\"PostsList | Web de programaci\\xF3n de Antonio Ramirez Monsalve\",\"data-react-helmet\":\"true\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"posts-list-web\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Blog\"),/*#__PURE__*/React.createElement(List,{dataSource:posts.docs,renderItem:function renderItem(post){return/*#__PURE__*/React.createElement(Post,{post:post});}}),/*#__PURE__*/React.createElement(Pagination,{posts:posts,location:location,history:history})));}function Post(props){var post=props.post;var day=moment(post.date).format(\"DD\");var month=moment(post.date).format(\"MMM\");return/*#__PURE__*/React.createElement(List.Item,{className:\"post\"},/*#__PURE__*/React.createElement(\"div\",{className:\"post-date\"},/*#__PURE__*/React.createElement(\"span\",null,day),/*#__PURE__*/React.createElement(\"span\",null,month)),/*#__PURE__*/React.createElement(Link,{to:\"blog/\".concat(post.url)},post.title),/*#__PURE__*/React.createElement(List.Item.Meta,{title:\"\"}));}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Web/Blog/PostListWeb/PostListWeb.js"],"names":["React","useState","useEffect","Link","Helmet","Spin","List","notification","message","moment","queryString","Pagination","getPostsApi","PostListWeb","props","location","history","posts","setPost","parse","search","page","then","response","code","catch","width","padding","docs","post","Post","day","date","format","month","url","title"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\nimport {Spin,List,notification, message} from \"antd\";\r\nimport moment from \"moment\";\r\nimport queryString from \"query-string\";\r\nimport Pagination from \"../../../Pagination\";\r\nimport {getPostsApi} from \"../../../../api/post\";\r\nimport \"moment/locale/es\";\r\n\r\nimport \"./PostListWeb.scss\";\r\n\r\nexport default function PostListWeb(props) {\r\n    const {location,history} = props;\r\n    const [posts, setPost] = useState(null);\r\n    const {page =1} = queryString.parse(location.search);\r\n    \r\n    useEffect(() =>{\r\n        getPostsApi(page,12).then(response =>{\r\n            if(response.code !==200){\r\n                notification[\"warning\"]({\r\n                    message:response.message\r\n                })\r\n            }else{\r\n                setPost(response.posts)\r\n            }\r\n        }).catch( () =>{\r\n            notification[\"error\"]({\r\n                message:\"Error del servidor.\"\r\n            })\r\n        })\r\n    },[page])\r\n\r\n        if(!posts){\r\n            return(\r\n                   <Spin tip=\"Cargando\" style={{width:\"100%\", padding:\"200px 0\"}} />\r\n                )\r\n        }\r\n    return (\r\n        <>\r\n          <Helmet>\r\n              <title>Blog de programación | Antonio Ramirez Monsalve</title>\r\n              <meta name=\"description\" \r\n                    content=\"PostsList | Web de programación de Antonio Ramirez Monsalve\" \r\n                    data-react-helmet=\"true\"\r\n               />\r\n          </Helmet>\r\n            <div className=\"posts-list-web\">\r\n                <h1>Blog</h1>\r\n                    <List dataSource={posts.docs}\r\n                        renderItem={post => <Post post={post}/>}\r\n                    />\r\n                    <Pagination \r\n                        posts={posts} \r\n                        location={location}\r\n                        history={history}\r\n                    />\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nfunction Post(props){\r\n    const {post} = props;\r\n    const day = moment(post.date).format(\"DD\");\r\n    const month = moment(post.date).format(\"MMM\")\r\n\r\n\r\n   return(\r\n    <List.Item className=\"post\">\r\n       <div className=\"post-date\">\r\n            <span>{day}</span>\r\n            <span>{month}</span>\r\n       </div>\r\n     \r\n      <Link to={`blog/${post.url}`}>\r\n            {post.title}\r\n      </Link>\r\n      <List.Item.Meta title=\"\" />\r\n      \r\n   </List.Item>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}