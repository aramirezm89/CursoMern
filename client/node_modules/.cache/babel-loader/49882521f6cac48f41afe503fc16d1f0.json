{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Web\\\\Blog\\\\PostListWeb\\\\PostListWeb.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Spin, List, notification, message } from \"antd\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nimport Pagination from \"../../../Pagination\";\nimport { getPostsApi } from \"../../../../api/post\";\nimport \"moment/locale/es\";\nimport \"./PostListWeb.scss\";\nexport default function PostListWeb(props) {\n  const {\n    location,\n    history\n  } = props;\n  const [posts, setPost] = useState({});\n  const {\n    page = 1\n  } = queryString.parse(location.search);\n  useEffect(() => {\n    getPostsApi(page, 12).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: response.message\n        });\n      } else {\n        setPost(response.posts);\n      }\n    }).catch(() => {\n      notification[\"error\"]({\n        message: \"Error del servidor.\"\n      });\n    });\n  }, [page]);\n\n  if (!posts) {\n    return /*#__PURE__*/React.createElement(Spin, {\n      tip: \"Cargando\",\n      style: {\n        width: \"100%\",\n        padding: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts-list-web\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Blog\"), /*#__PURE__*/React.createElement(List, {\n    dataSource: posts.docs,\n    renderItem: post => /*#__PURE__*/React.createElement(Post, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    posts: posts,\n    location: location,\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }));\n\n  function Post(props) {\n    const {\n      post\n    } = props;\n    const day = moment(post.date).format(\"DD\");\n    const month = moment(post.date).format(\"MMM\");\n    return /*#__PURE__*/React.createElement(List.Item, {\n      className: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, day), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, month)), /*#__PURE__*/React.createElement(List.Item.Meta, {\n      title: post.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Web/Blog/PostListWeb/PostListWeb.js"],"names":["React","useState","useEffect","Spin","List","notification","message","moment","queryString","Pagination","getPostsApi","PostListWeb","props","location","history","posts","setPost","page","parse","search","then","response","code","catch","width","padding","docs","post","Post","day","date","format","month","title"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {Spin,List,notification, message} from \"antd\";\r\nimport moment from \"moment\";\r\nimport queryString from \"query-string\";\r\nimport Pagination from \"../../../Pagination\";\r\nimport {getPostsApi} from \"../../../../api/post\";\r\nimport \"moment/locale/es\";\r\n\r\nimport \"./PostListWeb.scss\";\r\n\r\nexport default function PostListWeb(props) {\r\n    const {location,history} = props;\r\n    const [posts, setPost] = useState({});\r\n    const {page =1} = queryString.parse(location.search);\r\n    \r\n    useEffect(() =>{\r\n        getPostsApi(page,12).then(response =>{\r\n            if(response.code !==200){\r\n                notification[\"warning\"]({\r\n                    message:response.message\r\n                })\r\n            }else{\r\n                setPost(response.posts)\r\n            }\r\n        }).catch( () =>{\r\n            notification[\"error\"]({\r\n                message:\"Error del servidor.\"\r\n            })\r\n        })\r\n    },[page])\r\n\r\n        if(!posts){\r\n            return(\r\n                   <Spin tip=\"Cargando\" style={{width:\"100%\", padding:\"200px\"}} />\r\n                )\r\n        }\r\n    return (\r\n        <div className=\"posts-list-web\">\r\n            <h1>Blog</h1>\r\n                 <List dataSource={posts.docs}\r\n                      renderItem={post => <Post post={post}/>}\r\n                 />\r\n                 <Pagination \r\n                    posts={posts} \r\n                    location={location}\r\n                    history={history}\r\n                />\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n    function Post(props){\r\n        const {post} = props;\r\n        const day = moment(post.date).format(\"DD\");\r\n        const month = moment(post.date).format(\"MMM\")\r\n\r\n\r\n       return(\r\n        <List.Item className=\"post\">\r\n           <div className=\"post-date\">\r\n                <span>{day}</span>\r\n                <span>{month}</span>\r\n           </div>\r\n        <List.Item.Meta \r\n            title={post.title}\r\n        />\r\n    </List.Item>\r\n       )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}