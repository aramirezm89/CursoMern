{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Admin\\\\Blog\\\\AddEditPostForm\\\\AddEditPostForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Input, Button, DatePicker, notification, ConfigProvider } from \"antd\";\nimport { FontSizeOutlined, LinkOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport 'moment-timezone';\nimport locale from 'antd/es/date-picker/locale/es_ES';\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport { addPostApi } from \"../../../../api/post\";\nimport \"./AddEditPostForm.scss\";\nexport default function AddEditPostForm(props) {\n  const {\n    setIsvibleModal,\n    setReloadPosts,\n    post\n  } = props;\n  const [postData, setPostData] = useState({});\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    } else {\n      setPostData({});\n    }\n  }, [post]);\n\n  const processPost = () => {\n    if (post) {\n      console.log(\"actualizando post.\");\n      console.log(postData);\n    } else {\n      console.log(\"creando post.\");\n      console.log(postData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-edit-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddEditForm, {\n    postData: postData,\n    setPostData: setPostData,\n    post: post,\n    processPost: processPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction AddEditForm(props) {\n  const {\n    postData,\n    setPostData,\n    post,\n    processPost\n  } = props;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"add-edit-post-form\",\n    onFinish: processPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontSizeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }),\n    placeholder: \"Titulo\",\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LinkOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }),\n    placeholder: \"url\",\n    value: postData.url,\n    onChange: e => setPostData({ ...postData,\n      url: transformTextToUrl(e.target.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    locale: locale,\n    style: {\n      width: \"100%\"\n    },\n    format: \"DD/MM/YY HH:mm:ss\",\n    showTime: {\n      defaultValue: moment('00:00:00', 'HH:mm:ss')\n    },\n    placeholder: \"Fecha depublicaci\\xF3n\",\n    value: postData.date && moment(postData.date),\n    onChange: (e, value) => setPostData({ ...postData,\n      date: moment(value, \"DD/MM/YY HH:mm:ss\").toISOString()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Editor, {\n    value: postData.description ? postData.description : null,\n    init: {\n      height: 400,\n      menubar: true,\n      plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n      toolbar: 'undo redo | formatselect | ' + 'bold italic backcolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n    },\n    onChange: e => setPostData({ ...postData,\n      description: e.target.getContent()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, post ? \"Actualizar post\" : \"Crear post\"));\n}\n\nfunction transformTextToUrl(text) {\n  const url = text.replace(\" \", \"-\");\n  return url.toLowerCase();\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js"],"names":["React","useState","useEffect","Row","Col","Form","Input","Button","DatePicker","notification","ConfigProvider","FontSizeOutlined","LinkOutlined","moment","locale","Editor","getAccessTokenApi","addPostApi","AddEditPostForm","props","setIsvibleModal","setReloadPosts","post","postData","setPostData","processPost","console","log","AddEditForm","title","e","target","value","url","transformTextToUrl","width","defaultValue","date","toISOString","description","height","menubar","plugins","toolbar","content_style","getContent","text","replace","toLowerCase"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Row,Col,Form,Input,Button,DatePicker,notification, ConfigProvider} from \"antd\";\r\nimport {FontSizeOutlined,LinkOutlined} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport 'moment-timezone';\r\nimport locale from 'antd/es/date-picker/locale/es_ES';\r\nimport {Editor} from \"@tinymce/tinymce-react\"\r\nimport {getAccessTokenApi} from \"../../../../api/auth\";\r\nimport {addPostApi} from \"../../../../api/post\"\r\nimport \"./AddEditPostForm.scss\";\r\nexport default function AddEditPostForm(props) {\r\n    const {setIsvibleModal,setReloadPosts,post} = props;\r\n    const [postData,setPostData] = useState({});\r\n\r\n    useEffect(() =>{\r\n        if(post){\r\n            setPostData(post);\r\n        }else{\r\n            setPostData({});\r\n        }\r\n    },[post])\r\n\r\n    const processPost = () =>{\r\n        if(post){\r\n            console.log(\"actualizando post.\")\r\n            console.log(postData)\r\n        }else{\r\n            console.log(\"creando post.\")\r\n            console.log(postData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-edit-post-form\">\r\n            <AddEditForm postData={postData} setPostData={setPostData} post={post} processPost={processPost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddEditForm(props){\r\n    const {postData,setPostData,post,processPost} = props;\r\n\r\n    return(\r\n            <Form\r\n             className=\"add-edit-post-form\"\r\n             onFinish={processPost}\r\n             >\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                       <Form.Item>\r\n                       <Input \r\n                            prefix={<FontSizeOutlined />}\r\n                            placeholder=\"Titulo\"\r\n                            value={postData.title}\r\n                            onChange={e => setPostData({...postData, title:e.target.value})}\r\n                        />\r\n                       </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                       <Form.Item>\r\n                       <Input \r\n                            prefix={<LinkOutlined />}\r\n                            placeholder=\"url\"\r\n                            value={postData.url}\r\n                            onChange={e => setPostData({...postData, url:transformTextToUrl( e.target.value)})}\r\n                        />\r\n                       </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                       <Form.Item>\r\n                            <DatePicker\r\n                                locale={locale}\r\n                                style={{width:\"100%\"}}\r\n                                format=\"DD/MM/YY HH:mm:ss\"\r\n                                showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss'), }}\r\n                                placeholder=\"Fecha depublicación\"\r\n                                value={postData.date && moment(postData.date)}\r\n                                 onChange={(e,value) => \r\n                                    setPostData({\r\n                                        ...postData, \r\n                                        date: moment(value,\"DD/MM/YY HH:mm:ss\").toISOString()\r\n                                    })\r\n                                }\r\n                           />\r\n                       </Form.Item>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n\r\n                <Editor\r\n                   \r\n                    value={postData.description ? postData.description : null}\r\n                    init={{\r\n                    height: 400,\r\n                    menubar: true,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar: 'undo redo | formatselect | ' +\r\n                    'bold italic backcolor | alignleft aligncenter ' +\r\n                    'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                    'removeformat | help',\r\n                     content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                    }}\r\n\r\n                    onChange={e => setPostData({...postData,description: e.target.getContent()})}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"btn-submit\" \r\n                >\r\n                    {post ? \"Actualizar post\" : \"Crear post\"}\r\n                </Button>\r\n            </Form>\r\n      \r\n    )\r\n}\r\n\r\nfunction transformTextToUrl(text){\r\n    const url = text.replace(\" \",\"-\")\r\n    return url.toLowerCase();\r\n}"]},"metadata":{},"sourceType":"module"}