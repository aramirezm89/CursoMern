{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Admin\\\\MenuWeb\\\\AddMenuWebForm\\\\AddMenuWebForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Select, notification, Icon } from \"antd\";\nimport { FontSizeOutlined } from \"@ant-design/icons\";\nimport { addMenuApi } from \"../../../../api/menu\";\nimport { getAccessTokenApi } from \"../../../../api/auth\";\nimport \"./AddMenuWebForm.scss\";\nimport { formatTimeStr } from \"antd/lib/statistic/utils\";\nexport default function AddMenuWebForm(props) {\n  const {\n    setIsVisibleModal,\n    setReloadMenuWeb\n  } = props;\n  const [menuWebData, setMenuWebData] = useState({});\n\n  const addMenu = event => {\n    let finalData = {\n      title: menuWebData.title,\n      url: (menuWebData.http ? menuWebData.http : \"http://\") + menuWebData.url\n    };\n\n    if (!finalData.title || !finalData.url || !menuWebData) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      const accesToken = getAccessTokenApi();\n      finalData.active = false;\n      finalData.order = 1000;\n      addMenuApi(accesToken, finalData).then(response => {\n        notification[\"success\"]({\n          message: response\n        });\n        setIsVisibleModal(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-menu-web-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddForm, {\n    menuWebData: menuWebData,\n    setMenuWebData: setMenuWebData,\n    addMenu: addMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }));\n}\n\nfunction AddForm(props) {\n  const {\n    menuWebData,\n    setMenuWebData,\n    addMenu\n  } = props;\n  const {\n    Option\n  } = Select;\n  const selectBefore = /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"http://\",\n    style: {\n      widht: 90\n    },\n    onChange: e => setMenuWebData({ ...menuWebData,\n      http: e\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"http://\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"http://\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"https://\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"https://\"));\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"form-add\",\n    onFinish: addMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontSizeOutlined, {\n      style: {\n        color: \"rgba(0,0,0,0.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }),\n    placeholder: \"Titulo\",\n    value: menuWebData.title,\n    onChange: e => setMenuWebData({ ...menuWebData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    addonBefore: selectBefore,\n    placeholder: \"URL\",\n    value: menuWebData.url,\n    onChange: e => setMenuWebData({ ...menuWebData,\n      url: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Crear Menu\")));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/MenuWeb/AddMenuWebForm/AddMenuWebForm.js"],"names":["React","useState","Form","Input","Button","Select","notification","Icon","FontSizeOutlined","addMenuApi","getAccessTokenApi","formatTimeStr","AddMenuWebForm","props","setIsVisibleModal","setReloadMenuWeb","menuWebData","setMenuWebData","addMenu","event","finalData","title","url","http","message","accesToken","active","order","then","response","AddForm","Option","selectBefore","widht","e","color","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form,Input,Button,Select,notification,Icon} from \"antd\";\r\nimport  {FontSizeOutlined}  from \"@ant-design/icons\";\r\nimport {addMenuApi} from \"../../../../api/menu\";\r\nimport {getAccessTokenApi} from \"../../../../api/auth\"\r\n\r\nimport \"./AddMenuWebForm.scss\";\r\nimport { formatTimeStr } from \"antd/lib/statistic/utils\";\r\n\r\nexport default function AddMenuWebForm(props){\r\n\r\n  const{setIsVisibleModal, setReloadMenuWeb} = props;\r\n  const [menuWebData, setMenuWebData] = useState({});\r\n\r\n  const addMenu = event =>{\r\n   \r\n   let finalData = {\r\n     title: menuWebData.title,\r\n     url: (menuWebData.http ? menuWebData.http : \"http://\") + menuWebData.url\r\n   }\r\n\r\n   if (!finalData.title || !finalData.url || !menuWebData){\r\n     notification[\"error\"]({\r\n       message:\"Todos los campos son obligatorios.\"\r\n     })\r\n   }else{\r\n     const accesToken = getAccessTokenApi();\r\n     finalData.active = false;\r\n     finalData.order = 1000;\r\n\r\n     addMenuApi(accesToken,finalData).then(response =>{\r\n       notification[\"success\"]({\r\n         message: response\r\n       });\r\n       setIsVisibleModal(false);\r\n     })\r\n   }\r\n  }\r\n\r\n    return(\r\n        <div className=\"add-menu-web-form\">\r\n          <AddForm\r\n            menuWebData={menuWebData}\r\n            setMenuWebData={setMenuWebData}\r\n            addMenu= {addMenu}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddForm(props){\r\n    const {menuWebData,setMenuWebData,addMenu} = props;\r\n    const {Option} = Select;\r\n    const selectBefore = (\r\n        <Select\r\n          defaultValue=\"http://\"\r\n          style={{widht:90}}\r\n          onChange={e => setMenuWebData({...menuWebData,http:e})}\r\n        >\r\n            <Option value= \"http://\">http://</Option>\r\n            <Option value= \"https://\">https://</Option>\r\n        </Select>\r\n    )\r\n    return(\r\n      <Form className=\"form-add\" onFinish={addMenu}>\r\n          <Form.Item>\r\n              <Input\r\n                prefix={<FontSizeOutlined style={{color: \"rgba(0,0,0,0.25)\"}} />}\r\n                placeholder=\"Titulo\"\r\n                value={menuWebData.title}\r\n                onChange={e => setMenuWebData({...menuWebData,title:e.target.value})}\r\n              />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Input\r\n              addonBefore={selectBefore}\r\n              placeholder=\"URL\"\r\n              value={menuWebData.url}\r\n                onChange={e => setMenuWebData({...menuWebData,url:e.target.value})}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"btn-submit\"\r\n              >\r\n                  Crear Menu\r\n              </Button>\r\n          </Form.Item>\r\n      </Form>\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}