{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,Col,Form,Input,Button,DatePicker,notification,ConfigProvider}from\"antd\";import{FontSizeOutlined,LinkOutlined}from\"@ant-design/icons\";import moment from\"moment\";import'moment-timezone';import locale from'antd/es/date-picker/locale/es_ES';import{Editor}from\"@tinymce/tinymce-react\";import{getAccessTokenApi}from\"../../../../api/auth\";import{addPostApi,editPostAPi}from\"../../../../api/post\";import\"./AddEditPostForm.scss\";export default function AddEditPostForm(props){var setIsVisibleModal=props.setIsVisibleModal,setReloadPosts=props.setReloadPosts,post=props.post;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];useEffect(function(){if(post){setPostData(post);}else{setPostData({});}},[post]);var processPost=function processPost(){var title=postData.title,url=postData.url,description=postData.description,date=postData.date;if(!title||!url||!description||!date){notification[\"error\"]({message:\"Todos los campos son obligatiorios.\"});}else{if(post){editPost();}else{addPost();}}};var addPost=function addPost(){var accesToken=getAccessTokenApi();addPostApi(accesToken,postData).then(function(response){var typeNotification=response.code===200?\"success\":\"warning\";notification[typeNotification]({message:response.message});setIsVisibleModal(false);setReloadPosts(true);setPostData({});}).catch(function(){notification[\"error\"]({message:\"Error del servidor\"});});};var editPost=function editPost(){var accessToken=getAccessTokenApi();editPostAPi(accessToken,post._id,postData).then(function(response){var typeNotification=response.code===200?\"success\":\"warning\";notification[typeNotification]({message:response.message});setIsVisibleModal(false);setReloadPosts(true);setPostData({});}).catch(function(){notification[\"error\"]({message:\"Error del servidor\"});});};return/*#__PURE__*/React.createElement(\"div\",{className:\"add-edit-post-form\"},/*#__PURE__*/React.createElement(AddEditForm,{postData:postData,setPostData:setPostData,post:post,processPost:processPost}));}function AddEditForm(props){var postData=props.postData,setPostData=props.setPostData,post=props.post,processPost=props.processPost;return/*#__PURE__*/React.createElement(Form,{className:\"add-edit-post-form\",onFinish:processPost},/*#__PURE__*/React.createElement(Row,{gutter:24},/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(FontSizeOutlined,null),placeholder:\"Titulo\",value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread({},postData,{title:e.target.value}));}}))),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(LinkOutlined,null),placeholder:\"url\",value:postData.url,onChange:function onChange(e){return setPostData(_objectSpread({},postData,{url:transformTextToUrl(e.target.value)}));}}))),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(DatePicker,{locale:locale,style:{width:\"100%\"},format:\"DD/MM/YY HH:mm:ss\",showTime:{defaultValue:moment('00:00:00','HH:mm:ss')},placeholder:\"Fecha depublicaci\\xF3n\",value:postData.date&&moment(postData.date),onChange:function onChange(e,value){return setPostData(_objectSpread({},postData,{date:moment(value,\"DD/MM/YY HH:mm:ss\").toISOString()}));}})))),/*#__PURE__*/React.createElement(Editor,{initialValue:postData.description?postData.description:\"\",init:{height:400,menubar:true,plugins:['advlist autolink lists link image charmap print preview anchor','searchreplace visualblocks code fullscreen','insertdatetime media table paste code help wordcount'],toolbar:'undo redo | formatselect | '+'bold italic backcolor | alignleft aligncenter '+'alignright alignjustify | bullist numlist outdent indent | '+'removeformat | help'},onBlur:function onBlur(e){return setPostData(_objectSpread({},postData,{description:e.target.getContent()}));}}),/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"btn-submit\"},post?\"Actualizar post\":\"Crear post\"));}function transformTextToUrl(text){var url=text.replace(\" \",\"-\");return url.toLowerCase();}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js"],"names":["React","useState","useEffect","Row","Col","Form","Input","Button","DatePicker","notification","ConfigProvider","FontSizeOutlined","LinkOutlined","moment","locale","Editor","getAccessTokenApi","addPostApi","editPostAPi","AddEditPostForm","props","setIsVisibleModal","setReloadPosts","post","postData","setPostData","processPost","title","url","description","date","message","editPost","addPost","accesToken","then","response","typeNotification","code","catch","accessToken","_id","AddEditForm","e","target","value","transformTextToUrl","width","defaultValue","toISOString","height","menubar","plugins","toolbar","getContent","text","replace","toLowerCase"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Row,Col,Form,Input,Button,DatePicker,notification, ConfigProvider} from \"antd\";\r\nimport {FontSizeOutlined,LinkOutlined} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport 'moment-timezone';\r\nimport locale from 'antd/es/date-picker/locale/es_ES';\r\nimport {Editor} from \"@tinymce/tinymce-react\"\r\nimport {getAccessTokenApi} from \"../../../../api/auth\";\r\nimport {addPostApi,editPostAPi} from \"../../../../api/post\"\r\nimport \"./AddEditPostForm.scss\";\r\nexport default function AddEditPostForm(props) {\r\n    const {setIsVisibleModal,setReloadPosts,post} = props;\r\n    const [postData,setPostData] = useState({});\r\n\r\n    useEffect(() =>{\r\n        if(post){\r\n            setPostData(post);\r\n        }else{\r\n            setPostData({});\r\n        }\r\n    },[post])\r\n\r\n    const processPost = () =>{\r\n       const {title,url,description,date} = postData ;\r\n\r\n       if(!title||!url||!description||!date){\r\n           notification[\"error\"]({\r\n               message:\"Todos los campos son obligatiorios.\"\r\n           })\r\n       }else{\r\n        if(post){\r\n           editPost()\r\n        }else{\r\n            addPost();\r\n        }\r\n       } \r\n    }\r\n\r\n    const addPost = () =>{\r\n        const accesToken = getAccessTokenApi();\r\n        addPostApi(accesToken,postData).then(response =>{\r\n            const typeNotification = response.code === 200 ? \"success\" : \"warning\";\r\n            notification[typeNotification]({\r\n                message:response.message\r\n            })\r\n            setIsVisibleModal(false);\r\n            setReloadPosts(true);\r\n            setPostData({});\r\n        }).catch(() => {\r\n            notification[\"error\"]({\r\n                message:\"Error del servidor\"\r\n            })\r\n        })\r\n    }\r\n\r\n    const editPost = () =>{\r\n        const accessToken = getAccessTokenApi();\r\n        editPostAPi(accessToken,post._id,postData).then( response =>{\r\n            const typeNotification = response.code === 200 ? \"success\" : \"warning\";\r\n            notification[typeNotification]({\r\n                message: response.message\r\n            })\r\n             setIsVisibleModal(false);\r\n             setReloadPosts(true);\r\n             setPostData({})\r\n\r\n        }).catch(() =>{\r\n            notification[\"error\"]({\r\n                message:\"Error del servidor\"\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-edit-post-form\">\r\n            <AddEditForm postData={postData} setPostData={setPostData} post={post} processPost={processPost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddEditForm(props){\r\n    const {postData,setPostData,post,processPost} = props;\r\n\r\n    return(\r\n            <Form\r\n             className=\"add-edit-post-form\"\r\n             onFinish={processPost}\r\n             >\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                       <Form.Item>\r\n                       <Input \r\n                            prefix={<FontSizeOutlined />}\r\n                            placeholder=\"Titulo\"\r\n                            value={postData.title}\r\n                            onChange={e => setPostData({...postData, title:e.target.value})}\r\n                        />\r\n                       </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                       <Form.Item>\r\n                       <Input \r\n                            prefix={<LinkOutlined />}\r\n                            placeholder=\"url\"\r\n                            value={postData.url}\r\n                            onChange={e => setPostData({...postData, url:transformTextToUrl( e.target.value)})}\r\n                        />\r\n                       </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                       <Form.Item>\r\n                            <DatePicker\r\n                                locale={locale}\r\n                                style={{width:\"100%\"}}\r\n                                format=\"DD/MM/YY HH:mm:ss\"\r\n                                showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss'), }}\r\n                                placeholder=\"Fecha depublicación\"\r\n                                value={postData.date && moment(postData.date)}\r\n                                 onChange={(e,value) => \r\n                                    setPostData({\r\n                                        ...postData, \r\n                                        date: moment(value,\"DD/MM/YY HH:mm:ss\").toISOString()\r\n                                    })\r\n                                }\r\n                           />\r\n                       </Form.Item>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n\r\n                <Editor\r\n                   \r\n                   initialValue={postData.description ? postData.description : \"\"}\r\n                    init={{\r\n                    height: 400,\r\n                    menubar: true,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar: 'undo redo | formatselect | ' +\r\n                    'bold italic backcolor | alignleft aligncenter ' +\r\n                    'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                    'removeformat | help',\r\n                     \r\n                    }}\r\n\r\n                    onBlur={e => setPostData({...postData,description: e.target.getContent()})}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"btn-submit\" \r\n                >\r\n                    {post ? \"Actualizar post\" : \"Crear post\"}\r\n                </Button>\r\n            </Form>\r\n      \r\n    )\r\n}\r\n\r\nfunction transformTextToUrl(text){\r\n    const url = text.replace(\" \",\"-\")\r\n    return url.toLowerCase();\r\n}"]},"metadata":{},"sourceType":"module"}