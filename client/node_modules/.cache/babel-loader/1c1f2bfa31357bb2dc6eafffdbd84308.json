{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification, Space } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { loginApi } from \"../../api/user\";\nimport { emailValidation, minLengthValidation } from \"../../utils/formValidation\";\nimport \"./RegisterForm.scss\";\nexport default function RegisterForm() {\n  const [input, setInput] = useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privatePolicy: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privatePolicy: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privatePolicy\") {\n      setInput({ ...input,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setInput({ ...input,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const inputValidation = e => {\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  const register = async () => {\n    console.log(formValid);\n    const {\n      name,\n      lastName,\n      email,\n      password,\n      repeatPassword,\n      privatePolicy\n    } = input;\n    const nameVal = name;\n    const lastNameVal = lastName;\n    const emailVal = email;\n    const passwordVal = password;\n    const repeatPasswordVal = repeatPassword;\n    const privatePolicyVal = privatePolicy;\n\n    if (!nameVal || !lastNameVal || !emailVal || !passwordVal || !repeatPasswordVal || !privatePolicyVal) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios\"\n      });\n    } else {\n      if (passwordVal != repeatPasswordVal) {\n        notification[\"error\"]({\n          message: \"contraseÃ±as incorrectas\"\n        });\n      } else {\n        const result = await loginApi(input);\n\n        if (!result.ok) {\n          notification[\"error\"]({\n            message: result.message\n          });\n        } else {\n          notification[\"success\"]({\n            message: result.mesagge\n          });\n          resetForm();\n        }\n      }\n    }\n  };\n\n  const resetForm = () => {\n    const input = document.getElementsByTagName(\"input\");\n\n    for (let i = 0; i < input.length; i++) {\n      input[i].classList.remove(\"success\");\n      input[i].classList.remove(\"error\");\n    }\n\n    setInput({\n      name: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      privatePolicy: false\n    });\n    setFormValid({\n      email: false,\n      password: false,\n      repeatPassword: false,\n      privatePolicy: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"register-form\",\n    onFinish: register,\n    onChange: changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Nombre\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }),\n    value: input.name,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    placeholder: \"Apellido\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }),\n    value: input.lastName,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.email,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.password,\n    maxLength: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"repeatPassword\",\n    placeholder: \"Repita su contrase\\xF1a\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.repeatPassword,\n    maxLength: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"privatePolicy\",\n    checked: input.privatePolicy,\n    onChange: inputValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, \"He leido y acepto la politica de privacidad.\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"horizontal\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"register-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Crear cuenta\"))));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","Space","UserOutlined","LockOutlined","MailOutlined","loginApi","emailValidation","minLengthValidation","RegisterForm","input","setInput","name","lastName","email","password","repeatPassword","privatePolicy","formValid","setFormValid","changeForm","e","target","checked","value","inputValidation","type","register","console","log","nameVal","lastNameVal","emailVal","passwordVal","repeatPasswordVal","privatePolicyVal","message","result","ok","mesagge","resetForm","document","getElementsByTagName","i","length","classList","remove","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { loginApi } from \"../../api/user\";\r\nimport {\r\n  emailValidation,\r\n  minLengthValidation,\r\n} from \"../../utils/formValidation\";\r\n\r\nimport \"./RegisterForm.scss\";\r\n\r\nexport default function RegisterForm() {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    privatePolicy: false,\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    email: false,\r\n    password: false,\r\n    repeatPassword: false,\r\n    privatePolicy: false,\r\n  });\r\n\r\n  const changeForm = (e) => {\r\n    if (e.target.name === \"privatePolicy\") {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.checked,\r\n      });\r\n    } else {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const inputValidation = (e) => {\r\n    const { type, name } = e.target;\r\n    if (type === \"email\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: emailValidation(e.target),\r\n      });\r\n    }\r\n\r\n    if (type === \"password\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: minLengthValidation(e.target, 6),\r\n      });\r\n    }\r\n\r\n    if (type === \"checkbox\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: e.target.checked,\r\n      });\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    console.log(formValid);\r\n    const {\r\n      name,\r\n      lastName,\r\n      email,\r\n      password,\r\n      repeatPassword,\r\n      privatePolicy,\r\n    } = input;\r\n    const nameVal = name;\r\n    const lastNameVal = lastName;\r\n    const emailVal = email;\r\n    const passwordVal = password;\r\n    const repeatPasswordVal = repeatPassword;\r\n    const privatePolicyVal = privatePolicy;\r\n    if (\r\n      !nameVal ||\r\n      !lastNameVal ||\r\n      !emailVal ||\r\n      !passwordVal ||\r\n      !repeatPasswordVal ||\r\n      !privatePolicyVal\r\n    ) {\r\n      notification[\"error\"]({\r\n        message: \"Todos los campos son obligatorios\",\r\n      });\r\n    } else {\r\n      if (passwordVal != repeatPasswordVal) {\r\n        notification[\"error\"]({\r\n          message: \"contraseÃ±as incorrectas\",\r\n        });\r\n      } else {\r\n        const result = await loginApi(input);\r\n        if (!result.ok) {\r\n          notification[\"error\"]({\r\n            message: result.message,\r\n          });\r\n        } else {\r\n          notification[\"success\"]({\r\n            message: result.mesagge,\r\n          });\r\n          resetForm();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    const input = document.getElementsByTagName(\"input\");\r\n    for (let i = 0; i < input.length; i++) {\r\n      input[i].classList.remove(\"success\");\r\n      input[i].classList.remove(\"error\");\r\n    }\r\n\r\n    setInput({\r\n      name: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      repeatPassword: \"\",\r\n      privatePolicy: false,\r\n    });\r\n\r\n    setFormValid({\r\n      email: false,\r\n      password: false,\r\n      repeatPassword: false,\r\n      privatePolicy: false,\r\n    });\r\n  };\r\n  return (\r\n    <Form className=\"register-form\" onFinish={register} onChange={changeForm}>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nombre\"\r\n          className=\"register-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          value={input.name}\r\n          maxLength={50}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Apellido\"\r\n          className=\"register-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          value={input.lastName}\r\n          maxLength={50}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"register-form-input\"\r\n          prefix={<MailOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.email}\r\n          maxLength={100}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"ContraseÃ±a\"\r\n          className=\"register-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.password}\r\n          maxLength={20}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          placeholder=\"Repita su contraseÃ±a\"\r\n          className=\"register-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.repeatPassword}\r\n          maxLength={20}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Checkbox\r\n          name=\"privatePolicy\"\r\n          checked={input.privatePolicy}\r\n          onChange={inputValidation}\r\n        >\r\n          He leido y acepto la politica de privacidad.\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Space direction=\"horizontal\" size={20}>\r\n          <Button htmlType=\"submit\" className=\"register-form-button\">\r\n            Crear cuenta\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}