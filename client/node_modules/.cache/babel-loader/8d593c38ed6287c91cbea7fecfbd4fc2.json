{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\provider\\\\AuthProvider.js\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { getAccessTokenApi, getRefreshTokenApi, refreshAcessTokenApi, logout } from \"../api/auth\";\nexport const AuthContext = createContext();\nexport default function AuthProvider(props) {\n  const {\n    children\n  } = props;\n  const [user, setUser] = useState({\n    user: null,\n    isLoading: true\n  });\n  useEffect(() => {\n    checkUserLogin(setUser);\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, children);\n}\n\nfunction checkUserLogin(setUser) {\n  const accessToken = getAccessTokenApi();\n\n  if (!accessToken) {\n    const refreshToken = getRefreshTokenApi();\n\n    if (!refreshToken) {\n      logout();\n      setUser({\n        user: null,\n        isLoading: false\n      });\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/provider/AuthProvider.js"],"names":["React","useState","useEffect","createContext","getAccessTokenApi","getRefreshTokenApi","refreshAcessTokenApi","logout","AuthContext","AuthProvider","props","children","user","setUser","isLoading","checkUserLogin","accessToken","refreshToken"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,oBAHF,EAIEC,MAJF,QAKO,aALP;AAOA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AAEP,eAAe,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC/BW,IAAAA,IAAI,EAAE,IADyB;AAE/BE,IAAAA,SAAS,EAAE;AAFoB,GAAD,CAAhC;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc,CAACF,OAAD,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,QAApC,CAAP;AACD;;AAED,SAASI,cAAT,CAAwBF,OAAxB,EAAiC;AAC/B,QAAMG,WAAW,GAAGZ,iBAAiB,EAArC;;AAEA,MAAI,CAACY,WAAL,EAAkB;AAChB,UAAMC,YAAY,GAAGZ,kBAAkB,EAAvC;;AACA,QAAI,CAACY,YAAL,EAAmB;AACjBV,MAAAA,MAAM;AACNM,MAAAA,OAAO,CAAC;AACND,QAAAA,IAAI,EAAE,IADA;AAENE,QAAAA,SAAS,EAAE;AAFL,OAAD,CAAP;AAID;AACF;AACF","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport {\r\n  getAccessTokenApi,\r\n  getRefreshTokenApi,\r\n  refreshAcessTokenApi,\r\n  logout,\r\n} from \"../api/auth\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthProvider(props) {\r\n  const { children } = props;\r\n  const [user, setUser] = useState({\r\n    user: null,\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkUserLogin(setUser);\r\n  }, []);\r\n  return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nfunction checkUserLogin(setUser) {\r\n  const accessToken = getAccessTokenApi();\r\n\r\n  if (!accessToken) {\r\n    const refreshToken = getRefreshTokenApi();\r\n    if (!refreshToken) {\r\n      logout();\r\n      setUser({\r\n        user: null,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}