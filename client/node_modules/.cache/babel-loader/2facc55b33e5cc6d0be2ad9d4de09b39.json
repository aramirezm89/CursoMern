{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Users\\\\EditUserForm\\\\EditUserForm.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Avatar, Form, Input, Select, Button, Row, Col, notification } from \"antd\";\nimport { UserOutlined, MailOutlined, LockOutlined } from \"../../../../node_modules/@ant-design/icons\";\nimport { updateUserApi, uploadAvatarApi, getAvatarApi } from \"../../../api/user\";\nimport { getAccessTokenApi } from \"../../../api/auth\";\nimport { useDropzone } from \"react-dropzone\";\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\";\nimport \"./EditUserForm.scss\";\nexport default function EditUserForm(props) {\n  const {\n    user\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    setUserData({\n      name: user.name,\n      lastName: user.lastName,\n      email: user.email,\n      password: user.password,\n      role: user.role,\n      avatar: user.avatar\n    });\n  }, [user]);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (avatar) {\n      setUserData({ ...userData,\n        avatar: avatar.file\n      });\n    }\n  }, [avatar]);\n\n  const updateUser = () => {\n    const token = getAccessTokenApi();\n    let userUpdate = userData;\n\n    if (!userUpdate.name || !userUpdate.lastName || !userUpdate.email || !userUpdate.password || !userUpdate.repeatPassword) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      if (userUpdate.password !== userUpdate.repeatPassword) {\n        notification[\"error\"]({\n          message: \"Las contraseÃ±as deben ser iguales\"\n        });\n      } else {\n        delete userUpdate.repeatPassword;\n\n        if (typeof userUpdate.avatar === \"object\") {\n          uploadAvatarApi(token, userUpdate.avatar, user._id).then(response => {\n            userUpdate.avatar = response.avatarName;\n            updateUserApi(token, userUpdate, user._id).then(result => {\n              notification[\"success\"]({\n                message: result.message\n              });\n            });\n          });\n        } else {\n          updateUserApi(token, userUpdate, user._id).then(result => {\n            notification[\"success\"]({\n              message: result.message\n            });\n            var inputPassword = document.getElementById(\"pass\");\n            inputPassword.value = \"\";\n            var inputRepeatPassword = document.getElementById(\"repeatPass\");\n            inputRepeatPassword.value = \"\";\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-user-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadAvatar, {\n    avatar: avatar,\n    setAvatar: setAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditForm, {\n    userData: userData,\n    setUserData: setUserData,\n    updateUser: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 14\n    }\n  }));\n}\n\nfunction UploadAvatar(props) {\n  const {\n    avatar,\n    setAvatar\n  } = props;\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    if (avatar) {\n      if (avatar.preview) {\n        setAvatarUrl(avatar.preview);\n      } else {\n        setAvatarUrl(avatar);\n      }\n    } else {\n      setAvatarUrl(null);\n    }\n  }, [avatar]);\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    setAvatar({\n      file,\n      preview: URL.createObjectURL(file)\n    });\n  }, [setAvatar]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyBoard: true,\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"upload-avatar\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(Avatar, {\n    size: 150,\n    src: NoAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Avatar, {\n    size: 150,\n    src: avatar ? avatarUrl : NoAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }));\n}\n\nfunction EditForm(props) {\n  const {\n    userData,\n    setUserData,\n    updateUser\n  } = props;\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"form-edit\",\n    onFinish: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }),\n    placeholder: \"Nombre\",\n    value: userData.name,\n    onChange: e => setUserData({ ...userData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 36\n      }\n    }),\n    placeholder: \"Apellido\",\n    value: userData.lastName,\n    onChange: e => setUserData({ ...userData,\n      lastName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 36\n      }\n    }),\n    placeholder: \"Correo\",\n    value: userData.email,\n    onChange: e => setUserData({ ...userData,\n      email: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Selecciona un rol\",\n    onChange: e => setUserData({ ...userData,\n      role: e\n    }),\n    value: userData.role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \"Administrador\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, \"Editor\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"reviewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, \"Revisor\"))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"pass\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    onChange: e => setUserData({ ...userData,\n      password: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"repeatPass\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Repita su Contrase\\xF1a\",\n    onChange: e => setUserData({ ...userData,\n      repeatPassword: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"Actualizar Usuario\")));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Users/EditUserForm/EditUserForm.js"],"names":["React","useState","useCallback","useEffect","Avatar","Form","Input","Select","Button","Row","Col","notification","UserOutlined","MailOutlined","LockOutlined","updateUserApi","uploadAvatarApi","getAvatarApi","getAccessTokenApi","useDropzone","NoAvatar","EditUserForm","props","user","avatar","setAvatar","userData","setUserData","name","lastName","email","password","role","then","response","file","updateUser","token","userUpdate","repeatPassword","message","_id","avatarName","result","inputPassword","document","getElementById","value","inputRepeatPassword","UploadAvatar","avatarUrl","setAvatarUrl","preview","onDrop","acceptedFiles","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","noKeyBoard","EditForm","Option","e","target"],"mappings":"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","sourcesContent":["import React, {useState,useCallback,useEffect}from 'react'\r\nimport {Avatar,Form,Input,Select,Button,Row,Col, notification} from \"antd\"\r\nimport {UserOutlined,MailOutlined,LockOutlined} from \"../../../../node_modules/@ant-design/icons\"\r\nimport {updateUserApi,uploadAvatarApi,getAvatarApi} from \"../../../api/user\";\r\nimport {getAccessTokenApi} from \"../../../api/auth\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\n\r\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\"\r\n\r\nimport \"./EditUserForm.scss\"\r\n\r\n\r\nexport default function EditUserForm(props){\r\n    const {user} = props;\r\n    const [avatar,setAvatar] = useState(null)\r\n    const [userData,setUserData] =  useState({})\r\n\r\n    useEffect(()=>{\r\n      setUserData({\r\n        name: user.name,\r\n        lastName : user.lastName,\r\n        email: user.email,\r\n        password: user.password,\r\n        role: user.role,\r\n        avatar: user.avatar\r\n\r\n      })\r\n    },[user])\r\n\r\n    useEffect(()=>{\r\n        if (user.avatar){\r\n            getAvatarApi(user.avatar).then(response =>{\r\n                setAvatar(response);\r\n            })\r\n        }else{\r\n            setAvatar(null);\r\n        }\r\n    },[user])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(avatar){\r\n            setUserData({\r\n                ...userData,\r\n                avatar : avatar.file\r\n            });\r\n        }\r\n    }, [avatar]);\r\n\r\n    const updateUser = () => {\r\n       \r\n        const token = getAccessTokenApi();\r\n        let userUpdate = userData;\r\n\r\n        if(!userUpdate.name || !userUpdate.lastName || !userUpdate.email || !userUpdate.password || !userUpdate.repeatPassword ){\r\n            notification[\"error\"]({\r\n                message: \"Todos los campos son obligatorios.\"\r\n            })\r\n           \r\n    }else{  \r\n\r\n        if(userUpdate.password !== userUpdate.repeatPassword){\r\n            notification[\"error\"]({\r\n              message:  \"Las contraseÃ±as deben ser iguales\"\r\n             \r\n            })\r\n           \r\n        } else{\r\n\r\n            delete userUpdate.repeatPassword;\r\n           \r\n            if( typeof  userUpdate.avatar ===\"object\"){\r\n                uploadAvatarApi(token,userUpdate.avatar, user._id).then(response =>{\r\n                    userUpdate.avatar = response.avatarName;\r\n                    updateUserApi(token,userUpdate,user._id).then( result =>{\r\n                        notification[\"success\" ]({\r\n                            message: result.message\r\n                        });\r\n                    });\r\n                });\r\n            }else{\r\n                \r\n                updateUserApi(token,userUpdate,user._id).then(result =>{\r\n                    notification[\"success\" ]({\r\n                        message: result.message\r\n                    });\r\n\r\n                   var inputPassword =  document.getElementById(\"pass\")\r\n                   inputPassword.value =\"\"\r\n                   var inputRepeatPassword = document.getElementById(\"repeatPass\")\r\n                    inputRepeatPassword.value = \"\"\r\n                });\r\n\r\n              \r\n            }\r\n\r\n     } }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n    return(\r\n        <div className=\"edit-user-form\">\r\n            <UploadAvatar avatar={avatar} setAvatar={setAvatar}/>\r\n             <EditForm userData={userData} setUserData={setUserData} updateUser={updateUser}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction UploadAvatar(props){\r\n    const {avatar,setAvatar} = props;\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(avatar){\r\n            if(avatar.preview){\r\n                setAvatarUrl(avatar.preview)\r\n            }else{\r\n                setAvatarUrl(avatar)\r\n            }\r\n        }else{\r\n            setAvatarUrl(null)\r\n        }\r\n    },[avatar])\r\n\r\n    const onDrop = useCallback(\r\n        acceptedFiles => {\r\n            const file = acceptedFiles[0]\r\n            setAvatar({file,preview : URL.createObjectURL(file)});\r\n        },\r\n        [setAvatar]\r\n\r\n    );\r\n   \r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        accept: \"image/jpeg, image/png\",\r\n        noKeyBoard: true,\r\n        onDrop\r\n \r\n    });\r\n\r\n    return(\r\n\r\n        <div className=\"upload-avatar\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n                <Avatar size={150} src={NoAvatar} />\r\n            ):(\r\n                <Avatar size={150} src={avatar ? avatarUrl : NoAvatar} />\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction EditForm(props){\r\n    const{ userData, setUserData, updateUser} = props\r\n    const {Option} = Select;\r\n    return(\r\n       <Form className=\"form-edit\"\r\n             onFinish={updateUser}\r\n       >\r\n        <Row gutter={24}>\r\n            <Col span={12}> \r\n              <Form.Item>\r\n                 <Input prefix={<UserOutlined/>}\r\n                  placeholder=\"Nombre\"\r\n                  value={userData.name}\r\n                  onChange={e => setUserData({\r\n                      ...userData,\r\n                      name: e.target.value\r\n                  })}\r\n                  />\r\n               \r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}> \r\n                <Form.Item>\r\n                    <Input prefix={<UserOutlined/>}\r\n                        placeholder=\"Apellido\"\r\n                        value={userData.lastName}\r\n                        onChange={e => setUserData({\r\n                            ...userData,\r\n                            lastName: e.target.value\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n            \r\n             </Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n            <Col span={12}> \r\n                <Form.Item>\r\n                    <Input prefix={<MailOutlined/>}\r\n                        placeholder=\"Correo\"\r\n                        value={userData.email}\r\n                        onChange={e => setUserData({\r\n                            ...userData,\r\n                            email: e.target.value\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n           \r\n            </Col>\r\n            <Col span={12}>  \r\n                <Form.Item>\r\n                      <Select\r\n                           placeholder=\"Selecciona un rol\"\r\n                             onChange={e => setUserData({\r\n                             ...userData,\r\n                             role: e\r\n                          })}\r\n                           value={userData.role}\r\n            \r\n                        >\r\n                            <Option value= \"admin\">Administrador</Option>\r\n                            <Option value = \"editor\">Editor</Option>\r\n                            <Option value = \"reviewer\">Revisor</Option>\r\n\r\n                        </Select>\r\n                </Form.Item>\r\n           \r\n            </Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n            <Col span={12}>\r\n                <Form.Item>\r\n                    <Input\r\n                        id= \"pass\"\r\n                        prefix={<LockOutlined/>}\r\n                        type=\"password\"\r\n                        placeholder=\"ContraseÃ±a\"\r\n                        onChange={e => setUserData({\r\n                            ...userData,\r\n                            password: e.target.value\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n                \r\n             </Col>\r\n\r\n            <Col span={12}> \r\n            \r\n            <Form.Item>\r\n                    <Input\r\n                       id=\"repeatPass\"\r\n                        prefix={<LockOutlined/>}\r\n                        type=\"password\"\r\n                        placeholder=\"Repita su ContraseÃ±a\"\r\n                        onChange={e => setUserData({\r\n                            ...userData,\r\n                            repeatPassword: e.target.value\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n             </Col>\r\n        </Row>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\r\n                Actualizar Usuario\r\n            </Button>\r\n        </Form.Item>\r\n       </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}