{"ast":null,"code":"import { basePath, apiVersion } from \"./config\";\nexport function getPostsApi(page, limit) {\n  const url = `${basePath}/${apiVersion}/get-posts?page=${page}&limit=${limit}`;\n  return fetch(url).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function deletePostApi(token, id) {\n  const url = `${basePath}/${apiVersion}/delete-post/${id}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function addPostApi(token, post) {\n  const url = `${basePath}/${apiVersion}/add-post`;\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(post)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function editPostAPi(token, id, data) {\n  const url = `${basePath}/${apiVersion}/update-post/${id}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function getPostApi(urlPost) {}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/api/post.js"],"names":["basePath","apiVersion","getPostsApi","page","limit","url","fetch","then","response","json","result","catch","err","deletePostApi","token","id","params","method","headers","Authorization","addPostApi","post","body","JSON","stringify","editPostAPi","data","getPostApi","urlPost"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,UAAjB,QAAkC,UAAlC;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0BC,KAA1B,EAAgC;AACnC,QAAMC,GAAG,GAAI,GAAEL,QAAS,IAAGC,UAAW,mBAAkBE,IAAK,UAASC,KAAM,EAA5E;AAED,SAAOE,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,QAAQ,IAAG;AAC7B,WAAOA,QAAQ,CAACC,IAAT,EAAP;AAEH,GAHK,EAGHF,IAHG,CAGEG,MAAM,IAAG;AACb,WAAOA,MAAP;AACH,GALK,EAKHC,KALG,CAKGC,GAAG,IAAG;AACX,WAAOA,GAAP;AACH,GAPK,CAAP;AAQF;AAED,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA6BC,EAA7B,EAAgC;AACnC,QAAMV,GAAG,GAAI,GAAEL,QAAS,IAAGC,UAAW,gBAAec,EAAG,EAAxD;AACA,QAAMC,MAAM,GAAC;AACXC,IAAAA,MAAM,EAAC,QADI;AAEXC,IAAAA,OAAO,EAAC;AACJ,sBAAiB,kBADb;AAEJC,MAAAA,aAAa,EAAGL;AAFZ;AAFG,GAAb;AAQA,SAAOR,KAAK,CAACD,GAAD,EAAKW,MAAL,CAAL,CAAkBT,IAAlB,CAAuBC,QAAQ,IAAG;AACrC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAG;AACb,WAAOA,MAAP;AACH,GAJM,EAIJC,KAJI,CAIEC,GAAG,IAAG;AACX,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASQ,UAAT,CAAoBN,KAApB,EAA0BO,IAA1B,EAA+B;AAClC,QAAMhB,GAAG,GAAI,GAAEL,QAAS,IAAGC,UAAW,WAAtC;AACA,QAAMe,MAAM,GAAG;AACZC,IAAAA,MAAM,EAAC,MADK;AAEZC,IAAAA,OAAO,EAAC;AACP,sBAAiB,kBADV;AAEPC,MAAAA,aAAa,EAAEL;AAFR,KAFI;AAMZQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AANM,GAAf;AASD,SAAQf,KAAK,CAACD,GAAD,EAAMW,MAAN,CAAL,CAAmBT,IAAnB,CAAwBC,QAAQ,IAAG;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFO,EAELF,IAFK,CAEAG,MAAM,IAAG;AACb,WAAOA,MAAP;AACH,GAJO,EAILC,KAJK,CAICC,GAAG,IAAG;AACX,WAAOA,GAAP;AACH,GANO,CAAR;AAQF;AAED,OAAO,SAASa,WAAT,CAAqBX,KAArB,EAA2BC,EAA3B,EAA+BW,IAA/B,EAAoC;AACvC,QAAMrB,GAAG,GAAI,GAAEL,QAAS,IAAGC,UAAW,gBAAec,EAAG,EAAxD;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAC,KADI;AAEXC,IAAAA,OAAO,EAAC;AACJ,sBAAiB,kBADb;AAEJC,MAAAA,aAAa,EAAEL;AAFX,KAFG;AAMXQ,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeE,IAAf;AANM,GAAf;AASA,SAAOpB,KAAK,CAACD,GAAD,EAAKW,MAAL,CAAL,CAAkBT,IAAlB,CAAuBC,QAAQ,IAAI;AACtC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAG;AACb,WAAOA,MAAP;AACH,GAJM,EAIJC,KAJI,CAIEC,GAAG,IAAG;AACX,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASe,UAAT,CAAoBC,OAApB,EAA4B,CAElC","sourcesContent":["import {basePath,apiVersion} from \"./config\";\r\n\r\nexport function getPostsApi(page,limit){\r\n    const url = `${basePath}/${apiVersion}/get-posts?page=${page}&limit=${limit}`\r\n\r\n   return fetch(url).then(response =>{\r\n        return response.json();\r\n\r\n    }).then(result =>{\r\n        return result\r\n    }).catch(err =>{\r\n        return err\r\n    })\r\n}\r\n\r\nexport function deletePostApi(token,id){\r\n    const url = `${basePath}/${apiVersion}/delete-post/${id}`;\r\n    const params={\r\n      method:\"DELETE\",\r\n      headers:{\r\n          \"Content-Type\" : \"application/json\",\r\n          Authorization : token\r\n      }\r\n    };\r\n\r\n    return fetch(url,params).then(response =>{\r\n        return response.json();\r\n    }).then(result =>{\r\n        return result;\r\n    }).catch(err =>{\r\n        return err;\r\n    })\r\n}\r\n\r\nexport function addPostApi(token,post){\r\n    const url = `${basePath}/${apiVersion}/add-post`;\r\n    const params = {\r\n       method:\"POST\",\r\n       headers:{\r\n        \"Content-Type\" : \"application/json\",\r\n        Authorization: token\r\n       },\r\n       body: JSON.stringify(post)\r\n    }\r\n\r\n   return  fetch(url, params).then(response =>{\r\n       return response.json();\r\n   }).then(result =>{\r\n       return result;\r\n   }).catch(err =>{\r\n       return err;\r\n   })\r\n\r\n}\r\n\r\nexport function editPostAPi(token,id, data){\r\n    const url = `${basePath}/${apiVersion}/update-post/${id}`\r\n    const params = {\r\n        method:\"PUT\",\r\n        headers:{\r\n            \"Content-Type\" : \"application/json\",\r\n            Authorization: token\r\n        },\r\n        body:JSON.stringify(data)\r\n    }\r\n\r\n    return fetch(url,params).then(response  =>{\r\n        return response.json();\r\n    }).then(result =>{\r\n        return result;\r\n    }).catch(err =>{\r\n        return err\r\n    })\r\n}\r\n\r\nexport function getPostApi(urlPost){\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}