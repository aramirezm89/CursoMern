{"ast":null,"code":"import { message } from \"antd\";\nimport { basePath, apiVersion } from \"./config\";\nexport function loginApi(data) {\n  const url = `${basePath}/${apiVersion}/login`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    if (result.user) {\n      return {\n        ok: true,\n        mesagge: \"Usuario creado con exito\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersActiveApi(token, status) {\n  const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function uploadAvatarApi(token, avatar, userId) {\n  const url = `${basePath}/${apiVersion}/upload-avatar/${userId}`;\n  const formData = new FormData();\n  formData.append(\"avatar\", avatar, avatar.name);\n  const params = {\n    method: \"PUT\",\n    body: formData,\n    headers: {\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getAvatarApi(avatarName) {\n  const url = `${basePath}/${apiVersion}/get-avatar/${avatarName}`;\n  return fetch(url).then(response => {\n    return response.url;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function updateUserApi(token, user, idUser) {\n  const url = `${basePath}/${apiVersion}/update-user/${idUser}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function activateUserApi(token, idUser, status) {\n  const url = `${basePath}/${apiVersion}/activate-user/${idUser}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify({\n      active: status\n    })\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function deleteUserApi(token, idUser) {\n  const url = `${basePath}/${apiVersion}/user-delete/${idUser}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function singUpAdminApi(token, data) {\n  const url = `${basePath}/${apiVersion}/sing-up-admin`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err.message;\n  });\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/api/user.js"],"names":["message","basePath","apiVersion","loginApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","response","json","result","user","ok","mesagge","catch","err","signInApi","getUsersApi","token","Authorization","getUsersActiveApi","status","uploadAvatarApi","avatar","userId","formData","FormData","append","name","getAvatarApi","avatarName","updateUserApi","idUser","activateUserApi","active","deleteUserApi","singUpAdminApi"],"mappings":"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","sourcesContent":["import { message } from \"antd\";\r\nimport { basePath, apiVersion } from \"./config\";\r\n\r\nexport function loginApi(data) {\r\n  const url = `${basePath}/${apiVersion}/login`;\r\n  const params = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      if (result.user) {\r\n        return {\r\n          ok: true,\r\n          mesagge: \"Usuario creado con exito\",\r\n        };\r\n      }\r\n      return {\r\n        ok: false,\r\n        message: result.message,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        ok: false,\r\n        message: err.message,\r\n      };\r\n    });\r\n}\r\n\r\nexport function signInApi(data) {\r\n  const url = `${basePath}/${apiVersion}/sign-in`;\r\n  const params = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: { \"Content-type\": \"application/json\" },\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n\r\n    .catch((err) => {\r\n      return err.message;\r\n    });\r\n}\r\n\r\n\r\nexport function getUsersApi(token){\r\n  const url =  `${basePath}/${apiVersion}/users`;\r\n  const params = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: token\r\n    }\r\n\r\n  };\r\n\r\n  return fetch(url,params)\r\n        .then(response =>{\r\n          return response.json();\r\n        })\r\n        .then(result =>{\r\n          return result;\r\n        })\r\n        .catch(err =>{\r\n         return  err.message\r\n        })\r\n\r\n}\r\n\r\nexport function getUsersActiveApi(token,status){\r\n  const url =  `${basePath}/${apiVersion}/users-active?active=${status}`;\r\n  const params = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: token\r\n    }\r\n\r\n  };\r\n\r\n  return fetch(url,params)\r\n        .then(response =>{\r\n          return response.json();\r\n        })\r\n        .then(result =>{\r\n          return result;\r\n        })\r\n        .catch(err =>{\r\n         return  err.message\r\n        })\r\n\r\n}\r\n\r\nexport function  uploadAvatarApi(token,avatar,userId){\r\n\r\n\r\n  const url = `${basePath}/${apiVersion}/upload-avatar/${userId}`;\r\n\r\n  const formData = new FormData();\r\n\r\n  formData.append(\"avatar\",avatar,avatar.name);\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    body: formData,\r\n    headers:{ \r\n      Authorization: token\r\n    }\r\n  }\r\n\r\n  return fetch(url,params).then(response =>{\r\n    return response.json()\r\n  }).then(result =>{\r\n    return result;\r\n  }).catch(err =>{\r\n    return err.message;\r\n  })\r\n\r\n  \r\n}\r\n\r\n\r\nexport function getAvatarApi(avatarName){\r\n\r\n  const url = `${basePath}/${apiVersion}/get-avatar/${avatarName}`;\r\n\r\n  return fetch(url).then( response =>{\r\n    return response.url;\r\n  }).catch(err =>{\r\n    return err.message;\r\n  })\r\n\r\n}\r\n\r\n\r\nexport function updateUserApi(token,user,idUser){\r\n  const url = `${basePath}/${apiVersion}/update-user/${idUser}`;\r\n  const params = {\r\n    method:\"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: token\r\n    },\r\n    body: JSON.stringify(user)\r\n   \r\n  };\r\n\r\n  return fetch(url,params).then(response =>{\r\n    return response.json();\r\n  }).then(result =>{\r\n    return result;\r\n  }).catch(err =>{\r\n    return err.message;\r\n  })\r\n\r\n}\r\n\r\nexport function  activateUserApi(token,idUser,status){\r\n  const url = `${basePath}/${apiVersion}/activate-user/${idUser}`;\r\n \r\n  const params = {\r\n    method:\"PUT\",\r\n    headers: {\r\n      \"Content-Type\" : \"application/json\",\r\n      Authorization: token\r\n    },\r\n    body : JSON.stringify({\r\n      active: status\r\n\r\n    })\r\n  };\r\n\r\n  return fetch(url,params).then(response =>{\r\n    return response.json();\r\n  }).then(result=>{\r\n    return result.message;\r\n  }).catch(err =>{\r\n    return err.message;\r\n  })\r\n}\r\n\r\nexport function deleteUserApi(token,idUser,){\r\n\r\n  const url = `${basePath}/${apiVersion}/user-delete/${idUser}`;\r\n\r\n   const params = {\r\n\r\n    method: \"DELETE\",\r\n    headers:{\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization : token\r\n    }\r\n\r\n   }\r\n\r\n   return fetch(url,params).then(response =>{\r\n    return response.json();\r\n   }).then(result =>{\r\n     return result.message;\r\n   }).catch(err =>{\r\n       return  err.message;\r\n   })\r\n\r\n}\r\n\r\nexport function singUpAdminApi(token,data){\r\n\r\n  const url = `${basePath}/${apiVersion}/sing-up-admin`;\r\n\r\n  const params ={\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers:{\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: token\r\n    }\r\n  }\r\n\r\n  fetch(url,params).then(response=>{\r\n    return response.json();\r\n  }).then(result =>{\r\n    return result.message;\r\n  }).catch(err=>{\r\n    return err.message;\r\n  })\r\n\r\n }"]},"metadata":{},"sourceType":"module"}