{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Form,Input,Button,notification}from\"antd\";import{FontSizeOutlined,LinkOutlined}from\"@ant-design/icons\";import{updateMenuApi}from\"../../../../api/menu\";import{getAccessTokenApi}from\"../../../../api/auth\";import\"./EditMenuWebForm.scss\";export default function EditMenuWebForm(props){var setIsVisibleModal=props.setIsVisibleModal,setReloadMenuWeb=props.setReloadMenuWeb,menu=props.menu;var _useState=useState(menu),_useState2=_slicedToArray(_useState,2),menuWebData=_useState2[0],setMenuWebData=_useState2[1];useEffect(function(){setMenuWebData(menu);},[menu]);var editMenu=function editMenu(event){if(!menuWebData.title||!menuWebData.url){notification[\"error\"]({message:\"Todos los campos son obligatorios.\"});}else{var accesToken=getAccessTokenApi();updateMenuApi(accesToken,menuWebData._id,menuWebData).then(function(response){notification[\"success\"]({message:response});setIsVisibleModal(false);setReloadMenuWeb(true);}).catch(function(){notification[\"error\"]({message:\"Error del servidor, intentelo mas tarde.\"});});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"edit-menu-web-form\"},/*#__PURE__*/React.createElement(EditForm,{menuWebData:menuWebData,setMenuWebData:setMenuWebData,editMenu:editMenu}));}function EditForm(props){var menuWebData=props.menuWebData,setMenuWebData=props.setMenuWebData,editMenu=props.editMenu;return/*#__PURE__*/React.createElement(Form,{className:\"form-edit\",onFinish:editMenu},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(FontSizeOutlined,{style:{color:\"rgba(0,0,0,0.25)\"}}),placeholder:\"Titulo\",value:menuWebData.title,onChange:function onChange(e){return setMenuWebData(_objectSpread({},menuWebData,{title:e.target.value}));}})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(LinkOutlined,{style:{color:\"rgba(0,0,0,0.25)\"}}),placeholder:\"URL\",value:menuWebData.url,onChange:function onChange(e){return setMenuWebData(_objectSpread({},menuWebData,{url:e.target.value}));}})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"btn-submit\"},\"Actualizar men\\xFA\")));}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js"],"names":["React","useState","useEffect","Form","Input","Button","notification","FontSizeOutlined","LinkOutlined","updateMenuApi","getAccessTokenApi","EditMenuWebForm","props","setIsVisibleModal","setReloadMenuWeb","menu","menuWebData","setMenuWebData","editMenu","event","title","url","message","accesToken","_id","then","response","catch","EditForm","color","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport {Form,Input,Button,notification} from \"antd\"\r\nimport {FontSizeOutlined,LinkOutlined} from \"@ant-design/icons\";\r\nimport {updateMenuApi} from \"../../../../api/menu\";\r\nimport {getAccessTokenApi} from \"../../../../api/auth\";\r\n\r\nimport \"./EditMenuWebForm.scss\";\r\n\r\nexport default function EditMenuWebForm(props){\r\n\r\n    const {setIsVisibleModal,setReloadMenuWeb,menu} = props;\r\n    const [menuWebData, setMenuWebData] = useState(menu);\r\n\r\n    useEffect(() => {\r\n        setMenuWebData(menu);\r\n    },[menu])\r\n\r\n    const editMenu =  event =>{\r\n     \r\n        if(!menuWebData.title || !menuWebData.url){\r\n            notification[\"error\"]({\r\n                message:\"Todos los campos son obligatorios.\"\r\n            })\r\n        }else{\r\n            const accesToken = getAccessTokenApi();\r\n\r\n            updateMenuApi(accesToken, menuWebData._id,menuWebData)\r\n                .then(response =>{\r\n                    notification[\"success\"]({\r\n                        message: response\r\n                    })\r\n                    setIsVisibleModal(false);\r\n                    setReloadMenuWeb(true);\r\n                }).catch(() =>{\r\n                    notification[\"error\"]({\r\n                        message: \"Error del servidor, intentelo mas tarde.\"\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-menu-web-form\">\r\n          <EditForm\r\n           menuWebData={menuWebData}\r\n           setMenuWebData={setMenuWebData}\r\n           editMenu={editMenu}\r\n\r\n          />\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction EditForm(props){\r\n    const {menuWebData, setMenuWebData, editMenu} = props;\r\n\r\n    return(\r\n            <Form className = \"form-edit\" onFinish={editMenu}>\r\n                <Form.Item>\r\n                    <Input\r\n                        prefix = {<FontSizeOutlined style={{color: \"rgba(0,0,0,0.25)\"}} />}\r\n                        placeholder=\"Titulo\"\r\n                        value={menuWebData.title}\r\n                        onChange={e => setMenuWebData({...menuWebData, title: e.target.value})}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Input\r\n                        prefix = {<LinkOutlined style={{color: \"rgba(0,0,0,0.25)\"}} />}\r\n                        placeholder=\"URL\"\r\n                        value={menuWebData.url}\r\n                        onChange={e => setMenuWebData({...menuWebData, url: e.target.value})}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"btn-submit\"\r\n                   \r\n                    >\r\n                     Actualizar men√∫\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n                \r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}