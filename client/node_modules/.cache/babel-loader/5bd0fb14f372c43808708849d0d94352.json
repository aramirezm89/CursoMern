{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Input,Button,notification}from\"antd\";import{UserOutlined,LockOutlined}from\"@ant-design/icons\";import\"./LoginForm.scss\";import{emailValidation,minLengthValidation}from\"../../../utils/formValidation\";import{REFRESH_TOKEN,ACCESS_TOKEN}from\"../../../utils/constants\";import{signInApi}from\"../../../api/user\";export default function LoginForm(){var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState({email:false,password:false}),_useState4=_slicedToArray(_useState3,2),formValid=_useState4[0],setFormValid=_useState4[1];var changeForm=function changeForm(e){setInput(_objectSpread({},input,_defineProperty({},e.target.name,e.target.value)));};var inputValidation=function inputValidation(e){var _e$target=e.target,name=_e$target.name,type=_e$target.type;if(type===\"email\"){setFormValid(_objectSpread({},formValid,_defineProperty({},name,emailValidation(e.target))));}if(type===\"password\"){setFormValid(_objectSpread({},formValid,_defineProperty({},name,minLengthValidation(e.target,6))));}};var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,accessToken,refreshToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return signInApi(input);case 2:result=_context.sent;if(result.message){notification[\"error\"]({message:result.message});}else{accessToken=result.accessToken,refreshToken=result.refreshToken;localStorage.setItem(ACCESS_TOKEN,accessToken);localStorage.setItem(REFRESH_TOKEN,refreshToken);notification[\"success\"]({message:\"Bienvenido \"});window.location.href=\"/admin\";}case 4:case\"end\":return _context.stop();}}},_callee);}));return function login(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Form,{className:\"login-form\",onChange:changeForm,onFinish:login},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"email\",placeholder:\"Ingrese su email\",className:\"login-form-input\",prefix:/*#__PURE__*/React.createElement(UserOutlined,{style:{color:\"rgba(168, 171, 174 )\"}}),maxlength:50,value:input.email,onChange:inputValidation})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{type:\"password\",name:\"password\",placeholder:\"Contrase\\xF1a\",className:\"login-form-input\",prefix:/*#__PURE__*/React.createElement(LockOutlined,{style:{color:\"rgba(168, 171, 174 )\"}}),maxlength:20,value:input.password,onChange:inputValidation})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{htmlType:\"submit\",className:\"login-form-button\"},\"Entrar\")));}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/LoginForm/LoginForm.js"],"names":["React","useState","Form","Input","Button","notification","UserOutlined","LockOutlined","emailValidation","minLengthValidation","REFRESH_TOKEN","ACCESS_TOKEN","signInApi","LoginForm","email","password","input","setInput","formValid","setFormValid","changeForm","e","target","name","value","inputValidation","type","login","result","message","accessToken","refreshToken","localStorage","setItem","window","location","href","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, notification } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./LoginForm.scss\";\r\nimport {\r\n  emailValidation,\r\n  minLengthValidation,\r\n} from \"../../../utils/formValidation\";\r\nimport { REFRESH_TOKEN, ACCESS_TOKEN } from \"../../../utils/constants\";\r\nimport { signInApi } from \"../../../api/user\";\r\n\r\nexport default function LoginForm() {\r\n  const [input, setInput] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  const changeForm = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const inputValidation = (e) => {\r\n    const { name, type } = e.target;\r\n    if (type === \"email\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: emailValidation(e.target),\r\n      });\r\n    }\r\n\r\n    if (type === \"password\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: minLengthValidation(e.target, 6),\r\n      });\r\n    }\r\n  };\r\n  const login = async () => {\r\n    const result = await signInApi(input);\r\n\r\n    if (result.message) {\r\n      notification[\"error\"]({\r\n        message: result.message,\r\n      });\r\n    } else {\r\n      const { accessToken, refreshToken } = result;\r\n      localStorage.setItem(ACCESS_TOKEN, accessToken);\r\n      localStorage.setItem(REFRESH_TOKEN, refreshToken);\r\n\r\n      notification[\"success\"]({\r\n        message: \"Bienvenido \",\r\n      });\r\n\r\n      window.location.href = \"/admin\";\r\n    }\r\n  };\r\n  return (\r\n    <Form className=\"login-form\" onChange={changeForm} onFinish={login}>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Ingrese su email\"\r\n          className=\"login-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          maxlength={50}\r\n          value={input.email}\r\n          onChange={inputValidation}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"ContraseÃ±a\"\r\n          className=\"login-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          maxlength={20}\r\n          value={input.password}\r\n          onChange={inputValidation}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button htmlType=\"submit\" className=\"login-form-button\">\r\n          Entrar\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}