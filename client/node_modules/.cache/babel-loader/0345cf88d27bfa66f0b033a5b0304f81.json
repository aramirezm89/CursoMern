{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Users\\\\EditUserForm\\\\EditUserForm.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Avatar, Form, Input, Select, Button, Row, Col, notification } from \"antd\";\nimport { UserOutlined, MailOutlined, LockOutlined } from \"../../../../node_modules/@ant-design/icons\";\nimport { updateUserApi, uploadAvatarApi, getAvatarApi } from \"../../../api/user\";\nimport { getAccessTokenApi } from \"../../../api/auth\";\nimport { useDropzone } from \"react-dropzone\";\nimport { emailValidation, minLengthValidation } from \"../../../utils/formValidation\";\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\";\nimport \"./EditUserForm.scss\";\nexport default function EditUserForm(props) {\n  const {\n    user,\n    setIsVisibleModal,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    setUserData({\n      name: user.name,\n      lastName: user.lastName,\n      email: user.email,\n      password: \"\",\n      repeatPassword: \"\",\n      role: user.role,\n      avatar: user.avatar\n    });\n  }, [user]);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (avatar) {\n      setUserData({ ...userData,\n        avatar: avatar.file\n      });\n    }\n  }, [avatar]);\n\n  const updateUser = () => {\n    const token = getAccessTokenApi();\n    let userUpdate = userData;\n\n    if (!userUpdate.name || !userUpdate.lastName || !userUpdate.email || !userUpdate.password || !userUpdate.repeatPassword) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\"\n      });\n    } else {\n      if (userUpdate.password !== userUpdate.repeatPassword || userUpdate.password.length < 6) {\n        notification[\"error\"]({\n          message: \"Las contraseñas deben ser iguales o la contraseña es menor a 6 caracteres.\"\n        });\n      } else {\n        delete userUpdate.repeatPassword;\n\n        if (typeof userUpdate.avatar === \"object\") {\n          uploadAvatarApi(token, userUpdate.avatar, user._id).then(response => {\n            userUpdate.avatar = response.avatarName;\n            updateUserApi(token, userUpdate, user._id).then(result => {\n              notification[\"success\"]({\n                message: result.message\n              });\n            });\n          });\n          setUserData({\n            name: user.name,\n            lastName: user.lastName,\n            email: user.email,\n            password: \"\",\n            role: user.role,\n            avatar: user.avatar\n          });\n          setIsVisibleModal(false);\n          setReloadUsers(true);\n        } else {\n          updateUserApi(token, userUpdate, user._id).then(result => {\n            notification[\"success\"]({\n              message: result.message\n            });\n            setUserData({\n              name: user.name,\n              lastName: user.lastName,\n              email: user.email,\n              password: \"\",\n              role: user.role,\n              avatar: user.avatar\n            });\n            setIsVisibleModal(false);\n            setReloadUsers(true);\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-user-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadAvatar, {\n    avatar: avatar,\n    setAvatar: setAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditForm, {\n    userData: userData,\n    setUserData: setUserData,\n    updateUser: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 14\n    }\n  }));\n}\n\nfunction UploadAvatar(props) {\n  const {\n    avatar,\n    setAvatar\n  } = props;\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    if (avatar) {\n      if (avatar.preview) {\n        setAvatarUrl(avatar.preview);\n      } else {\n        setAvatarUrl(avatar);\n      }\n    } else {\n      setAvatarUrl(null);\n    }\n  }, [avatar]);\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    setAvatar({\n      file,\n      preview: URL.createObjectURL(file)\n    });\n  }, [setAvatar]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyBoard: true,\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"upload-avatar\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(Avatar, {\n    size: 150,\n    src: NoAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Avatar, {\n    size: 150,\n    src: avatar ? avatarUrl : NoAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }));\n}\n\nfunction EditForm(props) {\n  const {\n    userData,\n    setUserData,\n    updateUser\n  } = props;\n  const {\n    Option\n  } = Select;\n\n  const changeForm = e => {\n    setUserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false\n  });\n\n  const inputValidation = e => {\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"form-edit\",\n    onFinish: updateUser,\n    onChange: changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }),\n    name: \"name\",\n    placeholder: \"Nombre\",\n    value: userData.name,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 36\n      }\n    }),\n    name: \"lastName\",\n    placeholder: \"Apellido\",\n    value: userData.lastName,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 36\n      }\n    }),\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Correo\",\n    value: userData.email,\n    onChange: inputValidation,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Selecciona un rol\",\n    value: userData.role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, \"Administrador\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  }, \"Editor\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"reviewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, \"Revisor\"))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }),\n    type: \"password\",\n    value: userData.password,\n    placeholder: \"Contrase\\xF1a\",\n    onChange: inputValidation,\n    maxLength: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"repeatPassword\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 33\n      }\n    }),\n    type: \"password\",\n    defaultValue: \"\",\n    value: userData.repeatPassword,\n    placeholder: \"Repita su Contrase\\xF1a\",\n    onChange: inputValidation,\n    maxLength: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, \"Actualizar Usuario\")));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Users/EditUserForm/EditUserForm.js"],"names":["React","useState","useCallback","useEffect","Avatar","Form","Input","Select","Button","Row","Col","notification","UserOutlined","MailOutlined","LockOutlined","updateUserApi","uploadAvatarApi","getAvatarApi","getAccessTokenApi","useDropzone","emailValidation","minLengthValidation","NoAvatar","EditUserForm","props","user","setIsVisibleModal","setReloadUsers","avatar","setAvatar","userData","setUserData","name","lastName","email","password","repeatPassword","role","then","response","file","updateUser","token","userUpdate","message","length","_id","avatarName","result","UploadAvatar","avatarUrl","setAvatarUrl","preview","onDrop","acceptedFiles","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","noKeyBoard","EditForm","Option","changeForm","e","target","value","formValid","setFormValid","inputValidation","type","checked"],"mappings":"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","sourcesContent":["import React, {useState,useCallback,useEffect}from 'react'\r\nimport {Avatar,Form,Input,Select,Button,Row,Col, notification} from \"antd\"\r\nimport {UserOutlined,MailOutlined,LockOutlined} from \"../../../../node_modules/@ant-design/icons\"\r\nimport {updateUserApi,uploadAvatarApi,getAvatarApi} from \"../../../api/user\";\r\nimport {getAccessTokenApi} from \"../../../api/auth\";\r\nimport {useDropzone} from \"react-dropzone\";\r\nimport {\r\n    emailValidation,\r\n    minLengthValidation,\r\n  } from \"../../../utils/formValidation\";\r\n  \r\n\r\n\r\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\"\r\n\r\nimport \"./EditUserForm.scss\"\r\n\r\n\r\nexport default function EditUserForm(props){\r\n    const {user,setIsVisibleModal,setReloadUsers} = props;\r\n    const [avatar,setAvatar] = useState(null)\r\n    const [userData,setUserData] =  useState({})\r\n\r\n \r\n    useEffect(()=>{\r\n      setUserData({\r\n        name: user.name,\r\n        lastName : user.lastName,\r\n        email: user.email,\r\n        password: \"\",\r\n        repeatPassword:\"\",\r\n        role: user.role,\r\n        avatar: user.avatar\r\n\r\n      })\r\n    },[user])\r\n\r\n    useEffect(()=>{\r\n        if (user.avatar){\r\n            getAvatarApi(user.avatar).then(response =>{\r\n                setAvatar(response);\r\n            })\r\n        }else{\r\n            setAvatar(null);\r\n        }\r\n    },[user])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(avatar){\r\n            setUserData({\r\n                ...userData,\r\n                avatar : avatar.file\r\n            });\r\n        }\r\n    }, [avatar]);\r\n\r\n\r\n\r\n   \r\n     \r\n    const updateUser = () => {\r\n       \r\n        const token = getAccessTokenApi();\r\n        let userUpdate = userData;\r\n\r\n        if(!userUpdate.name || !userUpdate.lastName || !userUpdate.email || !userUpdate.password || !userUpdate.repeatPassword ){\r\n            notification[\"error\"]({\r\n                message: \"Todos los campos son obligatorios.\"\r\n            })\r\n           \r\n    }else{ \r\n         \r\n\r\n        if(userUpdate.password !== userUpdate.repeatPassword || userUpdate.password.length <6){\r\n            notification[\"error\"]({\r\n              message:  \"Las contraseñas deben ser iguales o la contraseña es menor a 6 caracteres.\"\r\n             \r\n            })\r\n           \r\n        } else{\r\n\r\n            delete userUpdate.repeatPassword;\r\n           \r\n            if( typeof  userUpdate.avatar ===\"object\"){\r\n                uploadAvatarApi(token,userUpdate.avatar, user._id).then(response =>{\r\n                    userUpdate.avatar = response.avatarName;\r\n                    updateUserApi(token,userUpdate,user._id).then( result =>{\r\n                        notification[\"success\"]({\r\n                            message: result.message\r\n                        });\r\n                    });\r\n                });\r\n                setUserData({\r\n                    name: user.name,\r\n                    lastName : user.lastName,\r\n                    email: user.email,\r\n                    password: \"\",\r\n                    role: user.role,\r\n                    avatar: user.avatar\r\n                  \r\n                   })\r\n                   setIsVisibleModal(false)\r\n                   setReloadUsers(true)\r\n            }else{\r\n                \r\n                updateUserApi(token,userUpdate,user._id).then(result =>{\r\n                    notification[\"success\" ]({\r\n                        message: result.message\r\n                    });\r\n                    setUserData({\r\n                        name: user.name,\r\n                        lastName : user.lastName,\r\n                        email: user.email,\r\n                        password: \"\",\r\n                        role: user.role,\r\n                        avatar: user.avatar\r\n                      \r\n                       })\r\n\r\n                       setIsVisibleModal(false)\r\n                       setReloadUsers(true)\r\n                });\r\n\r\n              \r\n            }\r\n\r\n     } }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"edit-user-form\">\r\n            <UploadAvatar avatar={avatar} setAvatar={setAvatar}/>\r\n             <EditForm userData={userData} setUserData={setUserData} updateUser={updateUser}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction UploadAvatar(props){\r\n    const {avatar,setAvatar} = props;\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(avatar){\r\n            if(avatar.preview){\r\n                setAvatarUrl(avatar.preview)\r\n            }else{\r\n                setAvatarUrl(avatar)\r\n            }\r\n        }else{\r\n            setAvatarUrl(null)\r\n        }\r\n    },[avatar])\r\n\r\n    const onDrop = useCallback(\r\n        acceptedFiles => {\r\n            const file = acceptedFiles[0]\r\n            setAvatar({file,preview : URL.createObjectURL(file)});\r\n        },\r\n        [setAvatar]\r\n\r\n    );\r\n   \r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        accept: \"image/jpeg, image/png\",\r\n        noKeyBoard: true,\r\n        onDrop\r\n \r\n    });\r\n\r\n    return(\r\n\r\n        <div className=\"upload-avatar\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n                <Avatar size={150} src={NoAvatar} />\r\n            ):(\r\n                <Avatar size={150} src={avatar ? avatarUrl : NoAvatar} />\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction EditForm(props){\r\n    const{ userData, setUserData, updateUser} = props\r\n    const {Option} = Select;\r\n\r\n\r\n    const changeForm = (e) => {\r\n       \r\n        setUserData({\r\n          ...userData,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      \r\n    };\r\n\r\n\r\n    const [formValid, setFormValid] = useState({\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n      });\r\n    \r\n     \r\n\r\n    const inputValidation = (e) => {\r\n        const { type, name } = e.target;\r\n      \r\n        if (type === \"email\") {\r\n          setFormValid({\r\n            ...formValid,\r\n            [name]: emailValidation(e.target),\r\n          });\r\n          \r\n        }\r\n    \r\n        if (type === \"password\") {\r\n          setFormValid({\r\n            ...formValid,\r\n            [name]: minLengthValidation(e.target, 6),\r\n          });\r\n        }\r\n    \r\n        if (type === \"checkbox\") {\r\n          setFormValid({\r\n            ...formValid,\r\n            [name]: e.target.checked,\r\n          });\r\n        }\r\n      };\r\n\r\n    return(\r\n       <Form className=\"form-edit\"\r\n             onFinish={updateUser}\r\n             onChange={changeForm}\r\n       >\r\n        <Row gutter={24}>\r\n            <Col span={12}> \r\n              <Form.Item>\r\n                 <Input prefix={<UserOutlined/>}\r\n                 name= \"name\"\r\n                  placeholder=\"Nombre\"\r\n                  value={userData.name}\r\n                  maxLength={50}\r\n                  />\r\n               \r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}> \r\n                <Form.Item>\r\n                    <Input prefix={<UserOutlined/>}\r\n                        name = \"lastName\"\r\n                        placeholder=\"Apellido\"\r\n                        value={userData.lastName}\r\n                       maxLength={50}\r\n                    />\r\n                </Form.Item>\r\n            \r\n             </Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n            <Col span={12}> \r\n                <Form.Item>\r\n                    <Input prefix={<MailOutlined/>}\r\n                        name = \"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Correo\"\r\n                        value={userData.email}\r\n                        onChange={inputValidation}\r\n                        maxLength={100}\r\n                       \r\n                    />\r\n                </Form.Item>\r\n           \r\n            </Col>\r\n            <Col span={12}>  \r\n                <Form.Item>\r\n                      <Select\r\n                           placeholder=\"Selecciona un rol\"\r\n                            value={userData.role}\r\n            \r\n                        >\r\n                            <Option value= \"admin\">Administrador</Option>\r\n                            <Option value = \"editor\">Editor</Option>\r\n                            <Option value = \"reviewer\">Revisor</Option>\r\n\r\n                        </Select>\r\n                </Form.Item>\r\n           \r\n            </Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n            <Col span={12}>\r\n                <Form.Item>\r\n                    <Input\r\n                        name= \"password\"\r\n                        prefix={<LockOutlined/>}\r\n                        type=\"password\"\r\n                        value={userData.password}\r\n                        placeholder=\"Contraseña\"\r\n                        onChange={inputValidation}\r\n                        maxLength={20}\r\n                      \r\n                    />\r\n                </Form.Item>\r\n                \r\n             </Col>\r\n\r\n            <Col span={12}> \r\n            \r\n            <Form.Item>\r\n                    <Input\r\n                       name=\"repeatPassword\"\r\n                        prefix={<LockOutlined/>}\r\n                        type=\"password\"\r\n                        defaultValue=\"\"\r\n                        value={userData.repeatPassword}\r\n                        placeholder=\"Repita su Contraseña\"\r\n                        onChange={inputValidation}\r\n                        maxLength={20}\r\n                    />\r\n                </Form.Item>\r\n             </Col>\r\n        </Row>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\r\n                Actualizar Usuario\r\n            </Button>\r\n        </Form.Item>\r\n       </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}