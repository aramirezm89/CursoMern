{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Users\\\\ListUsers\\\\ListUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button, notification, Modal as ModalAntd } from \"antd\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport EditUserForm from \"../EditUserForm\";\nimport { getAvatarApi, activateUserApi, deleteUserApi } from \"../../../api/user\";\nimport { getAccessTokenApi } from \"../../../api/auth\";\nimport Modal from \"../../../Modal\";\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\";\nimport \".//ListUsers.scss\";\nconst {\n  confirm\n} = ModalAntd;\nexport default function ListUsers(props) {\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActive, setViewUsersActive] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  const showDeleteConfirm = props => {\n    const accessToken = getAccessTokenApi();\n    const {\n      user\n    } = props;\n    confirm({\n      title: \"Eliminando el usuario\",\n      content: `Estas seguro que deseas eliminar a ${user.email}`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification[\"error\"]({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => {\n      setViewUsersActive(!viewUsersActive);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, viewUsersActive ? \" Usuarios Activos\" : \" Usuarios Inactivos\")), viewUsersActive ? /*#__PURE__*/React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    setReloadUsers: setReloadUsers,\n    showDeleteConfirm: showDeleteConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    setReloadUsers: setReloadUsers,\n    showDeleteConfirm: showDeleteConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent,\n    setReloadUsers,\n    showDeleteConfirm\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editando Usuario: ${user.name} ${user.lastName}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditUserForm, {\n      user: user,\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserActive, {\n      user: user,\n      editUser: editUser,\n      setReloadUsers: setReloadUsers,\n      showDeleteConfirm: showDeleteConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction UserActive(props) {\n  const {\n    user,\n    editUser,\n    setReloadUsers,\n    showDeleteConfirm\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const desactivateUser = () => {\n    const accessToken = getAccessTokenApi();\n    activateUserApi(accessToken, user._id, false).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification[\"error\"]({\n        message: err\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: desactivateUser,\n      icon: /*#__PURE__*/React.createElement(StopOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }\n      }),\n      title: \"Desactivar Ususario\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 19\n        }\n      }),\n      tile: \"Eliminar Usuario\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }),\n    title: `\n            ${user.name ? user.name : \"No existe nombre\"}\n            ${user.lastName ? user.lastName : \"No existe Apellido\"}\n        \n            `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive,\n    setReloadUsers,\n    showDeleteConfirm\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserInactive, {\n      user: user,\n      setReloadUsers: setReloadUsers,\n      showDeleteConfirm: showDeleteConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  });\n}\n\nfunction UserInactive(props) {\n  const {\n    user,\n    setReloadUsers,\n    showDeleteConfirm\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const activateUser = () => {\n    const token = getAccessTokenApi();\n    activateUserApi(token, user._id, true).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification[\"error\"]({\n        message: err.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: activateUser,\n      icon: /*#__PURE__*/React.createElement(CheckOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }),\n    title: `\n                ${user.name ? user.name : \"No existe nombre\"}\n                ${user.lastName ? user.lastName : \"No existe Apellido\"}\n                \n                `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","notification","Modal","ModalAntd","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","EditUserForm","getAvatarApi","activateUserApi","deleteUserApi","getAccessTokenApi","NoAvatar","confirm","ListUsers","props","usersActive","usersInactive","setReloadUsers","viewUsersActive","setViewUsersActive","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","showDeleteConfirm","accessToken","user","title","content","email","okText","okType","cancelText","onOk","_id","then","response","message","catch","err","UsersActive","editUser","name","lastName","UserActive","avatar","setAvatar","desactivateUser","UsersInactive","UserInactive","activateUser","token"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Switch,List,Avatar,Button,notification,Modal as ModalAntd} from \"antd\";\r\nimport {EditOutlined,StopOutlined,DeleteOutlined,CheckOutlined  } from \"@ant-design/icons\";\r\nimport EditUserForm from \"../EditUserForm\"\r\nimport {getAvatarApi,activateUserApi,deleteUserApi} from \"../../../api/user\"\r\nimport {getAccessTokenApi} from \"../../../api/auth\"\r\nimport Modal from \"../../../Modal\"\r\n\r\n import NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\"\r\n import \".//ListUsers.scss\"\r\n\r\n const {confirm}= ModalAntd;\r\n\r\n export default function ListUsers(props){\r\n     const {usersActive, usersInactive,setReloadUsers} =  props;\r\n     const [viewUsersActive, setViewUsersActive] = useState(true)\r\n     const [isVisibleModal, setIsVisibleModal] = useState(false)\r\n     const [modalTitle, setModalTitle] = useState(\"\")\r\n     const [modalContent, setModalContent] = useState(null)\r\n     const showDeleteConfirm = (props) =>{\r\n        const accessToken = getAccessTokenApi();\r\n        const {user} = props;\r\n        \r\n        confirm({\r\n            title: \"Eliminando el usuario\",\r\n            content: `Estas seguro que deseas eliminar a ${user.email}`,\r\n            okText: \"Eliminar\",\r\n            okType: \"danger\",\r\n            cancelText: \"Cancelar\",\r\n            onOk(){\r\n               deleteUserApi(accessToken,user._id).then(response =>{\r\n                    notification[\"success\"]({\r\n                        message: response\r\n                    })\r\n                    setReloadUsers(true);\r\n                }).catch(err=>{\r\n                    notification[\"error\"]({\r\n                        message: err \r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n     \r\n    \r\n     return(\r\n        \r\n         <div className=\"list-users\">\r\n             <div className=\"list-users-switch\">\r\n                <Switch defaultChecked onChange={()=>{\r\n                    setViewUsersActive(!viewUsersActive)\r\n                }}\r\n                />\r\n                <span>\r\n                    {viewUsersActive ? \" Usuarios Activos\" : \" Usuarios Inactivos\"}\r\n                </span>\r\n             </div>\r\n            {viewUsersActive ?(\r\n                 <UsersActive \r\n                 usersActive={usersActive} \r\n                 setIsVisibleModal={setIsVisibleModal} \r\n                 setModalTitle={setModalTitle}\r\n                 setModalContent={setModalContent}\r\n                 setReloadUsers={setReloadUsers}\r\n                 showDeleteConfirm={showDeleteConfirm}\r\n                 />\r\n                  ):(\r\n                 <UsersInactive usersInactive={usersInactive} setReloadUsers ={setReloadUsers} showDeleteConfirm={showDeleteConfirm}/>\r\n                  ) }\r\n            \r\n            <Modal  title={modalTitle} isVisible={isVisibleModal} setIsVisible={setIsVisibleModal} >\r\n                {modalContent}\r\n            </Modal>\r\n\r\n         </div>\r\n     )\r\n }\r\n\r\n function UsersActive(props){\r\n     const {usersActive,setIsVisibleModal,setModalTitle,setModalContent,setReloadUsers, showDeleteConfirm} = props;\r\n     \r\n     const editUser = user =>{\r\n         setIsVisibleModal(true)\r\n         setModalTitle(`Editando Usuario: ${user.name} ${user.lastName}`);\r\n         setModalContent(<EditUserForm user={user} setIsVisibleModal={setIsVisibleModal} setReloadUsers={setReloadUsers}/>);\r\n     }\r\n      \r\n\r\n   \r\n     return (\r\n         <List \r\n         className=\"users-active\"\r\n         itemLayout=\"horizontal\"\r\n         dataSource={usersActive}\r\n         renderItem={user => <UserActive user={user} editUser={editUser} setReloadUsers={setReloadUsers} showDeleteConfirm={showDeleteConfirm}/>}\r\n         />\r\n     )\r\n }\r\n\r\n\r\n function UserActive(props){\r\n  const { user, editUser,setReloadUsers, showDeleteConfirm} = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n\r\n  useEffect(()=>{\r\n     if (user.avatar){\r\n         getAvatarApi(user.avatar).then(response =>{\r\n             setAvatar(response)\r\n         })\r\n     }else{\r\n         setAvatar(null);\r\n     }\r\n  },[user])\r\n\r\n\r\n  const desactivateUser = ()=>{\r\n    const accessToken = getAccessTokenApi();\r\n    activateUserApi(accessToken, user._id, false).then(response=>{\r\n        notification[\"success\"]({\r\n            message: response\r\n        })\r\n        setReloadUsers(true);\r\n    }).catch(err=>{\r\n        notification[\"error\"]({\r\n            message: err\r\n        })\r\n    })\r\n }\r\n  \r\n\r\n\r\n  return(\r\n        <List.Item\r\n                \r\n        actions={[\r\n            <Button\r\n            type=\"primary\"\r\n                onClick={ () => editUser(user)}\r\n                icon={<EditOutlined/>}\r\n            />,\r\n\r\n            <Button\r\n                type=\"danger\"\r\n                onClick={desactivateUser}\r\n                icon={<StopOutlined/>}\r\n                title=\"Desactivar Ususario\"\r\n            />,\r\n            <Button\r\n            type=\"danger\"\r\n            onClick={showDeleteConfirm}\r\n            icon={<DeleteOutlined/>}\r\n            tile=\"Eliminar Usuario\"\r\n            />\r\n\r\n        \r\n            \r\n        ]}\r\n    \r\n    >\r\n        \r\n        <List.Item.Meta\r\n            avatar={<Avatar src={avatar ? avatar : NoAvatar}/>}\r\n            title={`\r\n            ${user.name ? user.name : \"No existe nombre\"}\r\n            ${user.lastName ? user.lastName : \"No existe Apellido\"}\r\n        \r\n            `  \r\n            }\r\n            description={user.email}\r\n            \r\n        />\r\n    </List.Item>\r\n    )\r\n    }\r\n\r\n    function UsersInactive(props){\r\n        const {usersInactive,setReloadUsers, showDeleteConfirm} = props\r\n        return ( \r\n            <List \r\n            className=\"users-active\"\r\n            itemLayout=\"horizontal\"\r\n            dataSource={usersInactive}\r\n            renderItem={user => <UserInactive user={user} setReloadUsers={setReloadUsers} showDeleteConfirm={showDeleteConfirm}/>}\r\n            />\r\n        )\r\n}\r\n\r\n    function UserInactive (props){\r\n        const {user,setReloadUsers,showDeleteConfirm} = props;\r\n        const [avatar, setAvatar] = useState(null);\r\n  \r\n        useEffect(()=>{\r\n           if (user.avatar){\r\n               getAvatarApi(user.avatar).then(response =>{\r\n                   setAvatar(response)\r\n               })\r\n           }else{\r\n               setAvatar(null);\r\n           }\r\n        },[user])\r\n\r\n\r\n\r\n        const activateUser = ()=>{\r\n            const token  = getAccessTokenApi();\r\n            activateUserApi(token,user._id,true).then(response=>{\r\n                notification[\"success\"]({\r\n                    message : response\r\n                })\r\n                setReloadUsers(true)\r\n            }).catch(err =>{\r\n               notification[\"error\"]({\r\n                   message : err.message\r\n               })\r\n            })\r\n        }\r\n\r\n   \r\n        return(\r\n            <List.Item\r\n                \r\n            actions={[\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={activateUser}\r\n                    icon={<CheckOutlined/>}\r\n                />,\r\n\r\n                \r\n                <Button\r\n                type=\"danger\"\r\n                onClick={showDeleteConfirm}\r\n                icon={<DeleteOutlined/>}\r\n                />\r\n\r\n                \r\n                \r\n            ]}\r\n            \r\n            >\r\n            \r\n                <List.Item.Meta\r\n                avatar={<Avatar src={avatar ? avatar : NoAvatar}/>}\r\n                title={`\r\n                ${user.name ? user.name : \"No existe nombre\"}\r\n                ${user.lastName ? user.lastName : \"No existe Apellido\"}\r\n                \r\n                `  \r\n                }\r\n                description={user.email}\r\n                />\r\n            </List.Item>\r\n        )\r\n    }"]},"metadata":{},"sourceType":"module"}