{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\metal\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Users\\\\ListUsers\\\\ListUsers.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, List, Avatar, Button, notification, Modal as ModalAntd } from \"antd\";\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport EditUserForm from \"../EditUserForm\";\nimport AddUserForm from \"../AddUserForm\";\nimport { getAvatarApi, activateUserApi, deleteUserApi } from \"../../../api/user\";\nimport { getAccessTokenApi } from \"../../../api/auth\";\nimport Modal from \"../../../Modal\";\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\";\nimport \".//ListUsers.scss\";\nconst {\n  confirm\n} = ModalAntd;\nexport default function ListUsers(props) {\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActive, setViewUsersActive] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  const addUserModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle(\"Creando nuevo usuario\");\n    setModalContent( /*#__PURE__*/React.createElement(AddUserForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users-header-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => {\n      setViewUsersActive(!viewUsersActive);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, viewUsersActive ? \" Usuarios Activos\" : \" Usuarios Inactivos\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: addUserModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Nuevo Usuario...\")), viewUsersActive ? /*#__PURE__*/React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    setReloadUsers: setReloadUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    setReloadUsers: setReloadUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent,\n    setReloadUsers\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editando Usuario: ${user.name} ${user.lastName}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditUserForm, {\n      user: user,\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserActive, {\n      user: user,\n      editUser: editUser,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction UserActive(props) {\n  const {\n    user,\n    editUser,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const desactivateUser = () => {\n    const accessToken = getAccessTokenApi();\n    activateUserApi(accessToken, user._id, false).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification[\"error\"]({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando el usuario\",\n      content: `Estas seguro que deseas eliminar a ${user.email}`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification[\"error\"]({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: desactivateUser,\n      icon: /*#__PURE__*/React.createElement(StopOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }),\n      title: \"Desactivar Ususario\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }),\n      tile: \"Eliminar Usuario\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }),\n    title: `\n            ${user.name ? user.name : \"No existe nombre\"}\n            ${user.lastName ? user.lastName : \"No existe Apellido\"}\n        \n            `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive,\n    setReloadUsers\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserInactive, {\n      user: user,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction UserInactive(props) {\n  const {\n    user,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const activateUser = () => {\n    const token = getAccessTokenApi();\n    activateUserApi(token, user._id, true).then(response => {\n      notification[\"success\"]({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification[\"error\"]({\n        message: err.message\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando el usuario\",\n      content: `Estas seguro que deseas eliminar a ${user.email}`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification[\"success\"]({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification[\"error\"]({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: activateUser,\n      icon: /*#__PURE__*/React.createElement(CheckOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }),\n    title: `\n                ${user.name ? user.name : \"No existe nombre\"}\n                ${user.lastName ? user.lastName : \"No existe Apellido\"}\n                \n                `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","notification","Modal","ModalAntd","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","EditUserForm","AddUserForm","getAvatarApi","activateUserApi","deleteUserApi","getAccessTokenApi","NoAvatar","confirm","ListUsers","props","usersActive","usersInactive","setReloadUsers","viewUsersActive","setViewUsersActive","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","addUserModal","UsersActive","editUser","user","name","lastName","UserActive","avatar","setAvatar","then","response","desactivateUser","accessToken","_id","message","catch","err","showDeleteConfirm","title","content","email","okText","okType","cancelText","onOk","UsersInactive","UserInactive","activateUser","token"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Switch,\r\n  List,\r\n  Avatar,\r\n  Button,\r\n  notification,\r\n  Modal as ModalAntd,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  StopOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport EditUserForm from \"../EditUserForm\";\r\nimport AddUserForm from \"../AddUserForm\";\r\nimport {\r\n  getAvatarApi,\r\n  activateUserApi,\r\n  deleteUserApi,\r\n} from \"../../../api/user\";\r\nimport { getAccessTokenApi } from \"../../../api/auth\";\r\nimport Modal from \"../../../Modal\";\r\n\r\nimport NoAvatar from \"../../../assets/images/png/9.1 no-avatar.png\";\r\nimport \".//ListUsers.scss\";\r\n\r\nconst { confirm } = ModalAntd;\r\n\r\nexport default function ListUsers(props) {\r\n  const { usersActive, usersInactive, setReloadUsers } = props;\r\n  const [viewUsersActive, setViewUsersActive] = useState(true);\r\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [modalContent, setModalContent] = useState(null);\r\n\r\n  const addUserModal = () => {\r\n    setIsVisibleModal(true);\r\n    setModalTitle(\"Creando nuevo usuario\");\r\n    setModalContent(\r\n      <AddUserForm\r\n        setIsVisibleModal={setIsVisibleModal}\r\n        setReloadUsers={setReloadUsers}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"list-users\">\r\n      <div className=\"list-users-header\">\r\n        <div className=\"list-users-header-switch\">\r\n          <Switch\r\n            defaultChecked\r\n            onChange={() => {\r\n              setViewUsersActive(!viewUsersActive);\r\n            }}\r\n          />\r\n          <span>\r\n            {viewUsersActive ? \" Usuarios Activos\" : \" Usuarios Inactivos\"}\r\n          </span>\r\n        </div>\r\n\r\n        <Button type=\"primary\" onClick={addUserModal}>\r\n          Nuevo Usuario...\r\n        </Button>\r\n      </div>\r\n      {/*  */}\r\n\r\n      {viewUsersActive ? (\r\n        <UsersActive\r\n          usersActive={usersActive}\r\n          setIsVisibleModal={setIsVisibleModal}\r\n          setModalTitle={setModalTitle}\r\n          setModalContent={setModalContent}\r\n          setReloadUsers={setReloadUsers}\r\n        />\r\n      ) : (\r\n        <UsersInactive\r\n          usersInactive={usersInactive}\r\n          setReloadUsers={setReloadUsers}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        title={modalTitle}\r\n        isVisible={isVisibleModal}\r\n        setIsVisible={setIsVisibleModal}\r\n      >\r\n        {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UsersActive(props) {\r\n  const {\r\n    usersActive,\r\n    setIsVisibleModal,\r\n    setModalTitle,\r\n    setModalContent,\r\n    setReloadUsers,\r\n  } = props;\r\n\r\n  const editUser = (user) => {\r\n    setIsVisibleModal(true);\r\n    setModalTitle(`Editando Usuario: ${user.name} ${user.lastName}`);\r\n    setModalContent(\r\n      <EditUserForm\r\n        user={user}\r\n        setIsVisibleModal={setIsVisibleModal}\r\n        setReloadUsers={setReloadUsers}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <List\r\n      className=\"users-active\"\r\n      itemLayout=\"horizontal\"\r\n      dataSource={usersActive}\r\n      renderItem={(user) => (\r\n        <UserActive\r\n          user={user}\r\n          editUser={editUser}\r\n          setReloadUsers={setReloadUsers}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nfunction UserActive(props) {\r\n  const { user, editUser, setReloadUsers } = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (user.avatar) {\r\n      getAvatarApi(user.avatar).then((response) => {\r\n        setAvatar(response);\r\n      });\r\n    } else {\r\n      setAvatar(null);\r\n    }\r\n  }, [user]);\r\n\r\n  const desactivateUser = () => {\r\n    const accessToken = getAccessTokenApi();\r\n    activateUserApi(accessToken, user._id, false)\r\n      .then((response) => {\r\n        notification[\"success\"]({\r\n          message: response,\r\n        });\r\n        setReloadUsers(true);\r\n      })\r\n      .catch((err) => {\r\n        notification[\"error\"]({\r\n          message: err,\r\n        });\r\n      });\r\n  };\r\n\r\n  const showDeleteConfirm = () => {\r\n    const accessToken = getAccessTokenApi();\r\n\r\n    confirm({\r\n      title: \"Eliminando el usuario\",\r\n      content: `Estas seguro que deseas eliminar a ${user.email}`,\r\n      okText: \"Eliminar\",\r\n      okType: \"danger\",\r\n      cancelText: \"Cancelar\",\r\n      onOk() {\r\n        deleteUserApi(accessToken, user._id)\r\n          .then((response) => {\r\n            notification[\"success\"]({\r\n              message: response,\r\n            });\r\n            setReloadUsers(true);\r\n          })\r\n          .catch((err) => {\r\n            notification[\"error\"]({\r\n              message: err,\r\n            });\r\n          });\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <List.Item\r\n      actions={[\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => editUser(user)}\r\n          icon={<EditOutlined />}\r\n        />,\r\n\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={desactivateUser}\r\n          icon={<StopOutlined />}\r\n          title=\"Desactivar Ususario\"\r\n        />,\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={showDeleteConfirm}\r\n          icon={<DeleteOutlined />}\r\n          tile=\"Eliminar Usuario\"\r\n        />,\r\n      ]}\r\n    >\r\n      <List.Item.Meta\r\n        avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n        title={`\r\n            ${user.name ? user.name : \"No existe nombre\"}\r\n            ${user.lastName ? user.lastName : \"No existe Apellido\"}\r\n        \r\n            `}\r\n        description={user.email}\r\n      />\r\n    </List.Item>\r\n  );\r\n}\r\n\r\nfunction UsersInactive(props) {\r\n  const { usersInactive, setReloadUsers } = props;\r\n  return (\r\n    <List\r\n      className=\"users-active\"\r\n      itemLayout=\"horizontal\"\r\n      dataSource={usersInactive}\r\n      renderItem={(user) => (\r\n        <UserInactive user={user} setReloadUsers={setReloadUsers} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nfunction UserInactive(props) {\r\n  const { user, setReloadUsers } = props;\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (user.avatar) {\r\n      getAvatarApi(user.avatar).then((response) => {\r\n        setAvatar(response);\r\n      });\r\n    } else {\r\n      setAvatar(null);\r\n    }\r\n  }, [user]);\r\n\r\n  const activateUser = () => {\r\n    const token = getAccessTokenApi();\r\n    activateUserApi(token, user._id, true)\r\n      .then((response) => {\r\n        notification[\"success\"]({\r\n          message: response,\r\n        });\r\n        setReloadUsers(true);\r\n      })\r\n      .catch((err) => {\r\n        notification[\"error\"]({\r\n          message: err.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  const showDeleteConfirm = () => {\r\n    const accessToken = getAccessTokenApi();\r\n\r\n    confirm({\r\n      title: \"Eliminando el usuario\",\r\n      content: `Estas seguro que deseas eliminar a ${user.email}`,\r\n      okText: \"Eliminar\",\r\n      okType: \"danger\",\r\n      cancelText: \"Cancelar\",\r\n      onOk() {\r\n        deleteUserApi(accessToken, user._id)\r\n          .then((response) => {\r\n            notification[\"success\"]({\r\n              message: response,\r\n            });\r\n            setReloadUsers(true);\r\n          })\r\n          .catch((err) => {\r\n            notification[\"error\"]({\r\n              message: err,\r\n            });\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <List.Item\r\n      actions={[\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={activateUser}\r\n          icon={<CheckOutlined />}\r\n        />,\r\n\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={showDeleteConfirm}\r\n          icon={<DeleteOutlined />}\r\n        />,\r\n      ]}\r\n    >\r\n      <List.Item.Meta\r\n        avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\r\n        title={`\r\n                ${user.name ? user.name : \"No existe nombre\"}\r\n                ${user.lastName ? user.lastName : \"No existe Apellido\"}\r\n                \r\n                `}\r\n        description={user.email}\r\n      />\r\n    </List.Item>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}