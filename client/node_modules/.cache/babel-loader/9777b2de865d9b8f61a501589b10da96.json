{"ast":null,"code":"export function minLengthValidation(inputData,minLength){var value=inputData.value;removeClassErrorSucces(inputData);if(value.length>=minLength){inputData.classList.add(\"success\");return true;}else{inputData.classList.add(\"error\");return false;}}export function emailValidation(inputData){var emailValid=/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;var value=inputData.value;removeClassErrorSucces(inputData);var resultValidation=emailValid.test(value);if(resultValidation===true){inputData.classList.add(\"success\");return true;}else{inputData.classList.add(\"error\");return false;}}function removeClassErrorSucces(inputData){inputData.classList.remove(\"success\");inputData.classList.remove(\"error\");}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/utils/formValidation.js"],"names":["minLengthValidation","inputData","minLength","value","removeClassErrorSucces","length","classList","add","emailValidation","emailValid","resultValidation","test","remove"],"mappings":"AAAA,MAAO,SAASA,CAAAA,mBAAT,CAA6BC,SAA7B,CAAwCC,SAAxC,CAAmD,IAChDC,CAAAA,KADgD,CACtCF,SADsC,CAChDE,KADgD,CAGxDC,sBAAsB,CAACH,SAAD,CAAtB,CAEA,GAAIE,KAAK,CAACE,MAAN,EAAgBH,SAApB,CAA+B,CAC7BD,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,SAAxB,EACA,MAAO,KAAP,CACD,CAHD,IAGO,CACLN,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,OAAxB,EACA,MAAO,MAAP,CACD,CACF,CAED,MAAO,SAASC,CAAAA,eAAT,CAAyBP,SAAzB,CAAoC,CACzC,GAAMQ,CAAAA,UAAU,CAAG,iEAAnB,CADyC,GAEjCN,CAAAA,KAFiC,CAEvBF,SAFuB,CAEjCE,KAFiC,CAIzCC,sBAAsB,CAACH,SAAD,CAAtB,CAEA,GAAMS,CAAAA,gBAAgB,CAAGD,UAAU,CAACE,IAAX,CAAgBR,KAAhB,CAAzB,CAEA,GAAIO,gBAAgB,GAAK,IAAzB,CAA+B,CAC7BT,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,SAAxB,EACA,MAAO,KAAP,CACD,CAHD,IAGO,CACLN,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,OAAxB,EACA,MAAO,MAAP,CACD,CACF,CAED,QAASH,CAAAA,sBAAT,CAAgCH,SAAhC,CAA2C,CACzCA,SAAS,CAACK,SAAV,CAAoBM,MAApB,CAA2B,SAA3B,EACAX,SAAS,CAACK,SAAV,CAAoBM,MAApB,CAA2B,OAA3B,EACD","sourcesContent":["export function minLengthValidation(inputData, minLength) {\r\n  const { value } = inputData;\r\n\r\n  removeClassErrorSucces(inputData);\r\n\r\n  if (value.length >= minLength) {\r\n    inputData.classList.add(\"success\");\r\n    return true;\r\n  } else {\r\n    inputData.classList.add(\"error\");\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function emailValidation(inputData) {\r\n  const emailValid = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n  const { value } = inputData;\r\n\r\n  removeClassErrorSucces(inputData);\r\n\r\n  const resultValidation = emailValid.test(value);\r\n\r\n  if (resultValidation === true) {\r\n    inputData.classList.add(\"success\");\r\n    return true;\r\n  } else {\r\n    inputData.classList.add(\"error\");\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction removeClassErrorSucces(inputData) {\r\n  inputData.classList.remove(\"success\");\r\n  inputData.classList.remove(\"error\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}