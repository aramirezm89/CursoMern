{"ast":null,"code":"import{basePath,apiVersion}from\"./config\";import{ACCESS_TOKEN,REFRESH_TOKEN}from\"../utils/constants\";import jwtDecode from\"jwt-decode\";export function getAccessTokenApi(){var accessToken=localStorage.getItem(ACCESS_TOKEN);if(!accessToken||accessToken===\"null\"){return localStorage.removeItem(accessToken);}return willExpireToken(accessToken)?null:accessToken;}export function getRefreshTokenApi(){var refreshToken=localStorage.getItem(REFRESH_TOKEN);if(!refreshToken||refreshToken===\"null\"){return null;}return willExpireToken(refreshToken)?null:refreshToken;}export function refreshAcessTokenApi(refreshToken){var url=\"\".concat(basePath,\"/\").concat(apiVersion,\"/refresh-access-token\");var bodyObject={refreshToken:refreshToken};var params={method:\"POST\",body:JSON.stringify(bodyObject),headers:{\"Content-Type\":\"application/json\"}};fetch(url,params).then(function(response){if(response.status!==200){return null;}else{return response.json();}}).then(function(result){if(!result){}else{var accessToken=result.accessToken,_refreshToken=result.refreshToken;localStorage.setItem(ACCESS_TOKEN,accessToken);localStorage.setItem(REFRESH_TOKEN,_refreshToken);}});}export function logout(){localStorage.removeItem(ACCESS_TOKEN);localStorage.removeItem(REFRESH_TOKEN);}function willExpireToken(token){var seconds=60;var metaToken=jwtDecode(token);var exp=metaToken.exp;var now=(Date.now()+seconds)/1000;if(now>exp){logout();return true;}else{return false;}}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/api/auth.js"],"names":["basePath","apiVersion","ACCESS_TOKEN","REFRESH_TOKEN","jwtDecode","getAccessTokenApi","accessToken","localStorage","getItem","removeItem","willExpireToken","getRefreshTokenApi","refreshToken","refreshAcessTokenApi","url","bodyObject","params","method","body","JSON","stringify","headers","fetch","then","response","status","json","result","setItem","logout","token","seconds","metaToken","exp","now","Date"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,UAAnB,KAAqC,UAArC,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,oBAA5C,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAGA,MAAO,SAASC,CAAAA,iBAAT,EAA6B,CAGlC,GAAMC,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAApB,CAEA,GAAI,CAACI,WAAD,EAAgBA,WAAW,GAAK,MAApC,CAA4C,CAC1C,MAAOC,CAAAA,YAAY,CAACE,UAAb,CAAwBH,WAAxB,CAAP,CACD,CACD,MAAOI,CAAAA,eAAe,CAACJ,WAAD,CAAf,CAA+B,IAA/B,CAAqCA,WAA5C,CAGD,CAED,MAAO,SAASK,CAAAA,kBAAT,EAA8B,CACnC,GAAMC,CAAAA,YAAY,CAAGL,YAAY,CAACC,OAAb,CAAqBL,aAArB,CAArB,CACA,GAAI,CAACS,YAAD,EAAiBA,YAAY,GAAK,MAAtC,CAA8C,CAC5C,MAAO,KAAP,CACD,CAED,MAAOF,CAAAA,eAAe,CAACE,YAAD,CAAf,CAAgC,IAAhC,CAAuCA,YAA9C,CACD,CAED,MAAO,SAASC,CAAAA,oBAAT,CAA8BD,YAA9B,CAA4C,CACjD,GAAME,CAAAA,GAAG,WAAMd,QAAN,aAAkBC,UAAlB,yBAAT,CACA,GAAMc,CAAAA,UAAU,CAAG,CACjBH,YAAY,CAAEA,YADG,CAAnB,CAIA,GAAMI,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,MADK,CAEbC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAFO,CAGbM,OAAO,CAAE,CACP,eAAgB,kBADT,CAHI,CAAf,CAQAC,KAAK,CAACR,GAAD,CAAME,MAAN,CAAL,CACGO,IADH,CACQ,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAAxB,CAA6B,CAC3B,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACD,CACF,CAPH,EAQGH,IARH,CAQQ,SAACI,MAAD,CAAY,CAChB,GAAI,CAACA,MAAL,CAAa,CAEZ,CAFD,IAEO,IACGrB,CAAAA,WADH,CACiCqB,MADjC,CACGrB,WADH,CACgBM,aADhB,CACiCe,MADjC,CACgBf,YADhB,CAELL,YAAY,CAACqB,OAAb,CAAqB1B,YAArB,CAAmCI,WAAnC,EACAC,YAAY,CAACqB,OAAb,CAAqBzB,aAArB,CAAoCS,aAApC,EACD,CACF,CAhBH,EAiBD,CAED,MAAO,SAASiB,CAAAA,MAAT,EAAkB,CACvBtB,YAAY,CAACE,UAAb,CAAwBP,YAAxB,EACAK,YAAY,CAACE,UAAb,CAAwBN,aAAxB,EACD,CAED,QAASO,CAAAA,eAAT,CAAyBoB,KAAzB,CAAgC,CAC9B,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,GAAMC,CAAAA,SAAS,CAAG5B,SAAS,CAAC0B,KAAD,CAA3B,CAF8B,GAGtBG,CAAAA,GAHsB,CAGdD,SAHc,CAGtBC,GAHsB,CAI9B,GAAMC,CAAAA,GAAG,CAAG,CAACC,IAAI,CAACD,GAAL,GAAaH,OAAd,EAAyB,IAArC,CACA,GAAIG,GAAG,CAAGD,GAAV,CAAe,CACbJ,MAAM,GACN,MAAO,KAAP,CACD,CAHD,IAGO,CACL,MAAO,MAAP,CACD,CACF","sourcesContent":["import { basePath, apiVersion } from \"./config\";\r\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"../utils/constants\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\nexport function getAccessTokenApi() {\r\n   \r\n\r\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\r\n\r\n  if (!accessToken || accessToken === \"null\") {\r\n    return localStorage.removeItem(accessToken);\r\n  }\r\n  return willExpireToken(accessToken) ? null: accessToken;\r\n  \r\n  \r\n}\r\n\r\nexport function getRefreshTokenApi() {\r\n  const refreshToken = localStorage.getItem(REFRESH_TOKEN);\r\n  if (!refreshToken || refreshToken === \"null\") {\r\n    return null;\r\n  }\r\n\r\n  return willExpireToken(refreshToken) ? null : refreshToken;\r\n}\r\n\r\nexport function refreshAcessTokenApi(refreshToken) {\r\n  const url = `${basePath}/${apiVersion}/refresh-access-token`;\r\n  const bodyObject = {\r\n    refreshToken: refreshToken,\r\n  };\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(bodyObject),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status !== 200) {\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    })\r\n    .then((result) => {\r\n      if (!result) {\r\n       \r\n      } else {\r\n        const { accessToken, refreshToken } = result;\r\n        localStorage.setItem(ACCESS_TOKEN, accessToken);\r\n        localStorage.setItem(REFRESH_TOKEN, refreshToken);\r\n      }\r\n    });\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(ACCESS_TOKEN);\r\n  localStorage.removeItem(REFRESH_TOKEN);\r\n}\r\n\r\nfunction willExpireToken(token) {\r\n  const seconds = 60;\r\n  const metaToken = jwtDecode(token);\r\n  const { exp } = metaToken;\r\n  const now = (Date.now() + seconds) / 1000;\r\n  if (now > exp) {\r\n    logout()\r\n    return true; \r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}