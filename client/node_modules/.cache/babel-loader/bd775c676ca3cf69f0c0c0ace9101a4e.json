{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Admin\\\\LoginForm\\\\LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./LoginForm.scss\";\nimport { emailValidation, minLengthValidation } from \"../../../utils/formValidation\";\nimport { REFRESH_TOKEN, ACCESS_TOKEN } from \"../../../utils/constants\";\nimport { signInApi } from \"../../../api/user\";\nexport default function LoginForm() {\n  const [input, setInput] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false\n  });\n\n  const changeForm = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const inputValidation = e => {\n    const {\n      name,\n      type\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n  };\n\n  const login = async () => {\n    const result = await signInApi(input);\n    console.log(result);\n\n    if (result.message) {\n      notification[\"error\"]({\n        message: result.message\n      });\n    } else {\n      const {\n        accessToken,\n        refreshToken\n      } = result;\n      localStorage.setItem(ACCESS_TOKEN, accessToken);\n      localStorage.setItem(REFRESH_TOKEN, refreshToken);\n      notification[\"success\"]({\n        message: \"Bienvenido \"\n      });\n      window.location.href = \"/admin\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"login-form\",\n    onChange: changeForm,\n    onFinish: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Ingrese su email\",\n    className: \"login-form-input\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }),\n    maxlength: 50,\n    value: input.email,\n    onChange: inputValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"login-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }),\n    maxlength: 20,\n    value: input.password,\n    onChange: inputValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Admin/LoginForm/LoginForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","emailValidation","minLengthValidation","REFRESH_TOKEN","ACCESS_TOKEN","signInApi","LoginForm","input","setInput","email","password","formValid","setFormValid","changeForm","e","target","name","value","inputValidation","type","login","result","console","log","message","accessToken","refreshToken","localStorage","setItem","window","location","href","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./LoginForm.scss\";\r\nimport {\r\n  emailValidation,\r\n  minLengthValidation,\r\n} from \"../../../utils/formValidation\";\r\nimport { REFRESH_TOKEN, ACCESS_TOKEN } from \"../../../utils/constants\";\r\nimport { signInApi } from \"../../../api/user\";\r\n\r\nexport default function LoginForm() {\r\n  const [input, setInput] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  const changeForm = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const inputValidation = (e) => {\r\n    const { name, type } = e.target;\r\n    if (type === \"email\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: emailValidation(e.target),\r\n      });\r\n    }\r\n\r\n    if (type === \"password\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: minLengthValidation(e.target, 6),\r\n      });\r\n    }\r\n  };\r\n  const login = async () => {\r\n    const result = await signInApi(input);\r\n    console.log(result);\r\n    if (result.message) {\r\n      notification[\"error\"]({\r\n        message: result.message,\r\n      });\r\n    } else {\r\n      const { accessToken, refreshToken } = result;\r\n      localStorage.setItem(ACCESS_TOKEN, accessToken);\r\n      localStorage.setItem(REFRESH_TOKEN, refreshToken);\r\n\r\n      notification[\"success\"]({\r\n        message: \"Bienvenido \",\r\n      });\r\n\r\n      window.location.href = \"/admin\";\r\n    }\r\n  };\r\n  return (\r\n    <Form className=\"login-form\" onChange={changeForm} onFinish={login}>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Ingrese su email\"\r\n          className=\"login-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          maxlength={50}\r\n          value={input.email}\r\n          onChange={inputValidation}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          className=\"login-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          maxlength={20}\r\n          value={input.password}\r\n          onChange={inputValidation}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button htmlType=\"submit\" className=\"login-form-button\">\r\n          Entrar\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}