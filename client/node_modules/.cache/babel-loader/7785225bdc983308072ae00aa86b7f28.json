{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { emailValidation, minLengthValidation } from \"../../utils/formValidation\";\nimport \"./RegisterForm.scss\";\nexport default function RegisterForm() {\n  const [input, setInput] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privatePolicy: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privatePolicy: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privatePolicy\") {\n      setInput({ ...input,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setInput({ ...input,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const inputValidation = e => {\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  const register = () => {\n    console.log(formValid);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"register-form\",\n    onFinish: register,\n    onChange: changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"repeatPassword\",\n    placeholder: \"Repita su contrase\\xF1a\",\n    className: \"register-form-input\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(168, 171, 174 )\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }),\n    onChange: inputValidation,\n    value: input.repeatPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"privatePolicy\",\n    checked: input.privatePolicy,\n    onChange: inputValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"He leido y acepto la politica de privacidad.\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"horizontal\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"reset\",\n    className: \"register-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Borrar\"), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"register-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Crear cuenta\"))));\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","Space","UserOutlined","LockOutlined","emailValidation","minLengthValidation","RegisterForm","input","setInput","email","password","repeatPassword","privatePolicy","formValid","setFormValid","changeForm","e","target","name","checked","value","inputValidation","type","register","console","log","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  emailValidation,\r\n  minLengthValidation,\r\n} from \"../../utils/formValidation\";\r\n\r\nimport \"./RegisterForm.scss\";\r\n\r\nexport default function RegisterForm() {\r\n  const [input, setInput] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    privatePolicy: false,\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    email: false,\r\n    password: false,\r\n    repeatPassword: false,\r\n    privatePolicy: false,\r\n  });\r\n\r\n  const changeForm = (e) => {\r\n    if (e.target.name === \"privatePolicy\") {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.checked,\r\n      });\r\n    } else {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const inputValidation = (e) => {\r\n    const { type, name } = e.target;\r\n    if (type === \"email\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: emailValidation(e.target),\r\n      });\r\n    }\r\n\r\n    if (type === \"password\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: minLengthValidation(e.target, 6),\r\n      });\r\n    }\r\n\r\n    if (type === \"checkbox\") {\r\n      setFormValid({\r\n        ...formValid,\r\n        [name]: e.target.checked,\r\n      });\r\n    }\r\n  };\r\n\r\n  const register = () => {\r\n    console.log(formValid);\r\n  };\r\n  return (\r\n    <Form className=\"register-form\" onFinish={register} onChange={changeForm}>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"register-form-input\"\r\n          prefix={<UserOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.email}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          className=\"register-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.password}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          placeholder=\"Repita su contraseña\"\r\n          className=\"register-form-input\"\r\n          prefix={<LockOutlined style={{ color: \"rgba(168, 171, 174 )\" }} />}\r\n          onChange={inputValidation}\r\n          value={input.repeatPassword}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Checkbox\r\n          name=\"privatePolicy\"\r\n          checked={input.privatePolicy}\r\n          onChange={inputValidation}\r\n        >\r\n          He leido y acepto la politica de privacidad.\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Space direction=\"horizontal\" size={20}>\r\n          <Button htmlType=\"reset\" className=\"register-form-button\">\r\n            Borrar\r\n          </Button>\r\n          <Button htmlType=\"submit\" className=\"register-form-button\">\r\n            Crear cuenta\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}