{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\OneDrive\\\\CursoMERN\\\\ProyectoCurso\\\\client\\\\src\\\\components\\\\Web\\\\Blog\\\\PostListWeb\\\\PostListWeb.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Spin, List, notification, message } from \"antd\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nimport Pagination from \"../../../Pagination\";\nimport { getPostsApi } from \"../../../../api/post\";\nimport \"moment/locale/es\";\nimport \"./PostListWeb.scss\";\nexport default function PostListWeb(props) {\n  const {\n    location,\n    history\n  } = props;\n  const [posts, setPost] = useState({});\n  const {\n    page = 1\n  } = queryString.parse(location.search);\n  useEffect(() => {\n    getPostsApi(page, 12).then(response => {\n      if (response.code !== 200) {\n        notification[\"warning\"]({\n          message: response.message\n        });\n      } else {\n        setPost(response.posts);\n      }\n    }).catch(() => {\n      notification[\"error\"]({\n        message: \"Error del servidor.\"\n      });\n    });\n  }, [page]);\n  console.log(posts.docs);\n  return /*#__PURE__*/React.createElement(List, {\n    dataSource: posts.docs,\n    renderItem: post => /*#__PURE__*/React.createElement(Post, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  });\n\n  function Post(props) {\n    const {\n      post\n    } = props;\n    return /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      title: post.tile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/Antonio/OneDrive/CursoMERN/ProyectoCurso/client/src/components/Web/Blog/PostListWeb/PostListWeb.js"],"names":["React","useState","useEffect","Spin","List","notification","message","moment","queryString","Pagination","getPostsApi","PostListWeb","props","location","history","posts","setPost","page","parse","search","then","response","code","catch","console","log","docs","post","Post","tile"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,EAAaC,IAAb,EAAkBC,YAAlB,EAAgCC,OAAhC,QAA8C,MAA9C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAO,kBAAP;AAEA,OAAO,oBAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,QAAM;AAACC,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAqBF,KAA3B;AACA,QAAM,CAACG,KAAD,EAAQC,OAAR,IAAmBf,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAACgB,IAAAA,IAAI,GAAE;AAAP,MAAYT,WAAW,CAACU,KAAZ,CAAkBL,QAAQ,CAACM,MAA3B,CAAlB;AAEAjB,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,WAAW,CAACO,IAAD,EAAM,EAAN,CAAX,CAAqBG,IAArB,CAA0BC,QAAQ,IAAG;AACjC,UAAGA,QAAQ,CAACC,IAAT,KAAiB,GAApB,EAAwB;AACpBjB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACpBC,UAAAA,OAAO,EAACe,QAAQ,CAACf;AADG,SAAxB;AAGH,OAJD,MAIK;AACDU,QAAAA,OAAO,CAACK,QAAQ,CAACN,KAAV,CAAP;AACH;AACJ,KARD,EAQGQ,KARH,CAQU,MAAK;AACXlB,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClBC,QAAAA,OAAO,EAAC;AADU,OAAtB;AAGH,KAZD;AAaH,GAdQ,EAcP,CAACW,IAAD,CAdO,CAAT;AAiBAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAlB;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEX,KAAK,CAACW,IAAxB;AACM,IAAA,UAAU,EAAEC,IAAI,iBAAI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AASA,WAASC,IAAT,CAAchB,KAAd,EAAoB;AAChB,UAAM;AAACe,MAAAA;AAAD,QAASf,KAAf;AAED,wBACC,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACI,MAAA,KAAK,EAAEe,IAAI,CAACE,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADD;AAOF;AACJ","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {Spin,List,notification, message} from \"antd\";\r\nimport moment from \"moment\";\r\nimport queryString from \"query-string\";\r\nimport Pagination from \"../../../Pagination\";\r\nimport {getPostsApi} from \"../../../../api/post\";\r\nimport \"moment/locale/es\";\r\n\r\nimport \"./PostListWeb.scss\";\r\n\r\nexport default function PostListWeb(props) {\r\n    const {location,history} = props;\r\n    const [posts, setPost] = useState({});\r\n    const {page =1} = queryString.parse(location.search);\r\n    \r\n    useEffect(() =>{\r\n        getPostsApi(page,12).then(response =>{\r\n            if(response.code !==200){\r\n                notification[\"warning\"]({\r\n                    message:response.message\r\n                })\r\n            }else{\r\n                setPost(response.posts)\r\n            }\r\n        }).catch( () =>{\r\n            notification[\"error\"]({\r\n                message:\"Error del servidor.\"\r\n            })\r\n        })\r\n    },[page])\r\n\r\n\r\n    console.log(posts.docs)\r\n    return (\r\n      <List dataSource={posts.docs}\r\n            renderItem={post => <Post post={post}/>}\r\n      >\r\n        \r\n      </List>\r\n    )\r\n\r\n\r\n    function Post(props){\r\n        const {post} = props;\r\n\r\n       return(\r\n        <List.Item>\r\n        <List.Item.Meta \r\n            title={post.tile}\r\n        />\r\n    </List.Item>\r\n       )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}