{"ast":null,"code":"import{basePath,apiVersion}from\"./config\";export function getPostsApi(page,limit){var url=\"\".concat(basePath,\"/\").concat(apiVersion,\"/get-posts?page=\").concat(page,\"&limit=\").concat(limit);return fetch(url).then(function(response){return response.json();}).then(function(result){return result;}).catch(function(err){return err;});}export function deletePostApi(token,id){var url=\"\".concat(basePath,\"/\").concat(apiVersion,\"/delete-post/\").concat(id);var params={method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",Authorization:token}};return fetch(url,params).then(function(response){return response.json();}).then(function(result){return result;}).catch(function(err){return err;});}export function addPostApi(token,post){var url=\"\".concat(basePath,\"/\").concat(apiVersion,\"/add-post\");var params={method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:token},body:JSON.stringify(post)};return fetch(url,params).then(function(response){return response.json();}).then(function(result){return result;}).catch(function(err){return err;});}export function editPostAPi(token,id,data){var url=\"\".concat(basePath,\"/\").concat(apiVersion,\"/update-post/\").concat(id);var params={method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:token},body:JSON.stringify(data)};return fetch(url,params).then(function(response){return response.json();}).then(function(result){return result;}).catch(function(err){return err;});}export function getPostApi(urlPost){var url=\"\".concat(basePath,\"/\").concat(apiVersion,\"/get-post/\").concat(urlPost);return fetch(url).then(function(response){return response.json();}).then(function(result){return result;}).catch(function(err){return err;});}","map":{"version":3,"sources":["C:/Users/metal/OneDrive/CursoMERN/ProyectoCurso/client/src/api/post.js"],"names":["basePath","apiVersion","getPostsApi","page","limit","url","fetch","then","response","json","result","catch","err","deletePostApi","token","id","params","method","headers","Authorization","addPostApi","post","body","JSON","stringify","editPostAPi","data","getPostApi","urlPost"],"mappings":"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","sourcesContent":["import {basePath,apiVersion} from \"./config\";\r\n\r\nexport function getPostsApi(page,limit){\r\n    const url = `${basePath}/${apiVersion}/get-posts?page=${page}&limit=${limit}`\r\n\r\n   return fetch(url).then(response =>{\r\n        return response.json();\r\n\r\n    }).then(result =>{\r\n        return result\r\n    }).catch(err =>{\r\n        return err\r\n    })\r\n}\r\n\r\nexport function deletePostApi(token,id){\r\n    const url = `${basePath}/${apiVersion}/delete-post/${id}`;\r\n    const params={\r\n      method:\"DELETE\",\r\n      headers:{\r\n          \"Content-Type\" : \"application/json\",\r\n          Authorization : token\r\n      }\r\n    };\r\n\r\n    return fetch(url,params).then(response =>{\r\n        return response.json();\r\n    }).then(result =>{\r\n        return result;\r\n    }).catch(err =>{\r\n        return err;\r\n    })\r\n}\r\n\r\nexport function addPostApi(token,post){\r\n    const url = `${basePath}/${apiVersion}/add-post`;\r\n    const params = {\r\n       method:\"POST\",\r\n       headers:{\r\n        \"Content-Type\" : \"application/json\",\r\n        Authorization: token\r\n       },\r\n       body: JSON.stringify(post)\r\n    }\r\n\r\n   return  fetch(url, params).then(response =>{\r\n       return response.json();\r\n   }).then(result =>{\r\n       return result;\r\n   }).catch(err =>{\r\n       return err;\r\n   })\r\n\r\n}\r\n\r\nexport function editPostAPi(token,id, data){\r\n    const url = `${basePath}/${apiVersion}/update-post/${id}`\r\n    const params = {\r\n        method:\"PUT\",\r\n        headers:{\r\n            \"Content-Type\" : \"application/json\",\r\n            Authorization: token\r\n        },\r\n        body:JSON.stringify(data)\r\n    }\r\n\r\n    return fetch(url,params).then(response  =>{\r\n        return response.json();\r\n    }).then(result =>{\r\n        return result;\r\n    }).catch(err =>{\r\n        return err\r\n    })\r\n}\r\n\r\nexport function getPostApi(urlPost){\r\n    const url = `${basePath}/${apiVersion}/get-post/${urlPost}`;\r\n    \r\n    return fetch(url).then(response =>{\r\n        return response.json();\r\n    }).then(result =>{\r\n        return result;\r\n    }).catch( err =>{\r\n        return err\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}